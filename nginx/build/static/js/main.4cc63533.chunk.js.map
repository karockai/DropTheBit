{"version":3,"sources":["reportWebVitals.js","logo.svg","StockMarket.js","PlayerManager.js","Chat.js","InfoManager.js","FundManager.js","App.js","CanvasManager.js","StockChart.js","ChartTitle.js","utils.js","Timer.js","ChartComponent.js","useSound.js","audios/effect/drumUp.wav","audios/effect/drumDown.wav","audios/effect/hatUp.wav","audios/effect/hatDown.wav","SnackAlert.js","TradeStock.js","MyAsset.js","Message.js","audios/effect/check.mp3","audios/effect/bidSound.wav","audios/effect/askSound.wav","StockDoneList.js","ChatRoom.js","PlayerList.js","audios/music/King_Conga.mp3","audios/music/Mausoleum_Mash.mp3","audios/music/Deja_Vu.mp3","GameOverModal.js","ThreeSecTimer.js","audios/music/Tetris99.mp3","BidTab.js","BidEntity.js","BidTable.js","AskEntity.js","AskTable.js","TabControl.js","LayoutGrid.js","LayoutGridEffect.js","images/Logo.png","setPlayerName.js","LobbyPlayerCard.js","images/KeyMap.png","MusicLeader.js","MusicMember.js","Lobby.js","EnterRoom.js","Routes.js","GameManager.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","makeStyles","theme","root","width","backgroundColor","palette","background","paper","float","card","display","orange","inline","bullet","margin","modal_name","fontSize","marginBottom","modal_price","modal_arrow","maxWidth","Textfield","pos","modal","alignItems","justifyContent","height","border","boxShadow","shadows","padding","spacing","StockMarket","PlayerProfileCard","id","className","Avatar","image","NameHolder","name","this","props","Info","point","money","gain","InfoButton","buy","info","React","Component","variant","src","alt","style","Chat","title","InfoManager","withStyles","head","common","black","color","white","body","TableCell","action","hover","TableRow","table","typography","button","CustomizedTables","CanvasManager","candlesAppearance","wickStroke","fill","d","close","open","red","blue","stroke","candleStrokeWidth","widthRatio","opacity","StockChart","type","initialData","data","ratio","discontinuousTimeScaleProvider","inputDateAccessor","date","xScaleProvider","xScale","xAccessor","displayXAccessor","xExtents","last","Math","max","length","left","right","top","bottom","seriesName","yExtents","high","low","axisAt","orient","ticks","at","displayFormat","format","forChart","origin","defaultProps","fitWidth","ChartTitle","useState","textColor","setBullColor","isBullIcon","SetBullIcon","wonYield","SetYield","SetWonBefore","currentWon","SetWonCurrent","upDown","SetUpDown","useEffect","datas","before","curPrice","current","sub","yid","toFixed","icon","parseWonToStr","won","toString","Grid","container","justify","SplitByThree","value","substring","timeParse","Timer","time","setTime","socket","on","restGameTime","minute","parseInt","second","String","ShowTime","ChartComponent","setup","setAPI","addCandleData","Date","setAPIData","state","shift","setState","console","log","requestSocket","dataLength","emit","chartData","map","CircularProgress","isStart","playSound","sound","volume","soundInject","Howl","SnackAlertBtn","enqueueSnackbar","useSnackbar","Button","class","onClick","severity","onAlert","message","anchorOrigin","vertical","horizontal","autoHideDuration","label","SnackAlertFunc","preventDuplicate","useStyles","flexGrow","text","secondary","button_block","ArrowButton","classes","IconButton","aria-label","size","upEvent","downEvent","TradeStock","currentBid","SetBid","newBid","SetNewBid","currentVolume","SetVolume","newVolume","SetNewVolume","unitBid","SetUnit","isBind","SetBind","isFocus","SetFocus","status","val","vol","sellStatus","setSellStatus","buyStatus","setBuyStatus","myCash","myAsset","myCoin","myWallet","setWallet","isInit","setInit","VolumeUp","floor","VolumeDown","BidUp","Number","BidDown","RefreshBid","once","priceUnit","Buy","bid","bbid","price","roomID","socketID","Sell","sbid","HandleKeyUp","e","inputCtrl","keyCode","preventDefault","HatUp","play","HatDown","DrumUp","DrumDown","SetSellMaxCount","SetBuyMaxCount","useLayoutEffect","currentCash","cash","currentAsset","asset","currentCoin","coinVol","document","addEventListener","removeEventListener","costColor","grey","dateString","getMinutes","getSeconds","getMilliseconds","maxSnack","wrap","direction","item","TextField","onChange","target","ret","ExpBySymbol","button2","MyAsset","myAvg","currentAvg","avgPrice","Paper","fontWeight","Message","StockDoneList","doneItem","setItem","doneList","setList","messagesEnd","useRef","isMine","done","Check","BidSound","AskSound","scrollIntoView","behavior","GridList","idx","buySellColor","playerID","clear","ref","textAlign","ChatRoom","setMessage","resMsg","setResMsg","messages","setMessages","textInput","scrollToBottom","sendMessage","author","roomInfo","activeElement","focus","blur","dirction","inputRef","onFocus","SetInputCtrl","onBlur","event","inputProps","greenTheme","createMuiTheme","primary","green","score","PlayerList","players","setPlayers","playerArray","player","index","borderColor","myColor","myFont","xs","minWidth","GameOverModal","setOpen","rows","leaderBoard","history","useHistory","Modal","disablePortal","disableEnforceFocus","disableAutoFocus","disableBackdropClick","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","in","TableContainer","component","Table","TableHead","align","TableBody","row","scope","push","typo","Fade","forwardRef","children","onEnter","onExited","other","useSpring","from","to","onStart","onRest","div","ThreeSecTimer","signal","setTimeout","minHeight","BidTab","sell","currentBids","bidObject","BidEntity","reqJson","reqPrice","reqVol","fontStyle","BidTable","setTable","CancelBid","num","bidTable","CancelBidByKey","bidElem","AskEntity","AskTable","CancelAsk","askTable","CancelAskByKey","askElem","TabPanel","role","hidden","Box","p","Typography","a11yProps","TabControl","setValue","demo2","AppBar","position","Tabs","newValue","Tab","LayoutGrid","gameTime","useLocation","timerTime","musicList","Deja_Vu","King_Conga","Mausoleum_Mash","setInputCtrl","split","require","Howler","over","setOver","APIdata","Fragment","alignContents","justify-content","align-items","isChat","chat","bgm_audio","Audio","LayoutGridEffect","setTimerTime","setIsStart","SpecificMusic","threeSecTimerOpen","setThreeSecTimerOpen","paused","withRouter","params","window","location","indexOf","searchParams","URLSearchParams","tmp","setTemp","handleOnSave","onSave","buttonMsg","has","Logo","autoFocus","onKeyPress","key","transform","LobbyPlayerCard","CardContent","CardActions","Tetris99","formControl","selectEmpty","marginTop","MusicLeader","tmp_music","tmp_time","music","setMusic","strTime","strSetTime","MusicInput","FormControl","InputLabel","Select","labelId","musicName","MenuItem","ShowMusic","musicTime","noValidate","autoComplete","defaultValue","InputProps","readOnly","isSetUp","off","MusicPause","pathname","alert","KeyMapTemp","MusicMember","disabled","PutPlayer","setRoomInfo","roomLeader","setRoomLeader","socketId","setSocketId","soc","PutNewCard","playerList","Object","entries","getPlayersList","tmparr","room","SetRoomIdAndInfo","CheckLeader","protocol","host","getElementById","select","execCommand","EnterRoom","setName","setPlayer","setRoomID","playing","setPlaying","pause","sendName","get","useSound","isName","Routes","exact","path","render","GameManager","TestEmitButton","sendComment","ev","comment","RequestSocket","hash","io","today","setSocket","addMessage","user_count","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.4cc63533.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport {\n    FormHelperText,\n    Input,\n    FormControl,\n    makeStyles,\n    TextField,\n    InputAdornment,\n} from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport './PlayerManager.css';\nimport axios from 'axios';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\n// import {Fade} from './TradeModal.js';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport clsx from 'clsx';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '80%',\n        //   maxWidth: '30ch',\n        backgroundColor: theme.palette.background.paper,\n        float: 'left',\n    },\n    card: {\n        display: 'inline-block',\n    },\n    orange: {\n        backgroundColor: '#666666',\n    },\n    inline: {\n        display: 'inline',\n    },\n    bullet: {\n        width: '45%',\n        margin: '10px',\n    },\n    modal_name: {\n        fontSize: 60,\n        marginBottom: 14,\n    },\n    modal_price: {\n        fontSize: 55,\n        marginBottom: 50,\n    },\n    modal_arrow: {\n        maxWidth: '20px',\n        float: 'right',\n    },\n    Textfield: {\n        fontSize: 20,\n        marginBottom: 10,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        width: '500px',\n        height: '500px',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        float: 'auto',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(4, 6, 6),\n    },\n}));\nfunction StockRow(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const Fade = React.forwardRef(function Fade(props, ref) {\n        const { in: open, children, onEnter, onExited, ...other } = props;\n        const style = useSpring({\n            from: { opacity: 0 },\n            to: { opacity: open ? 1 : 0 },\n            onStart: () => {\n                if (open && onEnter) {\n                    onEnter();\n                }\n            },\n            onRest: () => {\n                if (!open && onExited) {\n                    onExited();\n                }\n            },\n        });\n        return (\n            <animated.div ref={ref} style={style} {...other}>\n                {children}\n            </animated.div>\n        );\n    });\n    return (\n        <Row>\n            <Button\n                className=\"button\"\n                onClick={handleOpen}\n                style={{ width: '100%' }}\n            >\n                <Col>{props.stock.stock_name}</Col>\n                <Col>{props.stock.prevYear}</Col>\n                <Col>{props.stock.curr_price}</Col>\n                <Col>{props.stock.id}</Col>\n                <Col>{props.stock.upDownRate}</Col>\n            </Button>\n            <Modal\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2\n                            className={classes.modal_name}\n                            id=\"spring-modal-title\"\n                        >\n                            {props.stock.stock_name}\n                        </h2>\n                        <h2\n                            className={classes.modal_price}\n                            id=\"spring-modal-title\"\n                        >\n                            {props.stock.curr_price}\n                        </h2>\n                        <PurchaseModal\n                            user={props.user}\n                            socket={props.socket}\n                            stock_list={props.user.stock}\n                            cash={props.user.cash}\n                            stock_name={props.stock.stock_name}\n                            price={props.stock.curr_price}\n                        />\n                    </div>\n                </Fade>\n            </Modal>\n        </Row>\n    );\n}\nfunction PurchaseModal(props) {\n    const classes = useStyles();\n    const [stock, setStock] = useState(null);\n    const [tmpStock, setTmpStock] = useState(0);\n    const [cash, setCash] = useState(props.cash);\n    const [price, setPrice] = useState(props.price);\n    const [diffrence, setDiffrence] = useState(0);\n    const [open, setOpen] = React.useState(false);\n    /*\n   *  유저가 가지고있는 stock list에서 현재 modal에 띄워진 stock과 일치하는 stock을 찾는다.\n    ? for문이 최선? 10개밖에 없으니까 일단 괜찮을 것 같긴 함  \n   */\n    for (let i = 0; i < props.stock_list.length; i++) {\n        if (props.stock_list[i].stock_name === props.stock_name) {\n            setStock(props.stock_list[i]);\n            setTmpStock(props.stock_list[i]);\n            break;\n        }\n    }\n    function PlusArrow(props) {\n        setDiffrence(diffrence + 1);\n        return setTmpStock(tmpStock + 1);\n    }\n    function MinusArrow(props) {\n        setDiffrence(diffrence - 1);\n        return setTmpStock(tmpStock - 1);\n    }\n    const handleClick = () => {\n        setOpen(true);\n    };\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n    function Buy() {\n        props.socket.emit('test', {\n            comment:\n                '_' +\n                props.stock_name +\n                '_ [' +\n                tmpStock +\n                '] 개의 주식의' +\n                ' 매수 주문을 체결했습니다.',\n        });\n        props.socket.emit(\n            'stock_buy',\n            // {\n            //   //@ playerId, roomId,\n            //   userID: props.user.user_id,\n            //   socketID: props.user.socket_id,\n            //   stockName: props.stock_name,\n            //   buyCount: tmpStock,\n            // }\n            {\n                room_id: 'test_room',\n                player_id: 'karockai',\n                type: 'stock_buy',\n                stock_name: 'A화학',\n                ea: '2',\n            }\n        );\n        props.socket.on('stock_buy_res', (response, player_info) => {\n            handleClick();\n            //@ pop up event,\n        });\n    }\n    function Sell() {\n        props.socket.emit('test', {\n            comment:\n                '_' +\n                props.stock_name +\n                '_ [' +\n                tmpStock +\n                '] 개의 주식의' +\n                ' 매도 주문을 체결했습니다.',\n        });\n        //@ Sell 관련 backend 개발 이후에 추가할 예정\n    }\n    return (\n        <div>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <FormControl\n                    className={clsx(\n                        classes.margin,\n                        classes.withoutLabel,\n                        classes.textfield\n                    )}\n                    style={{ margin: 'auto' }}\n                >\n                    <FormHelperText id=\"standard-weight-helper-text\">\n                        보유 주\n                    </FormHelperText>\n                    <Input\n                        id=\"standard-adornment-weight\"\n                        value={tmpStock}\n                        endAdornment={\n                            <InputAdornment position=\"end\">개</InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <FormControl\n                    className={clsx(\n                        classes.margin,\n                        classes.withoutLabel,\n                        classes.textfield\n                    )}\n                    style={{ margin: 'auto' }}\n                >\n                    <FormHelperText id=\"standard-weight-helper-text\">\n                        지불 금액\n                    </FormHelperText>\n                    <Input\n                        id=\"standard-adornment-weight\"\n                        value={price * diffrence}\n                        endAdornment={\n                            <InputAdornment position=\"end\">원</InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <FormControl\n                    className={clsx(\n                        classes.margin,\n                        classes.withoutLabel,\n                        classes.textField\n                    )}\n                    style={{ margin: 'auto' }}\n                >\n                    <FormHelperText id=\"standard-weight-helper-text\">\n                        잔액\n                    </FormHelperText>\n                    <Input\n                        id=\"standard-adornment-weight\"\n                        value={cash - price * diffrence}\n                        endAdornment={\n                            <InputAdornment position=\"end\">원</InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </form>\n            <form className={classes.modal_arrow} noValidate autoComplete=\"off\">\n                <ArrowDropUpIcon\n                    onClick={PlusArrow}\n                    style={{ fontSize: '40px' }}\n                />\n                <ArrowDropDownIcon\n                    onClick={MinusArrow}\n                    style={{ fontSize: '40px' }}\n                />\n            </form>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                    Buy(props.stock_name);\n                }}\n            >\n                매수\n            </Button>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                    Sell(props.stock_name);\n                }}\n            >\n                매도\n            </Button>\n            <div className={classes.root}>\n                <Snackbar\n                    open={open}\n                    autoHideDuration={2000}\n                    onClose={handleClose}\n                >\n                    <Alert onClose={handleClose} severity=\"success\">\n                        매수 주문이 완료되었어요! 😍\n                    </Alert>\n                </Snackbar>\n            </div>\n        </div>\n    );\n}\nfunction StockMarket(props) {\n    const marketCurrent = props.stock_list.map((stock, id) => {\n        return (\n            <StockRow\n                socket={props.socket}\n                className=\"stock\"\n                key={id}\n                stock={stock}\n                user={props.user}\n            />\n        );\n    });\n    return (\n        <div className=\"animate-change\">\n            <p>StockMarket</p>\n            <div>\n                <Container>\n                    <Row>\n                        <Col>종목명</Col>\n                        <Col>종목번호</Col>\n                        <Col>현재가</Col>\n                        <Col>id</Col>\n                        <Col>분류</Col>\n                    </Row>\n                    {marketCurrent}\n                </Container>\n            </div>\n        </div>\n    );\n}\nexport default StockMarket;\n","import logo from './logo.svg';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, Container, Col, Row } from 'react-bootstrap';\nimport './PlayerManager.css';\nimport user_list from './user.json';\n\nclass PlayerProfileCard extends React.Component {\n    render() {\n        return (\n            <div id=\"card\">\n                <div className=\"personal\">\n                    <Avatar image=\"https://raw.githubusercontent.com/JustMonk/codepen-resource-project/master/img/pixel%20avatar.png\" />\n                    <NameHolder name={this.props.name} />\n                </div>\n                <Info\n                    point={this.props.point}\n                    money={this.props.money}\n                    gain={this.props.gain}\n                />\n                <InfoButton buy=\"매매목록\" info=\"대화요청\" />\n            </div>\n        );\n    }\n}\n\nfunction InfoButton(props) {\n    return (\n        <div className=\"infoButton\">\n            <Button variant=\"info\">{props.buy}</Button>\n            <Button variant=\"danger\">{props.info}</Button>\n        </div>\n    );\n}\n\nfunction Info(props) {\n    return (\n        <div className=\"info\">\n            <span>포인트 {props.point}</span>\n            <span>자산 {props.money}</span>\n            <span>수익률 {props.gain}</span>\n        </div>\n    );\n}\n\nfunction Avatar(props) {\n    return (\n        <div className=\"avatar\">\n            <img src={props.image} alt=\"user avatar\" />\n        </div>\n    );\n}\n\nfunction NameHolder(props) {\n    return (\n        <div className=\"nameHolder\" style={{ margin: 'auto' }}>\n            <h1>{props.name}</h1>\n        </div>\n    );\n}\n\nclass PlayerManager extends React.Component {\n    renderUser(userIdx) {\n        return (\n            <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                    <Card.Title>Card Title</Card.Title>\n\n                    <Card.Link href=\"#\">Card Link</Card.Link>\n                    <Card.Link href=\"#\">Another Link</Card.Link>\n                </Card.Body>\n            </Card>\n        );\n    }\n\n    yonggi() {}\n\n    render() {\n        // const users = this.state.users;\n        const users = user_list;\n        const isLeft = this.props.isLeft;\n        let userProfile = Array(6).fill(null);\n        users.map((user, idx) => {\n            userProfile[idx] = (\n                <Row>\n                    <PlayerProfileCard\n                        onClick={this.yonggi}\n                        name={user.id}\n                        winRate={user.yield}\n                        point={user.point}\n                        money={user.cash}\n                        gain={user.yield}\n                    />\n                </Row>\n            );\n        });\n\n        return (\n            //@ 6명의 유저를 모두 출력 해주도록 함수를 호출\n            //@ template 찾기\n            <div>\n                <Container>\n                    {isLeft ? (\n                        <Col>\n                            {userProfile[0]}\n                            {userProfile[1]}\n                            {userProfile[2]}\n                        </Col>\n                    ) : (\n                        <Col>\n                            {userProfile[3]}\n                            {userProfile[4]}\n                            {userProfile[5]}\n                        </Col>\n                    )}\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default PlayerManager;\n\n// class ProfileCard extends React.Component {\n//     render() {\n//        return (\n//           <div id=\"card\">\n//              <div className=\"personal\">\n//                 <Avatar image=\"https://raw.githubusercontent.com/JustMonk/codepen-resource-project/master/img/pixel%20avatar.png\" />\n//                 <NameHolder name={this.props.name} career={this.props.career} />\n//              </div>\n//              <Info pens={this.props.pens} posts={this.props.posts} projects={this.props.projects} />\n//              <Skills skills={this.props.skills} />\n//              <Followers followers={this.props.followers} following={this.props.following} />\n//              <RandomizeButton />\n//           </div>\n//        );\n//     }\n//  }\n\n//  function RandomizeButton() {\n//     let rand = Math.random;\n//     let maxSkills = 3 + getRandom(2);\n\n//     function getRandom(arg) {\n//        if (Array.isArray(arg)) return arg[Math.round((rand() * (arg.length - 1)).toFixed(2))];\n//        return Math.round((rand() * arg).toFixed(2)) || 1;\n//     }\n\n//     function randomize() {\n//        let names = [\"Mike\", \"Andrew\", \"Tom\", \"Jack\", \"Garry\", \"Nick\", \"Daniel\"];\n//        let surnames = [\"Vazovsky\", \"Anderson\", \"Archer\", \"Armstrong\", \"Ash\", \"Bradley\", \"Collins\"];\n//        let careers = [\"Frontend developer\", \"Backend developer\", \"Designer\", \"Data scientist\", \"Engineer\", \"Painter\"];\n//        let skills = [\"CSS3\", \"Ruby\", \"PHP\", \"JavaScript\", \"React\", \"HTML5\", \"Vue.js\", \"Angular\", \"Python\", \"C#\", \"C++\", \"Java\", \"Node.JS\"];\n//        let randomSkils = [];\n//        while (randomSkils.length <= maxSkills) { randomSkils.push(skills.splice(getRandom(skills.length - 1), 1)); }\n//        ReactDOM.render(<ProfileCard name={getRandom(names) + \" \" + getRandom(surnames)} career={getRandom(careers)} pens={getRandom(60)} posts={getRandom(20)} projects={getRandom(10)} skills={randomSkils} followers={getRandom(44)} following={getRandom(27)} />, document.getElementById('root'));\n\n//        //anim changeable data\n//        let changeNodes = document.querySelectorAll('.nameHolder, .info span, .skills, .followers h2');\n//        changeNodes.forEach(val => {\n//           val.classList.add('animate-change');\n//        });\n\n//        changeNodes[0].addEventListener(\"animationend\", animationEnd);\n//        changeNodes[0].addEventListener(\"webkitAnimationEnd\", animationEnd);\n//        function animationEnd(e) {\n//           changeNodes.forEach(val => {\n//              val.classList.remove(\"animate-change\");\n//           });\n//        }\n//     }\n\n//     return (\n//        <a className=\"randomizeButton\" onClick={randomize}>Randomize</a>\n//     );\n//  }\n\n//  function Followers(props) {\n//     return (\n//        <div className=\"followers\">\n//           <div>\n//              <h1>followers</h1>\n//              <h2>{props.followers}</h2>\n//           </div>\n//           <div>\n//              <h1>following</h1>\n//              <h2>{props.following}</h2>\n//           </div>\n//        </div>\n//     );\n//  }\n\n//  function Skills(props) {\n//     let startKey = 0;\n//     return (\n//        <div className=\"skills\">\n//           {\n//              props.skills.map(elem => {\n//                 return <span key={startKey++}>{elem}</span>\n//              })\n//           }\n//        </div>\n//     );\n//  }\n\n//  function Avatar(props) {\n//     return (\n//        <div className=\"avatar\">\n//           <img src={props.image} alt=\"user avatar\" />\n//        </div>\n//     );\n//  }\n\n//  function NameHolder(props) {\n//     return (\n//        <div className=\"nameHolder\">\n//           <h1>{props.name}</h1>\n//           <h2>{props.career}</h2>\n//        </div>\n//     );\n//  }\n\n//  function Info(props) {\n//     return (\n//        <div className=\"info\">\n//           <span>Pens: {props.pens}</span>\n//           <span>Posts: {props.posts}</span>\n//           <span>Projects: {props.projects}</span>\n//        </div>\n//     );\n//  }\n\n//  ReactDOM.render(<ProfileCard name=\"Mike Vazovsky\" career=\"Frontend developer\" pens=\"14\" posts=\"7\" projects=\"5\" skills={[\"CSS3\", \"HTML5\", \"JavaScript\", \"PHP\"]} followers=\"45\" following=\"12\" />, document.getElementById('root'));\n","import React, { useState } from 'react';\n\nconst strByteLength = (s, b, i, c) => {\n    for (b = i = 0; (c = s.charCodeAt(i++)); b += c >> 11 ? 3 : c >> 7 ? 2 : 1);\n    return b;\n};\n\nfunction Chat(props) {\n    const [msg, setMessage] = useState('');\n\n    const OnChange = (e) => {\n        setMessage(e.target.value);\n    };\n\n    const OnKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            props.sendMessage(e);\n        }\n    };\n\n    const color = (author) => {\n        if (author === 'SERVER') {\n            return '#BB0000';\n        } else {\n            return (\n                '#' +\n                Math.floor(\n                    parseInt(author.substring(4)) * 121203891028309128315\n                ).toString(16)\n            );\n        }\n    };\n    return (\n        <div className=\"container\">\n            <div style={{ width: '100%' }}>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"card-title\">Stock Chat</div>\n                        <hr />\n                        <div className=\"messages\">\n                            {props.chat.messages.map((message) => {\n                                return (\n                                    <div\n                                        style={{ color: color(message.author) }}\n                                    >\n                                        {message.author}: {message.message}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"card-footer\">\n                        <br />\n                        <input\n                            ref={(input) => input && input.focus()}\n                            type=\"text\"\n                            placeholder=\"Message\"\n                            className=\"form-control\"\n                            value={msg}\n                            onKeyPress={OnKeyPress}\n                            onChange={OnChange}\n                        />\n                        <br />\n                        <button\n                            value={msg}\n                            onClick={props.sendMessage}\n                            className=\"btn btn-primary form-control\"\n                        >\n                            Send\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;\n","import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, CardContent, CardActions, makeStyles } from '@material-ui/core';\nimport { Button } from 'react-bootstrap';\nimport { ChatFeed, Message } from 'react-chat-ui';\nimport './ChatManager.css';\nimport './InfoManager.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport './App.css';\nimport newsList from './news.json';\nimport stockList from './stock.json';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\nimport { orange } from '@material-ui/core/colors';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\n// import {Fade} from './TradeModal.js';\n\n// const InfoManager = () => {\n//     const []\n// }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '30ch',\n        //   backgroundColor: theme.palette.background.paper,\n    },\n    card: {\n        display: 'inline-block',\n    },\n    orange: {\n        backgroundColor: '#666666',\n    },\n    inline: {\n        display: 'inline',\n    },\n    bullet: {\n        width: '45%',\n        margin: '10px',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nfunction MakeInfo(props) {\n    const classes = useStyles();\n    const company = props.comp; //@ 회사명\n    const headline = props.info[0]; //@ 뉴스 헤드라인\n    return (\n        <div>\n            <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                    <Avatar className={classes.orange}>\n                        {company.substring(0, 1)}\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={company}\n                    secondary={\n                        <React.Fragment>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                className={classes.inline}\n                                color=\"textPrimary\"\n                            ></Typography>\n                        </React.Fragment>\n                    }\n                />\n            </ListItem>\n        </div>\n    );\n}\n\nfunction MakeInfoList(props) {\n    const classes = useStyles();\n    return (\n        <>\n            <MakeInfo info={props.info} comp={props.comp} />\n        </>\n    );\n}\n// function plus(props) {\n//   const [points,setPoints] = useState(0);\n//   return (\n//     <div>\n//     <Typography variant=\"h5\" component=\"h2\">\n//     {setPoints(points+1)}\n//     </Typography>\n//     </div>\n//   );\n// }\n\n// Fade.propTypes = {\n//   children: PropTypes.element,\n//   in: PropTypes.bool.isRequired,\n//   onEnter: PropTypes.func,\n//   onExited: PropTypes.func,\n// };\n\nfunction SpringModal(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [lockOpen, setLockOpen] = React.useState(false);\n    const handleOpen = () => {\n        setOpen(true);\n        setLockOpen(true);\n        //@ point 감소\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function lockState() {\n        let lock;\n        if (lockOpen) {\n            lock = <LockOpenRoundedIcon />;\n        } else {\n            lock = <LockRoundedIcon />;\n        }\n        return <>{lock}</>;\n    }\n\n    const Fade = React.forwardRef(function Fade(props, ref) {\n        const { in: open, children, onEnter, onExited, ...other } = props;\n        const style = useSpring({\n            from: { opacity: 0 },\n            to: { opacity: open ? 1 : 0 },\n            onStart: () => {\n                if (open && onEnter) {\n                    onEnter();\n                }\n            },\n            onRest: () => {\n                if (!open && onExited) {\n                    onExited();\n                }\n            },\n        });\n\n        return (\n            <animated.div ref={ref} style={style} {...other}>\n                {children}\n            </animated.div>\n        );\n    });\n\n    return (\n        <div>\n            <Button\n                variant=\"outline-dark\"\n                style={{ float: 'right', margin: '4px 4px 10px' }}\n                type=\"button\"\n                onClick={handleOpen}\n            >\n                {lockState()}\n                &nbsp;정보 보기\n            </Button>\n            <Modal\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2 id=\"spring-modal-title\">{props.comp}</h2>\n                        <p id=\"spring-modal-description\">{props.info[0]}</p>\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\n\nfunction InfoManager(props) {\n    const classes = useStyles();\n    const [infos, setInfos] = useState(newsList);\n    const [companys, setComp] = useState(stockList);\n    const initInfo = () => {};\n\n    const infoList = infos.map((info, idx) => {\n        return (\n            <Card\n                className={[\n                    classes.card,\n                    'animate-change',\n                    classes.bullet,\n                ].join(' ')}\n            >\n                <CardContent>\n                    <MakeInfoList\n                        info={info}\n                        comp={companys[idx]['stock_name']}\n                    />\n                    <SpringModal\n                        point={props.point}\n                        info={info}\n                        comp={companys[idx]['stock_name']}\n                    />\n                </CardContent>\n            </Card>\n        );\n    });\n    return (\n        <>\n            My Point<h1>{props.point}</h1>\n            {infoList}\n        </>\n    );\n}\nexport default InfoManager;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport stock_list from './stock.json';\nimport user_list from './user.json';\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\n// ! stock_list, stock에서 받아온 json을 파싱해서 새로운 object파일 만듬\nfunction createData(stock_name, purchase_amount, number, curr_price) {\n    const yield_amount = (curr_price - purchase_amount) * 100;\n    return { stock_name, purchase_amount, number, curr_price, yield_amount };\n}\n\n// ! 한 줄에 표시되는 정보 만듬\nfunction CreateLine() {\n    // 유저명, 총 평가금액, 작년 대비 이익(+수익률)\n    // 종목명, 매입금액 ,주식수, 현재금액, 수익률\n\n    let [stockList, setStockList] = useState(stock_list);\n    let tmpTable = [...stockList]; // deepcopy\n\n    for (let idx = 0; idx < 10; ++idx) {\n        tmpTable[idx] = createData(\n            stockList[idx]['stock_name'],\n            30, //'구매했을때의 평균가격(아직구현X)'\n            stockList[idx]['upDownRate'],\n            stockList[idx]['curr_price']\n        );\n    }\n\n    // setStockList(tmpTable);\n\n    return (\n        <>\n            {tmpTable.map((object) => (\n                <StyledTableRow key={object.stock_name}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                        {object.stock_name}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                        {object.purchase_amount}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                        {object.number}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                        {object.curr_price}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                        {object.yield_amount}\n                    </StyledTableCell>\n                </StyledTableRow>\n            ))}\n        </>\n    );\n}\n// users.map((user, idx) => {\n//   userProfile[idx] = (<Row>\n//       <PlayerProfileCard onClick={this.yonggi} name={user.name} winRate={user.winRate} point={user.point} money={user.money} gain={user.gain} />\n//   </Row>)\n// })\n// const rows = [\n//   createData('B엔터', '3,000', 100, '30,000', 4.0),\n//   createData('F바이오', '2,000', 10, '2,000', 4.3),\n//   createData('H뷰티', '100,000', 1, '120,000', 6.0),\n//   createData('I화학', '40,000', 2, '30,000', 4.3),\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        // minWidth: 700,\n    },\n    root: {\n        ...theme.typography.button,\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n}));\n\nfunction UserName() {\n    const classes = useStyles();\n    const userName = '김용기';\n    return <div className={classes.root}>{userName + '님의 계좌 잔고'}</div>;\n}\n\nconst currTotal = 5900000;\nconst lastTotal = 3200000;\nconst profitAmount = currTotal - lastTotal;\n// const profitRate = currTotal / lastTotal;\nconst profitRate = 5.4;\n\nfunction CustomizedTables() {\n    const classes = useStyles();\n\n    return (\n        <TableContainer className=\"animate-change\" component={Paper}>\n            <UserName />\n            <Table>\n                <TableRow>\n                    <TableCell>총 평가금액</TableCell>\n                    {/* <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell> */}\n                    <TableCell style={{ fontSize: 30 }} align=\"right\">\n                        {currTotal}\n                    </TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>작년대비</TableCell>\n                    <TableCell align=\"right\">\n                        {'+' +\n                            profitAmount +\n                            '(+' +\n                            `${(profitRate * 100).toFixed(0)} %)`}\n                    </TableCell>\n                    {/* <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell> */}\n                </TableRow>\n            </Table>\n            <Table className={classes.table} aria-label=\"customized table\">\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell>종목명</StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                            매입금액\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">주식수</StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                            현재금액\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">수익률</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <CreateLine />\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default CustomizedTables;\n","import logo from './logo.svg';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport './App.css';\nimport Chat from './Chat'\n\nfunction App() {\n  return (\n    <div>\n      Settings.... 만들어야해...ㅠ\n    </div>\n  );\n}\n\n// Player fucntion\n//_ 공통 기능 :: 플레이어 객체의 정보를 가지고 표현한다\nclass PlayerManager extends React.Component {\n  constructor(props) { // Initialize\n    super(props);\n    this.state = {\n      userID: null,\n      userPoint: 0,\n      userMoney: 0,\n      hint: null,\n\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    }\n  }\n}\n//_ 공통 기능 :: 버튼(button) 객체에 해당하는 화면을 캔버스(canvas)에 띄운다.\n//_ \nclass ButtonManager extends React.Component {\n\n}\n//_ 공통 기능 :: \nclass CanvasManager extends React.Component {\n\n}\n\nclass GameManager extends React.Component {\n  //_ 전체 힌트,\n  //_ hint index를 api 요청을 해.\n  //_ response data가 hint이고,\n  // <CanvasManager hint = \"\"/>\n  // this.prop.hint \n}\n\n\nexport default App;\n","import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    Tab,\n    Tabs,\n    useTheme,\n} from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport './CanvasManager.css';\nimport StockMarket from './StockMarket';\nimport PlayerManager from './PlayerManager';\nimport Chat from './Chat';\nimport InfoManager from './InfoManager';\nimport CustomizedTables from './FundManager';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport App from './App';\nimport PlayerInfo from './yonggi_json/player_info.json';\nimport setting_price from './yonggi_json/setting_price.json';\nimport stock from './stock.json';\n/**\n *\n * socket_id를 대조해서 현재 플레이어가 누군지 저장해둔다.\n */\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 1000,\n    },\n}));\n\nfunction FullWidthTabs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"종목토론방\"\n                        {...a11yProps(0)}\n                        onClick={() => props.onClick('chat')}\n                    />\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"매매하기\"\n                        {...a11yProps(1)}\n                        onClick={() => props.onClick('stock')}\n                    />\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"자산확인\"\n                        {...a11yProps(2)}\n                        onClick={() => props.onClick('fund')}\n                    />\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"뉴스보기\"\n                        {...a11yProps(3)}\n                        onClick={() => props.onClick('info')}\n                    />\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"게임설정\"\n                        {...a11yProps(4)}\n                        onClick={() => props.onClick('setting')}\n                    />\n                </Tabs>\n            </AppBar>\n        </div>\n    );\n}\n\n//_ previous Toggles\n// function ToggleButtons(props) {\n//     const [alignment, setAlignment] = React.useState('left');\n\n//     const handleAlignment = (event, newAlignment) => {\n//         setAlignment(newAlignment);\n//     };\n//     return (\n//         <ToggleButtonGroup\n//             value={alignment}\n//             exclusive\n//             onChange={handleAlignment}\n//             aria-label=\"text alignment\"\n//         >\n//             <ToggleButton onClick={() => props.onClick(\"chat\")} className=\"tool-btn\" size=\"large\" value=\"chat\" aria-label=\"centered\">\n//                 채팅\n//             </ToggleButton>\n//             <ToggleButton onClick={() => props.onClick(\"stock\")} className=\"tool-btn\" value=\"stock\" aria-label=\"centered\">\n//                 주가\n//             </ToggleButton>\n//             <ToggleButton onClick={() => props.onClick(\"fund\")} className=\"tool-btn\" value=\"fund\" aria-label=\"centered\">\n//                 자산\n//             </ToggleButton>\n//             <ToggleButton onClick={() => props.onClick(\"info\")} className=\"tool-btn\" value=\"info\" aria-label=\"centered\">\n//                 정보\n//             </ToggleButton>\n//             <ToggleButton onClick={() => props.onClick(\"setting\")} className=\"tool-btn\" value=\"setting\" aria-label=\"centered\">\n//                 설정\n//             </ToggleButton>\n//         </ToggleButtonGroup>\n//     );\n// }\n\nfunction FullWidthGrid(props) {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n    }));\n    const classes = useStyles();\n    const stocks = stock;\n    function Canvas() {\n        let select;\n        if (props.canvas === 'chat') {\n            select = (\n                <Chat\n                    getMessage={props.getMessage}\n                    sendMessage={props.sendMessage}\n                    chat={props.chat}\n                />\n            );\n        } else if (props.canvas === 'stock') {\n            select = (\n                <StockMarket\n                    socket={props.socket}\n                    user={props.userState}\n                    stock_list={stocks}\n                />\n            );\n        } else if (props.canvas === 'fund') {\n            select = <CustomizedTables />;\n        } else if (props.canvas === 'info') {\n            const point = props.userState.info_pt;\n            select = <InfoManager point={point} />;\n        } else if (props.canvas === 'setting') {\n            select = <App />;\n        }\n        return <>{select}</>;\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <FullWidthTabs onClick={props.onClick} />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                    <Paper className={classes.paper}>\n                        <PlayerManager isLeft={true} />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Paper className={classes.paper}>\n                        <Canvas />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                    <Paper className={classes.paper}>\n                        <PlayerManager isLeft={false} />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\n//_ 데이터 구조\n// 캔버스에서 무엇을 관리해야하나. (아래 해당하는 전체 게임 로직에 관한 모든것)\n// Main -> 방 정보, 게임 Turn, 시간, 유저 숫자, 게임 상태 (시작-턴 시작, 진행-턴 진행, 종료-턴 종료, 대기-임의의 이벤트 등),\n// Users -> 방 안의 유저 정보 리스트 (닉네임, 포인트, 자산, 수익률, 자산 내용, 승률 등)\n// Chat -> 내 닉네임, 채팅 상대 목록, 귓속말 상대, 모든 대화 내용 (public, private)\n// Stock -> 구매 가능한 종목, 종목에 대한 여러 지표들 (종목명, 전년, 올해 가격, 등락, [매도])\n// Fund -> 구매한 종목, 내 자산 지표 (내 닉네임, 총 평가금액, 수익률), 종목에 대한 여러 지표들 (종목명, 종목가격, 수익률, 구입 종목 수[매수])\n// Inform -> 내 포인트, 구매 가능한 정보 리스트 (기업정보, 기업내용, 가격point), 구매한 정보 리스트\n// Setting\nfunction CanvasManager(props) {\n    var user_idx;\n    const socket_id = 'aaaaaa';\n    const room_id = '32dmb141zvvd';\n    // var year = setting_price.;\n    /* \n    => socket_id와 room_id는 player_info를 통해 받아오는 걸로 수정해야 함\n    */\n    // ? socket_id, room_id를 객체 밖으로 빼서 key값으로 만들면 for문 없이 key값으로 찾아올 수 있을듯\n    for (var i = 0; i < PlayerInfo.length; i++) {\n        if (socket_id === PlayerInfo[i].socket_id) {\n            user_idx = i;\n        }\n    }\n\n    const player_info = PlayerInfo[user_idx];\n    const [userState, setUserState] = useState(player_info);\n    const [currCanvas, setCurrCanvas] = useState('chat');\n\n    const onClick = (canvasName) => {\n        setUserState({\n            ...userState,\n            [currCanvas]: canvasName,\n        });\n        setCurrCanvas(canvasName);\n    };\n    return (\n        <div>\n            <FullWidthGrid\n                socket={props.socket}\n                getMessage={props.getMessage}\n                sendMessage={props.sendMessage}\n                chat={props.chat}\n                userState={userState}\n                onClick={onClick}\n                canvas={currCanvas}\n            />\n        </div>\n    );\n}\n\nexport default CanvasManager;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { format } from 'd3-format';\nimport { timeFormat } from 'd3-time-format';\n\nimport { ChartCanvas, Chart } from 'react-stockcharts';\nimport { BarSeries, CandlestickSeries } from 'react-stockcharts/lib/series';\nimport { XAxis, YAxis } from 'react-stockcharts/lib/axes';\nimport {\n    CrossHairCursor,\n    MouseCoordinateX,\n    MouseCoordinateY,\n} from 'react-stockcharts/lib/coordinates';\n\nimport { discontinuousTimeScaleProvider } from 'react-stockcharts/lib/scale';\nimport { OHLCTooltip } from 'react-stockcharts/lib/tooltip';\nimport { fitWidth } from 'react-stockcharts/lib/helper';\nimport { last } from 'react-stockcharts/lib/utils';\nimport { blue, red } from '@material-ui/core/colors';\n\nconst candlesAppearance = {\n    wickStroke: '#000000',\n    fill: function fill(d) {\n        return d.close > d.open ? red[500] : blue[500];\n    },\n    stroke: '#303030',\n    candleStrokeWidth: 0.5,\n    widthRatio: 0.6,\n    opacity: 0.6,\n};\n\nclass StockChart extends React.Component {\n    render() {\n        const { type, data: initialData, width, ratio } = this.props;\n\n        const xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor(\n            (d) => d.date\n        );\n        const { data, xScale, xAccessor, displayXAccessor } = xScaleProvider(\n            initialData\n        );\n\n        const start = xAccessor(last(data));\n        const end = xAccessor(data[Math.max(0, data.length - 100)]);\n        const xExtents = [start, end];\n\n        return (\n            <ChartCanvas\n                height={235}\n                ratio={ratio}\n                width={width}\n                margin={{ left: 55, right: 70, top: 10, bottom: 30 }}\n                type={type}\n                seriesName=\"MSFT\"\n                data={data}\n                xScale={xScale}\n                xAccessor={xAccessor}\n                displayXAccessor={displayXAccessor}\n                xExtents={xExtents}\n            >\n                <Chart id={1} yExtents={[(d) => [d.high + 0.5, d.low - 0.5]]}>\n                    <XAxis axisAt=\"bottom\" orient=\"bottom\" />\n                    <YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n                    <MouseCoordinateY\n                        at=\"right\"\n                        orient=\"right\"\n                        displayFormat={format('.2f')}\n                    />\n                    <CandlestickSeries {...candlesAppearance} />\n                    <OHLCTooltip forChart={1} origin={[-40, 0]} />\n                </Chart>\n                <CrossHairCursor />\n            </ChartCanvas>\n        );\n    }\n}\n\nStockChart.propTypes = {\n    data: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired,\n    ratio: PropTypes.number.isRequired,\n    type: PropTypes.oneOf(['svg', 'hybrid']).isRequired,\n};\n\nStockChart.defaultProps = {\n    type: 'svg',\n};\nStockChart = fitWidth(StockChart);\n\nexport default StockChart;\n","import { blue, red, grey } from '@material-ui/core/colors';\nimport { Grid } from '@material-ui/core';\nimport { React, useState, useEffect } from 'react';\nimport { render } from 'react-dom';\n\n//@ won -> string (4자리 단위로 ',' 끊어주기)\n//@ isBullMarket에 따른 color 변경\n//@ TimeChecker랑 병렬로 놓게 될 것 고려\n//@ 수익률 계산후 문자열 파싱 -> ('+1.33%')\n//@ useEffect socket 통신\n\nfunction ChartTitle(props) {\n    const subtit = '이전대비';\n    const unit = 'KRW';\n    const isBullMarket = true;\n    const [textColor, setBullColor] = useState({\n        color: isBullMarket ? red[600] : blue[600],\n    });\n    const [isBullIcon, SetBullIcon] = useState('▲');\n    const [wonYield, SetYield] = useState('+' + 1.33 + '%');\n    const [beforeWon, SetWonBefore] = useState();\n    const [currentWon, SetWonCurrent] = useState(0);\n    const [upDown, SetUpDown] = useState(0);\n\n    useEffect(() => {\n        return () => {\n            const datas = props.data;\n            const length = props.data.length;\n            const before = datas[length - 2].curPrice;\n            const current = datas[length - 1].curPrice;\n            const sub = current - before;\n            const yid =\n                (sub >= 0 ? '+' : '') +\n                ((sub / current) * 100).toFixed(2) +\n                '%';\n            const icon = sub >= 0 ? '▲' : '▼';\n            const color = sub >= 0 ? red[600] : blue[600];\n            SetWonBefore(before);\n            SetWonCurrent(current);\n            SetUpDown(sub);\n            SetYield(yid);\n            SetBullIcon(icon);\n            setBullColor({ color: color });\n            // console.log({\n            //     before : beforeWon,\n            //     current : currentWon,\n            //     updown : upDown,\n            //     icon : isBullIcon,\n            //     textColor : textColor,\n            // });\n        };\n    }, [props.data]);\n\n\n    function SplitByThree(value) {\n        if (value.length <= 3) return value;\n        return (\n            SplitByThree(value.substring(0, value.length - 3)) +\n            ',' +\n            value.substring(value.length - 3, value.length)\n        );\n    }\n\n\n    function ExpBySymbol(value) {\n        let ret = '';\n        if (value.length >= 9) { // 199489230 -> 1억 9948만 9230\n            ret += ( value.substring(0, value.length - 9 + 1)  + '억 ' ) // 1억\n            value = value.substring(value.length - 9 + 1);\n        }\n        if (value.length >= 5) { // value 99489230\n            ret += ( value.substring(0, value.length - 5 + 1)  + '만 ' )  // 9948만\n            value = value.substring(value.length - 5 + 1);\n        }\n        ret += value;\n        return ret;\n    }\n\n    const parseWonToStr = (won) => {\n        if (typeof won == 'number') won = won.toString();\n        return won;\n    };\n\n    return (\n        <>\n            <div className=\"ChartTitle\" style={textColor}>\n                <span style={{ display: 'block' }}>\n                <Grid container justify='space-between'>\n                    <Grid>\n                        <strong style={{ fontSize: '40px' }}>\n                            {SplitByThree(parseWonToStr(currentWon))}\n                            \n                        </strong>\n                        {' ' + unit}\n                    </Grid>\n                    {/* <Grid>\n                        <span style={{ color: grey[900] ,}}>\n                            {/* <ShowTime/> */}\n                        {/* </span> */}\n                    {/* </Grid> */}\n                </Grid>\n                </span>\n                <span>\n                    <p\n                        style={{\n                            fontSize: '12px',\n                            color: '#000000',\n                            display: 'inline-block',\n                        }}\n                    >\n                        {subtit}\n                    </p>\n                    <strong>{'   ' + wonYield + '  '}</strong>\n                    <strong style={{ display: 'inline' }}>\n                        {' ' + isBullIcon + ' ' + parseWonToStr(upDown)}\n                    </strong>\n\n                </span>\n            </div>\n        </>\n    );\n}\n\nexport default ChartTitle;\n","import { tsvParse, csvParse } from 'd3-dsv';\nimport { timeParse } from 'd3-time-format';\n\nfunction parseData(parse) {\n    return function (d) {\n        d.date = parse(d.date);\n        d.open = +d.open;\n        d.high = +d.high;\n        d.low = +d.low;\n        d.close = +d.close;\n        d.volume = +d.volume;\n\n        return d;\n    };\n}\n\nconst parseDate = timeParse('%Y-%m-%d');\n// const parseDate = timeParse(\"%Y-%m-%d-%H-%M-%S\");\n//@ data 가져오는 부분\n//@ socket을 어떻게 할당하면 좋을까.\n\nexport function getData() {\n    const promiseMSFT = fetch(\n        'https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/MSFT.tsv'\n    )\n        .then((response) => response.text())\n        .then((data) => tsvParse(data, parseData(parseDate)));\n    return promiseMSFT;\n}\n","import React, {useEffect, useState} from 'react';\n\nexport default function Timer(props) {\n    const [time, setTime] = useState(-1);\n    props.socket.on('restGameTime', (restGameTime) => {\n        setTime(restGameTime);\n    });\n    const ShowTime = ()=> {\n            var minute  = parseInt(time / 60);\n            var second = time - minute * 60;\n            minute = minute >= 10 ? String(minute) : '0'+String(minute);\n            second = second >= 10 ? String(second) : '0'+String(second);\n            if (time <= 0) {\n                minute = '00';\n                second = '00';\n            }\n            return (\n                <h2 style={{fontSize: 40}}>\n                    {minute+' : '+second}    \n                </h2>\n            );\n        }\n        return(\n            ShowTime()\n        ); \n    }\n\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { socket } from 'socket.io-client';\nimport StockChart from './StockChart';\nimport ChartTitle from './ChartTitle';\nimport { getData } from './utils';\nimport { tsvParse, csvParse } from 'd3-dsv';\nimport { timeParse } from 'd3-time-format';\nimport {CircularProgress,Grid} from '@material-ui/core';\nimport Timer from './Timer';\n\nclass ChartComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n        };\n    }\n    componentDidUpdate() {}\n    componentWillMount() {\n        if (this.props.socket === null) {\n            this.props.requestSocket('ChartComponent');\n        }\n    }\n    componentDidMount() {\n        //@ 소켓 통신 대기\n    }\n    setup = true;\n    setAPI = false;\n    addCandleData = (data) => {\n        if (data === null) {\n            console.log('하늘소....하늘소.. 응답하라....');\n            return;\n        }\n        data.date = new Date(data.date);\n        if(!this.setAPI) {\n            this.props.setAPIData(data);\n            this.setAPI = true;\n        }\n        if (this.state.data.length >= 150) this.state.data.shift();\n        this.setState({ data: [...this.state.data, data] });\n        // console.log(this.state.datas);\n        // getData(this.state.datas).then(data => {\n        // })\n    };\n    render() {\n        const dataLength = this.state.data.length;\n\n        if (this.setup) {\n            //@ candle data callback\n            if (this.props.socket == null) {\n                this.props.requestSocket('ChartComponent');\n            }\n            if (this.props.requestSocket == null) {\n                console.log('requestSocket is null');\n            } else if (this.props.socket != null) {\n                console.log('연락주세요.');\n                this.props.socket.emit('chartData_Req');\n                this.props.socket.on('chartData_Res', (datas) =>{\n                    console.log('게임 시작 이전의 차트 데이터(최대 100tick)가 로드되었습니다.');\n                    datas.chartData.map((data) => {\n                        this.addCandleData(data);\n                    })\n                    this.props.socket.on('chart', (data) => {\n                        this.addCandleData(data);\n                    });\n                });\n                this.setup = false;\n            }\n        }\n\n        if (this.props.socket == null || dataLength < 2) {\n            return (\n                <div\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '30vh',\n                    }}\n                >\n                    <CircularProgress />\n                </div>\n            );\n        }\n        // console.log(this.props.time);\n        return (\n            <>\n                <Grid container justify={'space-between'} style={{padding:'1vh'}}>\n                    <ChartTitle data={this.state.data} time={this.props.time} />\n                    {\n                        this.props.isStart && <Timer socket={this.props.socket}/>\n                    }\n                </Grid>\n                <StockChart type={'hybrid'} data={this.state.data} />\n            </>\n        );\n    }\n}\n\nexport default ChartComponent;\n","import { useEffect } from 'react';\nimport { Howl } from 'howler';\n\n// 배경음 재생\nfunction useSound(src, volume = 1, fadeoutTime = 0, signal) {\n    let sound = new Howl({ src });\n\n    const soundStop = () => sound.stop();\n    const soundPlay = (src) => {\n        sound = new Howl({ src });\n        sound.volume(volume);\n        sound.play();\n    };\n\n    useEffect(() => {\n        soundStop();\n        if (signal) {\n            soundPlay(src);\n            console.log('useSound Played.')\n            sound.on('play', () => {\n                const fadeouttime = fadeoutTime;\n                setTimeout(\n                    () => sound.fade(volume, 0, fadeouttime),\n                    (sound.duration() - sound.seek()) * 1000 - fadeouttime\n                );\n            });\n            return soundStop;\n        }\n    }, [signal]);\n}\n\n// 효과음 재생\nfunction playSound(src, volume = 1) {\n    let sound;\n    const soundInject = (src) => {\n        sound = new Howl({ src });\n        sound.volume(volume);\n    };\n    soundInject(src);\n    return sound;\n}\n\nvar getDuration = function (src) {\n    var howl = new Howl({ src });\n    return new Promise(function (resolve, reject) {\n        howl.on('load', function () {\n            let time = howl.duration();\n            resolve(time);\n        });\n    });\n};\n\nexport { useSound, playSound, getDuration };\n","export default __webpack_public_path__ + \"static/media/drumUp.578db9f8.wav\";","export default __webpack_public_path__ + \"static/media/drumDown.88b05de6.wav\";","export default __webpack_public_path__ + \"static/media/hatUp.06e7bdd3.wav\";","export default __webpack_public_path__ + \"static/media/hatDown.531ab761.wav\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useSnackbar } from 'notistack';\n\n//@ 5 params\n//? ------- props -----------------------------\n//? {\n//?     onAlert = 조건문.\n//?     severity = [error, warning, info, success]\n//?     message = \"스낵메세지\"\n//?     label = \"버튼라벨\"\n//?     class = ex \"btn btn-warning\"\n//?     onClick = ...\n//? }\n//? -------------------------------------------\nexport function SnackAlertBtn(props) {\n    const { enqueueSnackbar } = useSnackbar();\n\n    const handleClickVariant = (variant) => () => {\n        console.log('btn 수행한다.')\n        props.onClick();\n        // variant could be success, error, warning, info, or default\n        if (props.onAlert) {\n            enqueueSnackbar(props.message, {\n                variant,\n                anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                },\n                autoHideDuration: 700,\n            });\n        }\n    };\n\n    return (\n        <>\n            <Button\n                className={props.class}\n                onClick={handleClickVariant(props.severity)}\n            >\n                {props.label}\n            </Button>\n        </>\n    );\n}\n\n//@ 2 params\n//? ------- props -----------------------------\n//? {\n//?     severity = [error, warning, info, success]\n//?     message = \"스낵메세지\"\n//? }\n//? -------------------------------------------\nlet index = 0;\nexport function SnackAlertFunc(props) {\n    const { enqueueSnackbar } = useSnackbar();\n    // variant could be success, error, warning, info, or default\n    const callback = () => {\n        enqueueSnackbar(props.message, {\n            variant: props.severity,\n            anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'left',\n            },\n            autoHideDuration: 1500,\n            preventDuplicate: true\n        }); \n    }\n    callback();\n    return <></>;\n}","import React, { useEffect, useState, makeStyle, useLayoutEffect } from 'react';\nimport {\n    IconButton,\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    makeStyles,\n} from '@material-ui/core';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { useSound, playSound } from './useSound';\nimport DrumUp from './audios/effect/drumUp.wav';\nimport DrumDown from './audios/effect/drumDown.wav';\nimport HatUp from './audios/effect/hatUp.wav';\nimport HatDown from './audios/effect/hatDown.wav';\nimport { grey, red } from '@material-ui/core/colors';\nimport { SnackAlertFunc } from './SnackAlert';\nimport { SnackbarProvider } from 'notistack';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    button: {\n        '& > *': {\n            width: '42%',\n            // textAlign: 'center',\n            margin: theme.spacing(1),\n        },\n    },\n    paper: {\n        padding: theme.spacing(1),\n        // margin: theme.spacing(1),\n        // textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n\n    button_block: {\n        width: '1vh',\n    },\n}));\n\nfunction ArrowButton(props) {\n    const classes = useStyles();\n    const [stock, setStock] = useState(null);\n    const [tmpStock, setTmpStock] = useState(0);\n    const [diffrence, setDiffrence] = useState(0);\n\n    function PlusArrow(props) {\n        setDiffrence(diffrence + 1);\n        return setTmpStock(tmpStock + 1);\n    }\n\n    function MinusArrow(props) {\n        setDiffrence(diffrence - 1);\n        return setTmpStock(tmpStock - 1);\n    }\n\n    return (\n        <Grid\n            className={classes.button_block}\n            display=\"flex\"\n            justify=\"center\"\n            style={{ height: '100%' }}\n        >\n            <IconButton\n                aria-label=\"delete\"\n                className={classes.margin}\n                size=\"small\"\n                onClick={props.upEvent}\n            >\n                <ArrowDropUpIcon />\n            </IconButton>\n            <IconButton\n                aria-label=\"delete\"\n                className={classes.margin}\n                size=\"small\"\n                onClick={props.downEvent}\n            >\n                <ArrowDropDownIcon />\n            </IconButton>\n        </Grid>\n    );\n}\n\nlet startTime = null;\n\nexport default function TradeStock(props) {\n    const classes = useStyles();\n    const [currentBid, SetBid] = useState(0);\n    const [newBid, SetNewBid] = useState(0); //props.APIdata.curPrice\n    const [currentVolume, SetVolume] = useState(1);\n    const [newVolume, SetNewVolume] = useState(1);\n    const [unitBid, SetUnit] = useState(0); // props.APIdata.priceUnit\n    const [isBind, SetBind] = useState(false);\n    const [isFocus, SetFocus] = useState(false);\n    const [sellStatus, setSellStatus] = useState({\n        status: '',\n        val: 0,\n        vol: 0,\n    });\n    const [buyStatus, setBuyStatus] = useState({\n        status: '',\n        val: 0,\n        vol: 0,\n    });\n    const [myWallet, setWallet] = useState({\n        myCash: 0,\n        myAsset: 0,\n        myCoin: 0,\n    });\n    const [isInit, setInit] = useState(false);\n\n    if (!isBind) SetBind(true);\n    if (!isInit) setInit(true);\n    //@ 가정 => props에 socket이 전달되었어야함.\n    useLayoutEffect(() => {\n        startTime = new Date();\n        if (props.socket == null) {\n            props.requestSocket('MyAsset', props.socket);\n            setInit(true);\n        } else {\n            props.socket.on('refreshWallet', (data) => {\n                //@ buyreq\n                const currentCash = data.cash;\n                const currentAsset = data.asset;\n                const currentCoin = data.coinVol;\n                setWallet({\n                    myCash: currentCash,\n                    myAsset: currentAsset,\n                    myCoin: currentCoin,\n                });\n            });\n        }\n    }, [isInit]);\n\n    function VolumeUp(volume) {\n        // if (\n        //     volume + Math.floor((myWallet.myCash / currentBid) * 0.1) >\n        //     Math.floor(myWallet.myCash / currentBid)\n        // )\n        //     return;\n        SetNewVolume(volume + Math.floor((myWallet.myCash / currentBid) * 0.1));\n    }\n    function VolumeDown(volume) {\n        if (volume - Math.floor((myWallet.myCash / currentBid) * 0.1) <= 0) {\n            SetNewVolume(1);\n            return;\n        }\n        SetNewVolume(volume - Math.floor((myWallet.myCash / currentBid) * 0.1));\n    }\n    function BidUp() {\n        SetBid(Number(currentBid) + Number(unitBid));\n    }\n    function BidDown() {\n        SetBid(Number(currentBid) - Number(unitBid));\n    }\n\n    function RefreshBid() {\n        props.socket.once('chart', (data) => {\n            SetUnit(data.priceUnit);\n            SetBid(data.curPrice);\n            //SetVolume(1);\n        });\n    }\n\n    function Buy(bid, volume) {\n        let status = '';\n        if (bid <= 0 || volume <= 0) {\n            return {\n                status: 'invalid',\n                val: bid,\n                vol: volume,\n            };\n        }\n        if (bid * volume > myWallet.myCash) {\n            // SnackAlertFunc({\n            //     severity:\"error\",\n            //     message:\"호가 및 수량이 부적절합니다. (ex. '0') 😱\"\n            // })\n            props.socket.once('buyDone', (bbid) => {\n                SetNewBid(bbid.price);\n            });\n            return {\n                status: 'lack',\n                val: bid,\n                vol: volume,\n            };\n        }\n        status = {\n            status: 'request',\n            val: bid,\n            vol: volume,\n        };\n        props.socket.emit('buy_Req', {\n            //@ reqJson.json 형식확인\n            roomID: props.roomID,\n            socketID: props.socket.id,\n            currentBid: bid,\n            currentVolume: volume,\n        });\n        props.socket.once('buyDone', (bbid) => {\n            SetNewBid(bbid.price);\n            setBuyStatus({\n                status: 'done',\n                val: bid,\n                vol: volume,\n            });\n        });\n        SetBind(true);\n        return status;\n    }\n\n    function Sell(bid, volume) {\n        let status = '';\n        if (bid <= 0 || volume <= 0) {\n            return {\n                status: 'invalid',\n                val: bid,\n                vol: volume,\n            };\n        }\n        if (myWallet.myCoin < volume) {\n            props.socket.once('sellDone', (bbid) => {\n                SetNewBid(bbid.price);\n            });\n            return {\n                status: 'lack',\n                val: bid,\n                vol: volume,\n            };\n        }\n        status = {\n            status: 'request',\n            val: bid,\n            vol: volume,\n        };\n        props.socket.emit('sell_Req', {\n            roomID: props.roomID,\n            socketID: props.socket.id,\n            currentBid: bid,\n            currentVolume: volume,\n        });\n        //@ 중복 문제가 발생한다.\n        props.socket.once('sellDone', (sbid) => {\n            console.log(sbid);\n            SetNewBid(sbid.price);\n            setSellStatus({\n                status: 'done',\n                val: bid,\n                vol: volume,\n            });\n        });\n        SetBind(true);\n        return status;\n    }\n\n    function HandleKeyUp(e) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n        if (props.socket == null || isBind === false) {\n            props.requestSocket('TradeStock', props.socket);\n            return;\n        }\n        if (e.keyCode === 37) {\n            //_ LEFT ARROW\n            playSound(HatUp, 1).play();\n            VolumeDown(currentVolume);\n        } else if (e.keyCode === 39) {\n            //_ RIGHT ARROW\n            playSound(HatDown, 1).play();\n            VolumeUp(currentVolume);\n        } else if (e.keyCode === 38) {\n            //_ UP ARROW\n            playSound(HatUp, 1).play();\n            BidUp();\n        } else if (e.keyCode === 40) {\n            //_ DOWN ARROW\n            playSound(HatDown, 1).play();\n            BidDown();\n        } else if (e.keyCode === 65) {\n            //_ 'A'\n            playSound(DrumUp, 1).play();\n            setBuyStatus(Buy(currentBid, currentVolume));\n        } else if (e.keyCode === 83) {\n            //_ 'S'\n            playSound(DrumDown, 1).play();\n            setSellStatus(Sell(currentBid, currentVolume));\n        } else if (e.keyCode === 68) {\n            //_ 'D'\n            playSound(DrumDown, 1).play();\n            RefreshBid();\n        } else if (e.keyCode === 90) {\n            //_ 'Z'\n            playSound(DrumDown, 1).play();\n            SetSellMaxCount();\n        } else if (e.keyCode === 88) {\n            //_ 'X'\n            playSound(DrumDown, 1).play();\n            SetBuyMaxCount();\n        }\n    }\n\n    useEffect(() => {\n        RefreshBid();\n    }, []);\n\n    useEffect(() => {\n        if (isFocus === true) {\n            console.log('keydown event not working now!');\n            return;\n        }\n        document.addEventListener('keyup', HandleKeyUp);\n        // document.addEventListener('keydown', HandleKeyDown);\n        return () => {\n            document.removeEventListener('keyup', HandleKeyUp);\n            // document.removeEventListener('keydown', HandleKeyDown);\n        };\n    });\n\n    //@ socket을 통해 정보가 변했음을 알고 render이전에 호가를 갱신해야할 필요가 있다.\n    useEffect(() => {\n        const responseBid = newBid;\n        SetBid(responseBid);\n    }, [newBid]); //@ 호가가 변할때이다.\n\n    useEffect(() => {\n        const responseVolume = newVolume;\n        SetVolume(responseVolume);\n        return () => {};\n    }, [newVolume]);\n\n    useEffect(() => {\n        console.log(sellStatus, 'sellStatus');\n        if (sellStatus !== null) setSellStatus(null);\n    }, [sellStatus]);\n\n    useEffect(() => {\n        console.log(buyStatus, 'buy');\n        if (buyStatus !== null) setBuyStatus(null);\n    }, [buyStatus]);\n\n    function handleVolumeChange(e) {\n        if (e.target.id === 'outlined-required') {\n            SetVolume(e.target.value);\n            SetFocus(true);\n        }\n    }\n    function handleBidChange(e) {\n        if (e.target.id === 'outlined-required') {\n            SetBid(e.target.value);\n            SetFocus(true);\n        }\n    }\n\n    let costColor = {\n        color:\n            myWallet.myCash >= currentBid * currentVolume\n                ? grey[700]\n                : red[200],\n    };\n\n    function SetSellMaxCount() {\n        SetVolume(Math.floor(myWallet.myCash / currentBid));\n    }\n\n    function SetBuyMaxCount() {\n        SetVolume(myWallet.myCoin);\n    }\n\n    function SplitByThree(value) {\n        if (!value) return 'Something wrong.';\n        if (value.length <= 3) return value;\n        return (\n            SplitByThree(value.substring(0, value.length - 3)) +\n            ',' +\n            value.substring(value.length - 3, value.length)\n        );\n    }\n\n    const parseWonToStr = (won) => {\n        if (typeof won == 'number') won = won.toString();\n        return won;\n    };\n\n    function ExpBySymbol(value) {\n        // console.log(value);\n        if (!value) return 'Something wrong.';\n        let ret = '';\n        if (value.length >= 9) {\n            // 199489230 -> 1억 9948만 9230\n            ret += value.substring(0, value.length - 9 + 1) + '억 '; // 1억\n            value = value.substring(value.length - 9 + 1);\n        }\n        if (value.length >= 5) {\n            // value 99489230\n            ret += value.substring(0, value.length - 5 + 1) + '만 '; // 9948만\n            value = value.substring(value.length - 5 + 1);\n        }\n        ret += value;\n        return ret + '원';\n    }\n\n    let dateString = new Date();\n    dateString = '('+dateString.getMinutes() + ':' + dateString.getSeconds() + '.' + dateString.getMilliseconds() + ') '\n\n    return (\n        <>\n            <SnackbarProvider maxSnack={8}>\n                {buyStatus && buyStatus.status === 'lack' && (\n                    <SnackAlertFunc\n                        severity=\"warning\"\n                        message= {dateString + \" 보유 금액이 부족해요 😨\"}\n                    />\n                )}\n                {buyStatus && buyStatus.status === 'invalid' && (\n                    <SnackAlertFunc\n                        severity=\"error\"\n                        message= {dateString +\" 유효하지 않은 값입니다.\"}\n                    />\n                )}\n                {buyStatus && buyStatus.status === 'request' && (\n                    <SnackAlertFunc\n                        severity=\"info\"\n                        message={\n                            dateString + buyStatus.val +\n                            ' 호가에 ' +\n                            buyStatus.vol +\n                            '개 [매수] 주문했어요! 📈'\n                        }\n                    />\n                )}\n                {buyStatus && buyStatus.status === 'done' && (\n                    <SnackAlertFunc\n                        severity=\"success\"\n                        message={\n                            dateString + buyStatus.val +\n                            ',' +\n                            buyStatus.vol +\n                            ' [매수] 주문이 체결되었어요! 🎁'\n                        }\n                    />\n                )}\n                {sellStatus && sellStatus.status === 'lack' && (\n                    <SnackAlertFunc\n                        severity=\"warning\"\n                        message= {dateString + \"코인이 없는걸요? 😨\"}\n                    />\n                )}\n                {sellStatus && sellStatus.status === 'invalid' && (\n                    <SnackAlertFunc\n                        severity=\"error\"\n                        message= {dateString +\"유효하지 않은 값입니다.\"}\n                    />\n                )}\n                {sellStatus && sellStatus.status === 'request' && (\n                    <SnackAlertFunc\n                        severity=\"info\"\n                        message={\n                            dateString +sellStatus.val +\n                            ' 호가에 ' +\n                            sellStatus.vol +\n                            '개 [매도] 주문했어요! 📉'\n                        }\n                    />\n                )}\n                {sellStatus && sellStatus.status === 'done' && (\n                    <SnackAlertFunc\n                        severity=\"success\"\n                        message={\n                            dateString + sellStatus.val +\n                            ',' +\n                            sellStatus.vol +\n                            ' [매도] 주문이 체결되었어요! 💸'\n                        }\n                    />\n                )}\n            </SnackbarProvider>\n            <Grid\n                wrap=\"wrap\"\n                className={classes.paper}\n                alignItems=\"stretch\"\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                style={{ height: '100%' }}\n            >\n                <Grid container item justify=\"center\">\n                    <TextField\n                        className=\"buysell\"\n                        id=\"outlined-required\"\n                        label=\"매매 호가 ▲▼\"\n                        size=\"small\"\n                        type=\"number\"\n                        style={{ width: '80%' }}\n                        value={currentBid}\n                        onChange={handleBidChange}\n                    />\n                    <ArrowButton\n                        upEvent={() => BidUp(currentBid)}\n                        downEvent={() => BidDown(currentBid)}\n                    />\n                </Grid>\n                <Grid container item justify=\"center\">\n                    <TextField\n                        className=\"count\"\n                        id=\"outlined-required\"\n                        label=\"수량 ◀▶\"\n                        type=\"number\"\n                        size=\"small\"\n                        style={{ width: '80%' }}\n                        value={currentVolume}\n                        onChange={handleVolumeChange}\n                    />\n                    <ArrowButton\n                        upEvent={() => VolumeUp(currentVolume)}\n                        downEvent={() => VolumeDown(currentVolume)}\n                    />\n                </Grid>\n                <Grid container item justify=\"center\" alignItems=\"start\">\n                    예상소요금액 :{' '}\n                    <span style={costColor}>\n                        {ExpBySymbol(parseWonToStr(currentVolume * currentBid))}\n                    </span>\n                </Grid>\n                <Grid\n                    container\n                    item\n                    justify=\"center\"\n                    style={{ width: '80%', margin: '0 10 0 1' }}\n                >\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => {\n                            setBuyStatus(Buy(currentBid, currentVolume));\n                        }}\n                    >\n                        [A] 매수 확정\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                            setSellStatus(Sell(currentBid, currentVolume));\n                        }}\n                    >\n                        {/* <KeyboardArrowRightIcon /> */}\n                        [S] 매도 확정\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"info\"\n                        onClick={() => RefreshBid()}\n                    >\n                        {/* <KeyboardArrowRightIcon /> */}\n                        [D] 현재가 설정🔄\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"info\"\n                        onClick={() => SetSellMaxCount()}\n                    >\n                        {/* <KeyboardArrowRightIcon /> */}\n                        [Z] 최대 구매량 설정 📈\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"info\"\n                        onClick={() => SetBuyMaxCount()}\n                    >\n                        {/* <KeyboardArrowRightIcon /> */}\n                        [X] 최대 매도량 설정 📉\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n","import React, { useEffect, useState, makeStyle, useLayoutEffect } from 'react';\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    makeStyles,\n    TextareaAutosize,\n} from '@material-ui/core';\nimport { propTypes } from 'react-bootstrap/esm/Image';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    button: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '100%',\n            justify: 'center',\n        },\n    },\n    button2: {\n        '& > *': {\n            width: '45%',\n            // margin: theme.spacing(1),\n            justify: 'space-between',\n        },\n    },\n    paper: {\n        // padding: theme.spacing(1),\n        margin: theme.spacing(1),\n\n        // textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\nexport default function MyAsset(props) {\n    let testXs = 12;\n    const classes = useStyles();\n    const [myCash, setCash] = useState(0);\n    const [myAsset, setAsset] = useState(0);\n    const [myCoin, setCoin] = useState(0);\n    const [myWallet, setWallet] = useState({\n        myCash: 0,\n        myAsset: 0,\n        myCoin: 0,\n        myAvg: 0\n    });\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n    //@ 가정 => props에 socket이 전달되었어야함.\n    useLayoutEffect(() => {\n        if (props.socket == null) {\n            props.requestSocket('MyAsset', props.socket);\n            setInit(true);\n        } else {\n            props.socket.on('refreshWallet', (data) => {\n                //@ buyreq\n                // console.log(data.type + '으로 인해서 발생함.');\n                const currentCash = data.cash;\n                const currentAsset = data.asset;\n                const currentCoin = data.coinVol;\n                const currentAvg = data.avgPrice;\n                setWallet({\n                    myCash: currentCash,\n                    myAsset: currentAsset,\n                    myCoin: currentCoin,\n                    myAvg: currentAvg,\n                });\n            });\n        }\n    }, [isInit]);\n\n    function SplitByThree(value) {\n        if (!value) return 'Something wrong.';\n        if (value.length <= 3) return value;\n        return (\n            SplitByThree(value.substring(0, value.length - 3)) +\n            ',' +\n            value.substring(value.length - 3, value.length)\n        );\n    }\n\n    const parseWonToStr = (won) => {\n        if (typeof won == 'number') won = won.toString();\n        return won;\n    };\n\n    function ExpBySymbol(value) {\n        // console.log(value);\n        if (!value) return 'Something wrong.';\n        let ret = '';\n        if (value.length >= 9) {\n            // 199489230 -> 1억 9948만 9230\n            ret += value.substring(0, value.length - 9 + 1) + '억 '; // 1억\n            value = value.substring(value.length - 9 + 1);\n        }\n        if (value.length >= 5) {\n            // value 99489230\n            ret += value.substring(0, value.length - 5 + 1) + '만 '; // 9948만\n            value = value.substring(value.length - 5 + 1);\n        }\n        ret += value;\n        return ret + '원';\n    }\n\n    return (\n        <Grid wrap=\"wrap\" container direction=\"row\" style={{ height: '100%' }}>\n            <Grid\n                container\n                direction=\"row\"\n                alignItems=\"center\"\n                display=\"flex\"\n                justify=\"space-between\"\n            >\n                <Grid\n                    style={{\n                        width: '55%',\n                        height: '95%',\n                        margin: '0 4px 1vh 0',\n                    }}\n                >\n                    <Paper style={{ height: '100%' }}>\n                        보유 현금 (KRW)\n                        {/* <h4>\n                            {SplitByThree(parseWonToStr(myWallet.myCash)) +\n                                ' 원'}\n                        </h4> */}\n                        <h5 style={{ fontWeight: 'bold' }}>\n                            {ExpBySymbol(parseWonToStr(myWallet.myCash))}\n                        </h5>\n                    </Paper>\n                </Grid>\n                <Grid\n                    style={{ width: '40%', height: '95%', margin: '0 0 1vh 0' }}\n                >\n                    <Paper style={{ height: '100%' }}>\n                        보유 코인 수 (개)<h3>{myWallet.myCoin}</h3>\n                        평균매입단가<h6>{myWallet.myAvg}</h6>\n                    </Paper>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                justify=\"center\"\n                alignItems=\"stretch\"\n                display=\"flex\"\n            >\n                <Grid style={{ width: '100%', height: '100%' }}>\n                    <Paper style={{ height: '100%' }}>\n                        총 평가 자산 (KRW)\n                        {/* <h2 style={{ fontStyle: 'italic', fontWeight: 'bold' }}>\n                            {SplitByThree(parseWonToStr(myWallet.myAsset)) +\n                                ' 원'}\n                        </h2> */}\n                        <h2 style={{ fontWeight: 'bold' }}>\n                            {ExpBySymbol(parseWonToStr(myWallet.myAsset))}\n                        </h2>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, { useState } from 'react';\n\nfunction Message(props) {\n    const [msg, setMessage] = useState('');\n\n    const OnChange = (e) => {\n        setMessage(e.target.value);\n    };\n\n    const OnKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            props.sendMessage(e);\n        }\n    };\n\n    const color = (author) => {\n        if (author === 'SERVER') {\n            return '#BB0000';\n        } else {\n            return (\n                '#' +\n                Math.floor(\n                    parseInt(author.substring(4)) * 121203891028309128315\n                ).toString(16)\n            );\n        }\n    };\n    return <div>{msg}</div>;\n}\n\nexport default Message;\n","export default __webpack_public_path__ + \"static/media/check.0e7c2f3f.mp3\";","export default __webpack_public_path__ + \"static/media/bidSound.20d9c706.wav\";","export default __webpack_public_path__ + \"static/media/askSound.0f646c39.wav\";","import { Grid, GridList } from '@material-ui/core';\nimport { blue, red } from '@material-ui/core/colors';\nimport React, { useEffect, useState, useLayoutEffect, useRef } from 'react';\nimport { useSound, playSound } from './useSound';\nimport Check from './audios/effect/check.mp3';\nimport BidSound from './audios/effect/bidSound.wav';\nimport AskSound from './audios/effect/askSound.wav';\nexport default function StockDoneList(props) {\n    // socket ,  type (me , others), socket\n    const [doneItem, setItem] = useState(null);\n    const [doneList, setList] = useState([]);\n    const messagesEnd = React.useRef(null);\n\n    const scrollToBottom = () => {\n        messagesEnd.current.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    useEffect(() => {\n        if (props.socket == null) {\n            props.requestSocket('StockDoneList', props.socket);\n        } else {\n            if (!props.isMine) {\n                props.socket.on('buyDone_Room', (done) => {\n                    setItem(done);\n                });\n                props.socket.on('sellDone_Room', (done) => {\n                    setItem(done);\n                });\n                props.socket.on('bidDone_Room', (done) => {\n                    setItem(done);\n                });\n                props.socket.on('askDone_Room', (done) => {\n                    setItem(done);\n                });\n            }\n            else {\n                props.socket.on('buyDone', (done) => {\n                    if(done.type === \"매수 완료\") {\n                        playSound(Check, 1).play();\n                    }\n                    else if(done.type === \"매수 주문 체결\"){\n                        playSound(BidSound, 1).play();\n                    }\n                    setItem(done);\n                });\n                props.socket.on('sellDone', (done) => {\n                    if(done.type === \"매도 완료\") {\n                        playSound(Check, 1).play();\n                    }\n                    else if(done.type === \"매도 주문 체결\"){\n                        playSound(AskSound, 1).play();\n                    }\n                    setItem(done);\n                });\n                props.socket.on('bidDone', (done) => {\n                    setItem(done);\n                });\n                props.socket.on('askDone', (done) => {\n                    setItem(done);\n                });\n            }   \n        }\n    }, []);\n\n    useEffect(() => {\n        if (doneList.length >= 10) doneList.shift();\n        setList([...doneList, doneItem]);\n        scrollToBottom();\n\n    }, [doneItem]);\n\n    return (\n        <GridList\n            spacing={0}\n            wrap=\"wrap\"\n            style={{ width: '100%', height: '100%' }}\n        >\n            {\n                <Grid style={{ width: '100%' }}>\n                    <div>\n                        {doneList.map((done, idx) => {\n                            if (done === null) return;\n                            let buySellColor = {\n                                color:\n                                    done.type.substring(0, 2) === '매수'\n                                        ? done.type.substring(3, 5) === '완료' || done.type.substring(6, 8) === '체결'\n                                            ? red[500]\n                                            : red[300]\n                                        : done.type.substring(3, 5) === '완료' || done.type.substring(6, 8) === '체결'\n                                        ? blue[500]\n                                        : blue[300],\n                                fontWeight:\n                                    done.type.substring(3, 5) === '완료' || done.type.substring(6, 8) === '체결'\n                                        ? 'bold'\n                                        : 'normal',\n                            };\n                            return (\n                                <pre key = {idx}>\n                                    <span style={{ fontWeight: 'bold' }}>\n                                        {props.isMine ? '' : done.playerID}\n                                    </span>\n                                    {props.isMine ? '' : '님이 '}\n                                    <span style={{ fontWeight: 'bold' }}>\n                                        {done.price}\n                                    </span>\n                                    원에{' '}\n                                    <span style={{ fontWeight: 'bold' }}>\n                                        {done.vol}\n                                    </span>\n                                    개를{' '}\n                                    <span style={buySellColor}>\n                                        {done.type}.\n                                    </span>\n                                </pre>\n                            );\n                        })}\n                    </div>\n                    <div\n                        style={{ float: 'left', clear: 'both',  height: \"0%\"  }}\n                        ref={messagesEnd}\n                    ></div>\n                </Grid>\n            }\n        </GridList>\n    );\n}\n","import React, {\n    useState,\n    useRef,\n    useEffect,\n    makeStyle,\n    useLayoutEffect,\n} from 'react';\nimport {\n    IconButton,\n    Button,\n    Box,\n    TextField,\n    Grid,\n    Paper,\n    makeStyles,\n    GridList,\n} from '@material-ui/core';\nimport Message from './Message';\nimport StockDoneList from './StockDoneList';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    button: {\n        '& > *': {\n            // margin: theme.spacing(1),\n            width: '100%',\n            // float: 'auto',\n            // height: \"50%\"\n        },\n    },\n    button2: {\n        '& > *': {\n            width: '45%',\n            // margin: theme.spacing(1),\n            justify: 'space-between',\n        },\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function ChatRoom(props) {\n    // console.log(props.socket);\n    let testXs = 12;\n    const classes = useStyles();\n    const [message, setMessage] = useState(''); // 보낼 때의 메시지자체만 저장\n    const [resMsg, setResMsg] = useState('');\n    const [messages, setMessages] = useState(\n        // author와 쌍으로 저장된 메시지\n        [\n        ]\n    );\n    const messagesEnd =  React.useRef(null);\n    const [isChanged, setChanged]  = useState(true);\n    let textInput = useRef(null);\n    const scrollToBottom = () => {\n        messagesEnd.current.scrollIntoView();\n    }\n\n    useEffect(() => {\n        if(messages.length >= 15) messages.shift();\n        setMessages([...messages, resMsg]);\n        scrollToBottom();\n    },[resMsg])\n\n    useEffect(() => {\n        props.socket.on('update', (data) => {\n            if (data) {\n                setResMsg(data);\n            }\n        })\n    },[]);\n\n    useEffect(() => {\n        document.addEventListener('keyup', HandleKeyUp);\n        return () => {\n            document.removeEventListener('keyup', HandleKeyUp);\n        };\n    },);\n\n    useEffect(() => {\n        scrollToBottom();\n    },[messages])\n    \n    // const socket_on = (async() => {\n    //     await props.socket.on('update', (data) => {\n    //         if (data) {\n    //             console.log('update 3', messages);\n    //             addMessage(data);\n    //         }\n    //     })\n    // })()\n    //\n    const handleOnChange = (event) => {\n        setMessage(event.target.value);\n    };\n    \n    const sendMessage = () => {\n        if (textInput.current.value) {\n            // ev.preventDefault();\n            textInput.current.value = '';\n            // author: this.state.author,\n            // console.log(message);\n            props.socket.emit('message', {\n                message: message,\n                author: props.roomInfo[props.socket.id]['playerID'],\n                roomID: props.roomID,\n            });\n            setMessage('');\n        }\n    };\n    // * 서버에서 받아온 채팅메시지를 채팅창에 씀\n    \n    const addMessage = (data) => {\n        // setMessages({ messages: [...messages, data['message']] });\n        const new_messages = [...messages, data];\n        setMessages(new_messages);\n    };\n\n    let isFocus = false;\n\n    function HandleKeyUp(e) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27) return; //_ 'F12' || 'esc'\n        e.preventDefault();\n        // if (props.socket == null || isBind === false) {\n        //     props.requestSocket('TradeStock', props.socket);\n        //     return;\n        // }\n        if (e.keyCode === 13) {\n            //_ Enter\n            if (document.activeElement !== textInput.current) {\n                textInput.current.focus();\n            }\n            else if (textInput.current.value === '') {\n                textInput.current.blur();\n            }\n            else {\n                sendMessage();\n            }\n        }\n    }\n\n    function PrintMessage() {\n        return <></>;\n    }\n\n    return (\n        <>\n        <Grid\n            container\n            className={classes.button}\n            style={{ height: '100%' }}\n            justify={'space-between'}\n        >\n            <GridList item >\n                <Grid style={{ height: '29vh', width: '100%'}}>\n                    {messages.map((message) => {\n                        return (\n                            <>\n                            <pre>\n                                {message.author} : {message.message}\n                            </pre>\n                            </>\n                        )\n                    })}\n                </Grid>\n                <div\n                    style={{ float:\"left\", clear: \"both\", height: \"0%\" }}\n                    ref={messagesEnd}>\n                </div> \n            </GridList>\n            <Grid item>\n                <Grid\n                    item\n                    container\n                    wrap=\"wrap\"\n                    dirction=\"column\"\n                    style={{ height: '10vh' }}\n                    spacing={1}\n                    alignItems=\"flex-end\"\n                >\n                    <Grid item style={{ margin: '10 0 0 -10', width: '70%' }}>\n                        <TextField\n                            style={{ height: '100%' }}\n                            id=\"standard-basic\"\n                            inputRef={textInput}\n                            label=\"메세지 보내기 (15자 제한)\"\n                            onFocus={()=> {\n                                isFocus = true;\n                                props.SetInputCtrl(true)\n                            }}\n                            onBlur={()=> {\n                                isFocus = false;\n                                props.SetInputCtrl(false)\n                            }}\n                            onChange={handleOnChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            inputProps={{ 'maxlength': 15 }}\n                        />\n                    </Grid>\n                    <Grid item style={{ width: '20%' }}>\n                        <Button\n                            style={{ height: '100%' }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={()=>{sendMessage()}}\n                        >\n                            전송\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n        </>\n    );\n}\n\n// export default function AlignItems() {\n//     return (\n//       <div style={{ width: '100%' }}>\n//         <Box\n//           display=\"flex\"\n//           alignItems=\"flex-end\"\n//           p={1}\n//           m={1}\n//           bgcolor=\"background.paper\"\n//           css={{ height: 100 }}\n//         >\n//           <Box p={1} bgcolor=\"grey.300\">\n//             Item 1\n//           </Box>\n//         </Box>\n//       </div>\n//     );\n//   }\n","import React, { useState, makeStyle, useLayoutEffect } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport {\n    IconButton,\n    Button,\n    Box,\n    TextField,\n    GridList,\n    Grid,\n    Paper,\n    makeStyles,\n} from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.primary,\n    },\n    score: {},\n}));\n\nfunction MakePlayerPaper(props) {\n    const classes = useStyles(greenTheme);\n\n    return (\n        <Paper style={{ height: '9.8vh' }} className={classes.paper}>\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid style={{ width: '20%', height: '5vh' }} className=\"score\">\n                    {props.index}\n                </Grid>\n                <Grid>\n                    <Grid container direction=\"col\" className=\"score\">\n                        <Grid>{props.player.playerID}</Grid>\n                    </Grid>\n                    <Grid container direction=\"col\" className=\"score\">\n                        <Grid>{props.player.asset}</Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default function PlayerList(props) {\n    const classes = useStyles(greenTheme);\n    const testXs = 12;\n    const [players, setPlayers] = useState([\n        {\n            socketID: 'socketID',\n            playerID: 'playerID',\n            asset: 'asset',\n        },\n    ]);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    useLayoutEffect(() => {\n        if (props.socket == null) {\n            props.requestSocket('MakePlayerPaper', props.socket);\n            setInit(true);\n        } else {\n            props.socket.on('roomRank', (playerArray) => {\n                // console.log(playerArray)\n                setPlayers(playerArray);\n            });\n        }\n    }, [isInit]);\n\n    return (\n        <>\n            {players.map((player, index) => {\n                if (player.socketID === props.socket.id) {\n                    return (\n                        <div>\n                            <Paper\n                                className={classes.paper}\n                                style={{\n                                    height: '90%',\n                                    border: 'solid',\n                                    borderColor: '#0066bb',\n                                    margin: '0 0 10px 0',\n                                    boxShadow: '12px 12px 2px 1px #ffffff',\n                                }}\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    alignItems=\"center\"\n                                >\n                                    <Grid\n                                        style={{ width: '20%', height: '100%' }}\n                                        className=\"score\"\n                                    >\n                                        {index + 1}\n                                        {'위.'}\n                                    </Grid>\n                                    <Grid\n                                        style={{ width: '80%', height: '100%' }}\n                                        container\n                                        direction=\"column\"\n                                        className=\"score\"\n                                    >\n                                        <Grid alignItems=\"right\">{player.playerID}</Grid>\n                                        <Grid alignItems=\"right\">{player.asset}</Grid>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </div>\n                    );\n                }\n            })}\n\n            <Grid\n                wrap=\"wrap\"\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"stretch\"\n                spacing={2}\n            >\n                {players.map((player, index) => {\n                    const myColor =\n                        player.socketID === props.socket.id\n                            ? blue[200]\n                            : '#ffffff';\n                    const myFont =\n                        player.socketID === props.socket.id ? 'bold' : 'normal';\n                    return (\n                        <Grid item xs={testXs}>\n                            <Paper\n                                style={{\n                                    height: '9.8vh',\n                                    backgroundColor: myColor,\n                                    fontWeight: myFont,\n                                }}\n                                className={classes.paper}\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    alignItems=\"center\"\n                                >\n                                    <Grid\n                                        style={{ width: '20%', height: '100%' }}\n                                        className=\"score\"\n                                    >\n                                        {index + 1}\n                                        {'위.'}\n                                    </Grid>\n                                    <Grid\n                                        style={{ width: '80%', height: '100%' }}\n                                        container\n                                        direction=\"column\"\n                                        className=\"score\"\n                                    >\n                                        <Grid alignItems=\"right\">\n                                            {player.playerID}\n                                        </Grid>\n                                        <Grid alignItems=\"right\">\n                                            {player.asset}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/King_Conga.78ec5c8e.mp3\";","export default __webpack_public_path__ + \"static/media/Mausoleum_Mash.691b5af4.mp3\";","export default __webpack_public_path__ + \"static/media/Deja_Vu.b7bee3db.mp3\";","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    history,\n    Redirect,\n    useHistory,\n} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        // alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    table: {\n        minWidth: 650,\n    },\n}));\n\nexport default function GameOverModal(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const rows = props.leaderBoard;\n    const [done, setDone] = useState(false);\n\n    const history = useHistory();\n    const BackToLobby = () => {\n        let path = '/';\n        history.push(path);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    console.log(props.leaderBoard);\n    return (\n        <div>\n            <Modal\n                disablePortal\n                disableEnforceFocus\n                disableAutoFocus\n                disableBackdropClick // backdrop을 클릭해도 modal을 지우지 않는 옵션\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n            >\n                <Fade in={open}>\n                    <div container className={classes.paper}>\n                        <h2\n                            id=\"transition-modal-title\"\n                            style={{ textAlign: 'center' }}\n                        >\n                            🌠Game Finished🌠\n                        </h2>\n                        <Grid\n                            container\n                            direction={'column'}\n                            alignItems={'center'}\n                        >\n                            <TableContainer component={Paper}>\n                                <Table\n                                    className={classes.table}\n                                    aria-label=\"simple table\"\n                                >\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Rank</TableCell>\n                                            <TableCell align=\"right\">\n                                                Player ID\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                asset\n                                            </TableCell>\n                                            {/* <TableCell align=\"right\">Fat&nbsp;(g)</TableCell> */}\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {rows.map((row, idx) => (\n                                            <TableRow key={row.playerID}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {idx + 1}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.playerID}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.asset}\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <Button onClick={BackToLobby}>\n                                {' '}\n                                Back to Lobby{' '}\n                            </Button>\n                        </Grid>\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\n","import React, {useEffect}from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Modal, Typography} from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    width: '50vh',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    alignItems: 'center',\n    justifyContent: 'center',\n\n  },\n  typo: {\n    fontSize: '12rem',\n    textAlign: 'center',\n  }\n}));\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n  const { in: open, children, onEnter, onExited, ...other } = props;\n  const style = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: open ? 1 : 0 },\n    onStart: () => {\n      if (open && onEnter) {\n        onEnter();\n      }\n    },\n    onRest: () => {\n      if (!open && onExited) {\n        onExited();\n      }\n    },\n  });\n\n  return (\n    <animated.div ref={ref} style={style} {...other}>\n      {children}\n    </animated.div>\n  );\n});\n\nFade.propTypes = {\n  children: PropTypes.element,\n  in: PropTypes.bool.isRequired,\n  onEnter: PropTypes.func,\n  onExited: PropTypes.func,\n};\n\nexport default function ThreeSecTimer(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [time, setTime] = React.useState(3);\nconst changeTime = () => {\n  if(time > 1) {\n    setTimeout(function(){\n        setTime(time - 1);\n      }, 1000);\n    }\n  };\n    \n  const signal = props.open;\n\n  useEffect(()=>{\n    changeTime();\n  },[time]);\n  \n  useEffect(()=>{\n    setOpen(signal); \n  },[signal]);\n\n\n  return (\n      <Modal\n        disablePortal\n        disableEnforceFocus\n        disableAutoFocus\n        disableBackdropClick\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={open}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h4 className={classes.typo} id=\"spring-modal-title\" style={{justifyContent: 'center'}}> {time} </h4>\n          </div>\n        </Fade>\n      </Modal>\n\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Tetris99.af303290.mp3\";","import React, { useState, useEffect, useLayoutEffect } from 'react';\nimport { render } from 'react-dom';\nimport MuiThemeProvider from '@material-ui/styles/ThemeProvider';\nimport { Tabs, Tab, Button, Grid } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { blue, red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 100,\n        minHeight: 100,\n        fontSize: 8,\n    },\n});\n\nfunction createData(sell, price, buy) {\n    return { sell, price, buy };\n}\n\n\nexport default function BidTab(props) {\n    const [isInit, setInit] = useState(false);\n    const [currentBids, SetBid] = useState([\n        {\n            buy: '',\n            price: '',\n            sell: '',\n        },\n    ]);\n    if (!isInit) setInit(true);\n\n    useLayoutEffect(() => {\n        if (props.socket == null) {\n            props.requestSocket('BidTab', props.socket);\n            setInit(true);\n        } else {\n            props.socket.on('refreshBid', (bidObject) => {\n                SetBid(bidObject);\n            });\n        }\n    }, [isInit]);\n\n    const classes = useStyles();\n\n\n    return (\n        <MuiThemeProvider>\n            <Grid\n                style={{ height: '110%' }}\n                container\n                wrap=\"wrap\"\n                // alignItems=\"stretch\"\n                justify=\"center\"\n                direction=\"column\"\n                spacing={2}\n                display=\"center\"\n            >\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        size=\"small\"\n                        aria-label=\"a dense table\"\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">거래량</TableCell>\n                                <TableCell align=\"center\">거래가</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {currentBids.map((row, index) => {\n                                return (\n                                    <TableRow\n                                        style={{\n                                            backgroundColor:\n                                                index <= 4\n                                                    ? blue[100]\n                                                    : red[100],\n                                            opacity: 0.9,\n                                        }}\n                                        key={row.price}\n                                    >\n                                        <TableCell>{row.buy}</TableCell>\n                                        <TableCell>\n                                            {row.price}\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n        </MuiThemeProvider>\n    );\n}\n\n// render(<App />, document.getElementById(\"root\"));\n","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.primary,\n    },\n    score: {},\n}));\n\nexport default function BidEntity(props) {\n    const classes = useStyles(greenTheme);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    // useLayoutEffect(() => {\n    //     if (props.socket == null) {\n    //         props.requestSocket('makeTableEntity', props.socket);\n    //         setInit(true);\n    //     }\n    // }, [isInit]);\n\n    const bidCancel = () => {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n            reqPrice: props.price,\n            reqVol: props.vol,\n        };\n\n        props.socket.emit('cancelBid_Req', reqJson);\n    };\n    return (\n        <Grid\n            wrap=\"wrap\"\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <Paper\n                style={{ height: '4vh', width: '100%' }}\n                className={classes.paper}\n                onClick={bidCancel}\n            >\n                <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid\n                        style={{ width: '20%', height: '4vh' }}\n                        className=\"price\"\n                    >\n                        <span style={{ fontStyle: 'italic' }}>\n                            [{props.index}]\n                        </span>\n                    </Grid>\n                    <Grid\n                        style={{ width: '40%', height: '4vh' }}\n                        className=\"price\"\n                    >\n                        {props.price}\n                    </Grid>\n                    <Grid\n                        style={{ width: '40%', height: '4vh' }}\n                        className=\"vol\"\n                    >\n                        {props.vol}\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n}\n","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport {\n    IconButton,\n    Button,\n    Box,\n    TextField,\n    Grid,\n    GridList,\n    Paper,\n    makeStyles,\n} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport BidEntity from './BidEntity';\n\n// const dummyTable = [\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n// ];\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.primary,\n    },\n    score: {},\n}));\n\n// const bidCancel = (props, price, vol) => {\n\n// function MakeTableEntity(props) {\n//     const classes = useStyles(greenTheme);\n\n//     return (\n//         <Paper style={{ height: '9.8vh' }} className={classes.paper}>\n//             <Grid container direction=\"row\" alignItems=\"center\">\n//                 <Grid style={{ width: '50%', height: '5vh' }} className=\"price\">\n//                     {props.price}\n//                 </Grid>\n//                 <Grid style={{ width: '50%', height: '5vh' }} className=\"vol\">\n//                     {props.vol}\n//                 </Grid>\n//             </Grid>\n//         </Paper>\n//     );\n// }\n\nexport default function BidTable(props) {\n    const classes = useStyles(greenTheme);\n    const testXs = 12;\n    const [BidTable, setTable] = useState([]);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    useEffect(() => {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n        };\n        props.socket.emit('bidTable_Req', reqJson);\n\n        if (props.socket == null) {\n            props.requestSocket('makeTableEntity', props.socket);\n            setInit(true);\n        } else {\n            props.socket.on('bidTable_Res', (bidTable) => {\n                setTable(bidTable);\n            });\n        }\n    }, [isInit]);\n\n    function CancelBid(num, table) {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n            reqPrice: table[num]['price'],\n            reqVol: table[num]['vol'],\n        };\n        props.socket.emit('cancelBid_Req', reqJson);\n    }\n\n    function HandleKeyUp(e, BidTable) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n\n        if (e.keyCode === 49 && BidTable.length >= 1) {\n            //_ 1\n\n            CancelBid(0, BidTable);\n        } else if (e.keyCode === 50 && BidTable.length >= 2) {\n            //_ 2\n            CancelBid(1, BidTable);\n        } else if (e.keyCode === 51 && BidTable.length >= 3) {\n            //_ 3\n            CancelBid(2, BidTable);\n        } else if (e.keyCode === 52 && BidTable.length >= 4) {\n            //_ 4\n            CancelBid(3, BidTable);\n        } else if (e.keyCode === 53 && BidTable.length >= 5) {\n            //_ 5\n            CancelBid(4, BidTable);\n        } else if (e.keyCode === 54 && BidTable.length >= 6) {\n            //_ 6\n            CancelBid(5, BidTable);\n        } else if (e.keyCode === 55 && BidTable.length >= 7) {\n            //_ 7\n            CancelBid(6, BidTable);\n        } else if (e.keyCode === 56 && BidTable.length >= 8) {\n            //_ 8\n            CancelBid(7, BidTable);\n        }\n    }\n\n    useEffect(() => {\n        const CancelBidByKey = (e) => {\n            HandleKeyUp(e, BidTable);\n        };\n        document.addEventListener('keyup', CancelBidByKey);\n        return () => {\n            document.removeEventListener('keyup', CancelBidByKey);\n        };\n    });\n\n    return (\n        <Grid\n            wrap=\"wrap\"\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <TableContainer>\n                <Table\n                    className={classes.table}\n                    size=\"small\"\n                    aria-label=\"a dense table\"\n                >\n                    <TableHead>\n                        <TableRow>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ fontWeight: 'bold' }}>\n                                    취소 번호 [1]~[8]\n                                </span>\n                            </TableCell>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ fontWeight: 'bold' }}>\n                                    매수 가격\n                                </span>\n                            </TableCell>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ fontWeight: 'bold' }}>\n                                    매수 수량\n                                </span>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                </Table>\n            </TableContainer>\n\n            <GridList wrap=\"wrap\" style={{ width: '100%', height: '30vh' }}>\n                <Grid style={{ width: '99%' }}>\n                    {BidTable.map((bidElem, index, BidTable) => {\n                        return (\n                            <Grid style={{ margin: '5px' }} item xs={testXs}>\n                                <BidEntity\n                                    price={bidElem.price}\n                                    vol={bidElem.vol}\n                                    index={index + 1}\n                                    socket={props.socket}\n                                    requestSocket={props.requestSocket}\n                                    roomID={props.roomID}\n                                />\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </GridList>\n        </Grid>\n    );\n}\n","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.primary,\n    },\n    score: {},\n}));\n\nexport default function AskEntity(props) {\n    const classes = useStyles(greenTheme);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    // useLayoutEffect(() => {\n    //     if (props.socket == null) {\n    //         props.requestSocket('makeTableEntity', props.socket);\n    //         setInit(true);\n    //     }\n    // }, [isInit]);\n\n    const askCancel = () => {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n            reqPrice: props.price,\n            reqVol: props.vol,\n        };\n\n        props.socket.emit('cancelAsk_Req', reqJson);\n    };\n    return (\n        <Grid\n            wrap=\"wrap\"\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <Paper\n                style={{ height: '4vh' }}\n                className={classes.paper}\n                onClick={askCancel}\n            >\n                <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid\n                        style={{ width: '20%', height: '4vh' }}\n                        className=\"price\"\n                    >\n                        <span style={{ fontStyle: 'italic' }}>\n                            [{props.index}]\n                        </span>\n                    </Grid>\n                    <Grid\n                        style={{ width: '40%', height: '4vh' }}\n                        className=\"price\"\n                    >\n                        {props.price}\n                    </Grid>\n                    <Grid\n                        style={{ width: '40%', height: '4vh' }}\n                        className=\"vol\"\n                    >\n                        {props.vol}\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n}\n","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport {\n    IconButton,\n    Button,\n    Box,\n    TextField,\n    Grid,\n    GridList,\n    Paper,\n    makeStyles,\n} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport AskEntity from './AskEntity';\n\n// const dummyTable = [\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n// ];\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.primary,\n    },\n    score: {},\n}));\n\n// function MakeTableEntity(props) {\n//     const classes = useStyles(greenTheme);\n\n//     return (\n//         <Paper style={{ height: '9.8vh' }} className={classes.paper}>\n//             <Grid container direction=\"row\" alignItems=\"center\">\n//                 <Grid style={{ width: '50%', height: '5vh' }} className=\"price\">\n//                     {props.price}\n//                 </Grid>\n//                 <Grid style={{ width: '50%', height: '5vh' }} className=\"vol\">\n//                     {props.vol}\n//                 </Grid>\n//             </Grid>\n//         </Paper>\n//     );\n// }\n\nexport default function AskTable(props) {\n    const classes = useStyles(greenTheme);\n    const testXs = 12;\n    const [AskTable, setTable] = useState([]);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    useLayoutEffect(() => {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n        };\n        props.socket.emit('askTable_Req', reqJson);\n\n        if (props.socket == null) {\n            props.requestSocket('makeTableEntity', props.socket);\n            setInit(true);\n        } else {\n            props.socket.on('askTable_Res', (askTable) => {\n                setTable(askTable);\n            });\n        }\n    }, [isInit]);\n\n    function CancelAsk(num, table) {\n        console.log('num:', num);\n        console.log('table:', table);\n        console.log('hi');\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n            reqPrice: table[num]['price'],\n            reqVol: table[num]['vol'],\n        };\n        props.socket.emit('cancelAsk_Req', reqJson);\n    }\n\n    function HandleKeyUp(e, AskTable) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n\n        if (e.keyCode === 49 && AskTable.length >= 1) {\n            //_ 1\n            CancelAsk(0, AskTable);\n        } else if (e.keyCode === 50 && AskTable.length >= 2) {\n            //_ 2\n            CancelAsk(1, AskTable);\n        } else if (e.keyCode === 51 && AskTable.length >= 3) {\n            //_ 3\n            CancelAsk(2, AskTable);\n        } else if (e.keyCode === 52 && AskTable.length >= 4) {\n            //_ 4\n            CancelAsk(3, AskTable);\n        } else if (e.keyCode === 53 && AskTable.length >= 5) {\n            //_ 5\n            CancelAsk(4, AskTable);\n        } else if (e.keyCode === 54 && AskTable.length >= 6) {\n            //_ 6\n            CancelAsk(5, AskTable);\n        } else if (e.keyCode === 55 && AskTable.length >= 7) {\n            //_ 7\n            CancelAsk(6, AskTable);\n        } else if (e.keyCode === 56 && AskTable.length >= 8) {\n            //_ 8\n            CancelAsk(7, AskTable);\n        }\n    }\n\n    useEffect(() => {\n        const CancelAskByKey = (e) => {\n            HandleKeyUp(e, AskTable);\n        };\n        document.addEventListener('keyup', CancelAskByKey);\n        return () => {\n            document.removeEventListener('keyup', CancelAskByKey);\n        };\n    });\n\n    return (\n        <Grid\n            wrap=\"wrap\"\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <TableContainer>\n                <Table\n                    className={classes.table}\n                    size=\"small\"\n                    aria-label=\"a dense table\"\n                >\n                    <TableHead>\n                        <TableRow>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ fontWeight: 'bold' }}>\n                                    취소 번호 [1]~[8]\n                                </span>\n                            </TableCell>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ fontWeight: 'bold' }}>\n                                    매도 가격\n                                </span>\n                            </TableCell>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ fontWeight: 'bold' }}>\n                                    매도 수량\n                                </span>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                </Table>\n            </TableContainer>\n            <GridList wrap=\"wrap\" style={{ width: '100%', height: '30vh' }}>\n                <Grid style={{ width: '99%' }}>\n                    {AskTable.map((askElem, index, AskTable) => {\n                        return (\n                            <Grid style={{ margin: '5px' }} item xs={testXs}>\n                                <AskEntity\n                                    price={askElem.price}\n                                    vol={askElem.vol}\n                                    index={index + 1}\n                                    socket={props.socket}\n                                    requestSocket={props.requestSocket}\n                                    roomID={props.roomID}\n                                />\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </GridList>\n        </Grid>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport BidTab from './BidTab';\nimport BidTable from './BidTable';\nimport AskTable from './AskTable';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function TabControl(props) {\n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n    const [isBind, SetBind] = useState(false);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function HandleKeyUp(e) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n        // if (props.socket == null || isBind === false) {\n        //     props.requestSocket('TradeStock', props.socket);\n        //     return;\n        // }\n        if (e.keyCode === 81) {\n            //_ Q\n            setValue(0);\n        } else if (e.keyCode === 87) {\n            //_ W\n            setValue(1);\n        } else if (e.keyCode === 69) {\n            //_ E\n            setValue(2);\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('keyup', HandleKeyUp);\n        // document.addEventListener('keydown', HandleKeyDown);\n        return () => {\n            document.removeEventListener('keyup', HandleKeyUp);\n            // document.removeEventListener('keydown', HandleKeyDown);\n        };\n    });\n\n    return (\n        <div className={classes.demo2}>\n            <AppBar position=\"static\">\n                <Tabs value={value} onChange={handleChange}>\n                    <Tab label=\"[Q] 매수 주문 목록\" {...a11yProps(0)} />\n                    <Tab label=\"[W] 매도 주문 목록\" {...a11yProps(1)} />\n                    <Tab label=\"[E] 호가 목록\" {...a11yProps(2)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <BidTable\n                    roomID={props.roomID}\n                    socket={props.socket}\n                    requestSocket={props.requestSocket}\n                />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <AskTable\n                    roomID={props.roomID}\n                    socket={props.socket}\n                    requestSocket={props.requestSocket}\n                />\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <BidTab\n                    socket={props.socket}\n                    requestSocket={props.requestSocket}\n                />\n            </TabPanel>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Grid, Paper, makeStyles } from '@material-ui/core';\nimport { sizing } from '@material-ui/system';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TradeStock from './TradeStock';\nimport MyAsset from './MyAsset';\nimport ChatRoom from './ChatRoom';\nimport PlayerList from './PlayerList';\nimport ChartComponent from './ChartComponent';\nimport ChartTitle from './ChartTitle';\nimport { useSound, playSound, getDuration } from './useSound';\nimport King_Conga from './audios/music/King_Conga.mp3';\nimport Mausoleum_Mash from './audios/music/Mausoleum_Mash.mp3';\nimport Deja_Vu from './audios/music/Deja_Vu.mp3';\nimport GameOverModal from './GameOverModal';\nimport StockDoneList from './StockDoneList';\nimport { red } from '@material-ui/core/colors';\nimport ThreeSecTimer from './ThreeSecTimer';\nimport GameMusicStart from './MusicStart';\nimport { Howl,Howler } from 'howler';\n// import { testSound} from './testSound'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    useLocation,\n    useHistory,\n} from 'react-router-dom';\nimport TabControl from './TabControl';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        // padding: theme.spacing(2),\n        textAlign: 'center',\n        padding: theme.spacing(1),\n        textAlign: 'left',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function LayoutGrid(props) {\n    const classes = useStyles();\n    let testXs = 12;\n    let leftSm = 2;\n    let middleSm = 7;\n    let rightSm = 3;\n\n    const location = useLocation();\n    const gameTime = location.state.gameTime;\n    const [timerTime, setTimerTime] = useState(gameTime);\n    const musicList = {\n        Deja_Vu: Deja_Vu,\n        King_Conga: King_Conga,\n        Mausoleum_Mash: Mausoleum_Mash,\n    };\n\n    const [inputCtrl, setInputCtrl] = useState(false);\n\n    const SetInputCtrl =  (isChat) => {\n        setInputCtrl(isChat);\n    };\n\n    const SpecificMusic = musicList[props.roomInfo['music'].split('.')[0]];\n    const [threeSecTimerOpen, setThreeSecTimerOpen] = useState(true);\n    const {Howl, Howler} = require('howler');\n\n    // useEffect(() => {\n    //     props.socket.once('startGame_Real', (data) => {\n    //         setThreeSecTimerOpen(false);\n    //         setTimerTime(gameTime);\n    //         setIsStart(true);\n    //         // sound.play();\n    //         // sound.on('play', () => {\n    //         //     const fadeouttime = 2000;\n    //         //     setTimeout(() => sound.fade(0.7, 0, fadeouttime), (sound.duration() - sound.seek()) * 1000 - fadeouttime);\n    //         // });\n            \n    //     });\n    // }, [timerTime]);\n    // useSound(SpecificMusic, 0.7, 2000, isStart);\n    const [over, setOver] = useState(false);\n    // const [leaderBoard, setLeaderBoard]= useState('');\n\n    useEffect(() => {\n        props.socket.on('gameOver', (leaderBoard) => {\n            console.log('gameover');\n            if (leaderBoard) {\n                // GameOver(readerBoard);\n                setOver(leaderBoard);\n            }\n        });\n    }, []);\n\n    // const GameOver = (leaderBoard) => {\n    //     console.log('gameover');\n    //     return (\n    //         <>\n    //             <GameOverModal leaderBoard={leaderBoard}/>\n    //         </>\n    //     );\n\n    // }\n\n    // const GameOver = (readerBoard) => {\n    //     // modal 띄울 함수 호출\n    //     useEffect(() => {\n    //         props.socket.once('gameOver', (leaderBoard) => {\n    //             console.log('gameover');\n    //             return (\n    //                 <>\n    //                     <GameOverModal leaderBoard={leaderBoard}/>\n    //                 </>\n    //             );\n    //         });\n    //     }, []);\n    // };\n\n    const [APIdata, setAPI] = useState(null);\n    let setCurrentAPIData = (data) => {\n        setAPI(data);\n    };\n    let getCurrentAPIData = () => {\n        return APIdata;\n    };\n\n    return (\n        <React.Fragment>\n            {/* <ThreeSecTimer\n                SpecificMusic={SpecificMusic}\n                open={threeSecTimerOpen}\n            /> */}\n            {over && <GameOverModal leaderBoard={over} />}\n            <Container maxWidth=\"lg\">\n                <Typography component=\"div\" style={{ padding: '0 0 0 0' }}>\n                    <Grid\n                        style={{ height: '100vh' }}\n                        wrap=\"wrap\"\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"stretch\"\n                        spacing={1}\n                    >\n                        <Grid className=\"playerListGrid\" item xs={leftSm}>\n                            {/* <Paper style={{ height: \"100%\" }} className={classes.paper}> */}\n                            <PlayerList\n                                socket={props.socket}\n                                requestSocket={props.requestSocket}\n                                roomID={props.roomID}\n                                roomInfo={props.roomInfo}\n                            />\n                            {/* </Paper> */}\n                        </Grid>\n                        <Grid\n                            className=\"stockTradeGrid\"\n                            container\n                            item\n                            xs={middleSm}\n                            wrap=\"wrap\"\n                            alignContents=\"stretch\"\n                        >\n                            <Grid\n                                style={{ height: '90vh' }}\n                                item\n                                wrap=\"wrap\"\n                                alignContents=\"stretch\"\n                                alignItems=\"stretch\"\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                spacing={1}\n                            >\n                                <Grid\n                                    style={{ height: '45vh' }}\n                                    item\n                                    alignItems=\"stretch\"\n                                >\n                                    <Paper\n                                        style={{ height: '44vh' }}\n                                        className={classes.paper}\n                                    >\n                                        <ChartComponent\n                                            socket={props.socket}\n                                            requestSocket={props.requestSocket}\n                                            setAPIData={setCurrentAPIData}\n                                            APIdata={APIdata}\n                                            display=\"flex\"\n                                            justify-content=\"center\"\n                                            align-items=\"center\"\n                                            // time={props.time}\n                                            isStart={props.isStart}\n                                            time={timerTime}\n                                        />\n                                    </Paper>\n                                </Grid>\n                                <Grid style={{ height: '18vh' }}>\n                                    <Grid\n                                        style={{ height: '100%' }}\n                                        wrap=\"wrap\"\n                                        alignItems=\"stretch\"\n                                        container\n                                        direction=\"row\"\n                                        justify=\"space-around\"\n                                    >\n                                        <Grid\n                                            style={{\n                                                width: '45%',\n                                                height: '100%',\n                                            }}\n                                            item\n                                        >\n                                            <Paper\n                                                style={{ height: '17vh' }}\n                                                className={classes.paper}\n                                            >\n                                                <StockDoneList\n                                                    socket={props.socket}\n                                                    requestSocket={\n                                                        props.requestSocket\n                                                    }\n                                                    isMine={true}\n                                                />\n                                            </Paper>\n                                        </Grid>\n                                        <Grid\n                                            style={{\n                                                width: '55%',\n                                                height: '100%',\n                                            }}\n                                            item\n                                        >\n                                            <Paper\n                                                style={{ height: '17vh' }}\n                                                className={classes.paper}\n                                            >\n                                                <StockDoneList\n                                                    socket={props.socket}\n                                                    requestSocket={\n                                                        props.requestSocket\n                                                    }\n                                                    isMine={false}\n                                                />\n                                            </Paper>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid style={{ height: '27vh' }} item>\n                                    <Grid\n                                        style={{ height: '100%' }}\n                                        wrap=\"wrap\"\n                                        alignItems=\"stretch\"\n                                        container\n                                        direction=\"row\"\n                                        justify=\"space-around\"\n                                    >\n                                        <Grid\n                                            style={{\n                                                width: '45%',\n                                                height: '22vh',\n                                            }}\n                                            item\n                                        >\n                                            {/* <Paper style={{ height: \"100%\" }} > */}\n                                            <MyAsset\n                                                roomID={props.roomID}\n                                                socket={props.socket}\n                                                requestSocket={\n                                                    props.requestSocket\n                                                }\n                                            />\n                                            {/* </Paper> */}\n                                        </Grid>\n                                        <Grid\n                                            style={{\n                                                width: '50%',\n                                                height: '22vh',\n                                                margin: '0 0 0 0',\n                                            }}\n                                            item\n                                        >\n                                            <Paper\n                                                style={{ height: '100%' }}\n                                                className={classes.paper}\n                                            >\n                                                <TradeStock\n                                                    inputCtrl={inputCtrl}\n                                                    roomID={props.roomID}\n                                                    APIdata={APIdata}\n                                                    socket={props.socket}\n                                                    requestSocket={\n                                                        props.requestSocket\n                                                    }\n                                                />\n                                            </Paper>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid className=\"bidChatGrid\" item xs={rightSm}>\n                            <Grid\n                                style={{ height: '90vh' }}\n                                wrap=\"wrap\"\n                                alignItems=\"stretch\"\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                spacing={2}\n                            >\n                                <Grid\n                                    style={{ height: '45vh' }}\n                                    item\n                                    alignItems=\"stretch\"\n                                >\n                                    <Paper\n                                        style={{ height: '44vh' }}\n                                        className={classes.paper}\n                                    >\n                                        <TabControl\n                                            inputCtrl={inputCtrl}\n                                            roomID={props.roomID}\n                                            socket={props.socket}\n                                            requestSocket={props.requestSocket}\n                                        />\n                                    </Paper>\n                                </Grid>\n                                <Grid style={{ height: '45vh' }} item>\n                                    <Paper\n                                        style={{ height: '40vh' }}\n                                        className={classes.paper}\n                                    >\n                                        <ChatRoom\n                                            SetInputCtrl={SetInputCtrl}\n                                            roomInfo={props.roomInfo}\n                                            roomID={props.roomID}\n                                            socket={props.socket}\n                                            chat={props.chat}\n                                        />\n                                    </Paper>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Typography>\n            </Container>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    useLocation,\n    useHistory,\n} from 'react-router-dom';\nimport King_Conga from './audios/music/King_Conga.mp3';\nimport Mausoleum_Mash from './audios/music/Mausoleum_Mash.mp3';\nimport Deja_Vu from './audios/music/Deja_Vu.mp3';\nimport { useSound, playSound, getDuration } from './useSound';\nimport ThreeSecTimer from './ThreeSecTimer';\nimport LayoutGrid from './LayoutGrid';\n\nlet bgm_audio = new Audio('');\n\nexport default function LayoutGridEffect(props) {\n    const location = useLocation();\n    const gameTime = location.state.gameTime;\n    const [timerTime, setTimerTime] = useState(gameTime);\n    const [isStart, setIsStart] = useState(false);\n    const musicList = {\n        Deja_Vu: Deja_Vu,\n        King_Conga: King_Conga,\n        Mausoleum_Mash: Mausoleum_Mash,\n    };\n    const SpecificMusic = musicList[props.roomInfo['music'].split('.')[0]];\n    const [threeSecTimerOpen, setThreeSecTimerOpen] = useState(true);\n\n    useEffect(() => {\n        props.socket.once('startGame_Real', (data) => {\n            setThreeSecTimerOpen(false);\n            setTimerTime(gameTime);\n            setIsStart(true);\n            bgm_audio = new Audio(SpecificMusic);\n            if (bgm_audio.paused) bgm_audio.play();\n        });\n    }, [timerTime]);\n    return (\n        <React.Fragment>\n            <ThreeSecTimer\n                SpecificMusic={SpecificMusic}\n                open={threeSecTimerOpen}\n            />\n            <LayoutGrid\n                socket={props.socket}\n                requestSocket={props.requestSocket}\n                roomID={props.roomID}\n                roomInfo={props.roomInfo}\n                gameTime={props.time}\n                isStart={isStart}\n                />\n                \n        </React.Fragment>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/Logo.e2afc65a.png\";","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport Logo from './images/Logo.png';\n\nfunction SetPlayerName(props) {\n    // const socket = io();\n    // const [name, setName] = React.useState('');\n    const params = window.location\n        .toString()\n        .substring(window.location.toString().indexOf('?'));\n    const searchParams = new URLSearchParams(params);\n    const [tmp, setTemp] = React.useState('');\n\n    // const nameInput = useRef();\n    // useEffect(()=>{\n    //     nameInput.current.focus();\n    // });\n\n    const onKeyPress = (e) => {\n        if (e.key == 'Enter') {\n            handleOnSave(e);\n        }\n    };\n\n    const handleChange = (event) => {\n        setTemp(event.target.value);\n    };\n\n    const handleOnSave = (event) => {\n        if (tmp != '') {\n            event.preventDefault();\n            props.onSave(tmp);\n        }\n    };\n    let buttonMsg = 'Create Private Room';\n    if (searchParams.has('id')) {\n        // 초대링크 받아서 온 사람\n        buttonMsg = 'Join Room';\n    } else {\n        buttonMsg = 'Create Private Room';\n    }\n    return (\n        <>\n            <Grid\n                container\n                justify={'center'}\n                alignItems={'center'}\n                spacing={2}\n                direction=\"column\"\n                style={{ width: '100%', height: '99vh' }}\n            >\n                <Grid>\n                    <img src={Logo} />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"standard-basic\"\n                        label=\"인게임 닉네임 (8자 제한)\"\n                        inputRef={props.textInput}\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        // ref={nameInput}\n                        autoFocus\n                        onKeyPress={onKeyPress}\n                        inputProps={{ 'maxLength': 8 }}\n                    />\n                </Grid>\n\n                <Grid item>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleOnSave}\n                    >\n                        {buttonMsg}\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\nexport default withRouter(SetPlayerName);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {   \n    maxWidth: '30vh',\n    margin: '0 2vh 2vh 2vh',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function LobbyPlayerCard(props) {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root} >\n      <CardContent>\n        {/* <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          방장\n        </Typography> */}\n        <Typography variant=\"h5\" component=\"h2\">\n          {props.playerID}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          <br />\n          {'\"a benevolent smile\"'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">강퇴하기</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/KeyMap.f99426d9.png\";","import React, { useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Tetris99 from './audios/music/Tetris99.mp3';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\nimport KeyMapTemp from './images/KeyMap.png';\nimport Test from './Test';\n\nconst bgm_audio = new Audio(Tetris99);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\nexport default function MusicLeader(props) {\n    const classes = useStyles();\n    let tmp_music = props.roomInfo ? props.roomInfo['music'] : 'King_Conga.mp3';\n    let tmp_time = props.roomInfo ? props.roomInfo['gameTime'] : '02 : 25';\n    const [music, setMusic] = React.useState(tmp_music);\n    const [strTime, strSetTime] = React.useState(tmp_time);\n\n    if (typeof strTime === 'number') {\n        let minute = parseInt(strTime / 60);\n        let second = strTime % 60;\n        minute = minute >= 10 ? String(minute) : '0' + String(minute);\n        second = second >= 10 ? String(second) : '0' + String(second);\n\n        strSetTime(minute + ' : ' + second);\n    }\n\n    function MusicInput() {\n        const handleChange = (event) => {\n            const musicName = event.target.value;\n            setMusic(musicName);\n            props.socket.emit('settingsUpdate_Req', {\n                roomID: props.roomID,\n                musicName: musicName,\n            });\n        };\n        /*  music select 현재 하드코딩 상태에서 동적으로 구현할 함수..!\n      function MusicMenu() {\n          return (\n              <>\n              {props.musicList.map((music) => {\n                      console.log(music);\n                  return (\n                  (<MenuItem\n                      value={music}>{music}\n                  </MenuItem>)\n                  );\n              })}\n              </>\n          );\n      }\n*/\n        return (\n            <div>\n                <FormControl className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        Select Music\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={music}\n                        onChange={handleChange}\n                    >\n                        <MenuItem value={'King_Conga.mp3'}>\n                            King_Conga.mp3\n                        </MenuItem>\n                        <MenuItem value={'Mausoleum_Mash.mp3'}>\n                            Mausoleum_Mash.mp3\n                        </MenuItem>\n                        <MenuItem value={'Deja_Vu.mp3'}>Deja_Vu.mp3</MenuItem>\n                        {/* <>\n              {props.musicList.map((music) => {\n                  return (\n                  (<MenuItem\n                      value={music}>{music}\n                  </MenuItem>)\n                  );\n              })}\n              </> */}\n                    </Select>\n                </FormControl>\n            </div>\n        );\n    }\n    function ShowMusic() {\n        useEffect(() => {\n            props.socket.once('settingsUpdate_Res', (data) => {\n                const musicName = data.musicName;\n                const musicTime = data.musicTime;\n\n                if (props.roomInfo) {\n                    var minute = parseInt(musicTime / 60);\n                    var second = musicTime % 60;\n                    minute =\n                        minute >= 10 ? String(minute) : '0' + String(minute);\n                    second =\n                        second >= 10 ? String(second) : '0' + String(second);\n\n                    var tmp_roomInfo = props.roomInfo;\n                    tmp_roomInfo['music'] = musicName;\n                    strSetTime(minute + ' : ' + second);\n                }\n            });\n        }, []);\n        // }\n        return (\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <div>\n                    <TextField\n                        id=\"standard-read-only-input\"\n                        label=\"Play Time\"\n                        defaultValue={strTime}\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                    />\n                </div>\n            </form>\n        );\n    }\n    const StartGameReq = () => {\n        if (music === '') {\n            return alert('음악을 선택해주세요');\n        } else {\n            props.socket.emit('startGame_Req', props.roomID);\n        }\n    };\n\n\n    let isSetUp = false;\n    useEffect(() => {\n        if (!isSetUp) {\n            props.socket.off('startGame_Res').once('startGame_Res', (gameTime) => {\n                props.MusicPause();\n                // ? props.setTime(gameTime);  // 이미 저번 통신으로 저장한 정보임\n                props.history.push({\n                    pathname: '/game',\n                    state: { gameTime: gameTime },\n                });\n            });\n            isSetUp = true;\n        }\n    }, []);\n    return (\n        <>\n            <Grid>\n                <MusicInput />\n            </Grid>\n            <Grid>\n                <ShowMusic />\n            </Grid>\n            <Button variant=\"contained\" color=\"primary\" onClick={StartGameReq}>\n                {' '}\n                StartGame{' '}\n            </Button>\n\n            <img src={KeyMapTemp} style={{ width: '800px' }} />\n        </>\n    );\n}\n","import React, { useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Tetris99 from './audios/music/Tetris99.mp3';\nimport KeyMapTemp from './images/KeyMap.png';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\nexport default function MusicMember(props) {\n    const classes = useStyles();\n\n    var tmp_music = props.roomInfo['music'];\n    var tmp_time = props.roomInfo['gameTime'];\n\n    var minute = parseInt(tmp_time / 60);\n    var second = tmp_time % 60;\n    minute = minute >= 10 ? String(minute) : '0' + String(minute);\n    second = second >= 10 ? String(second) : '0' + String(second);\n    const [music, setMusic] = React.useState(tmp_music);\n    const [strTime, strSetTime] = React.useState(minute + ' : ' + second);\n    function MusicInput() {\n        return (\n            <div>\n                <FormControl className={classes.formControl} disabled>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        {music}\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                    >\n                        <MenuItem value={'King_Conga.mp3'}>\n                            King_Conga.mp3\n                        </MenuItem>\n                        <MenuItem value={'Mausoleum_Mash.mp3'}>\n                            Mausoleum_Mash.mp3\n                        </MenuItem>\n                        <MenuItem value={'Deja_Vu.mp3'}>Deja_Vu.mp3</MenuItem>\n                    </Select>\n                </FormControl>\n            </div>\n        );\n    }\n\n    function ShowMusic() {\n        useEffect(() => {\n            props.socket.once('settingsUpdate_Res', (data) => {\n                const musicName = data.musicName;\n                const musicTime = data.musicTime;\n                setMusic(musicName);\n\n                var minute = parseInt(musicTime / 60);\n                var second = musicTime % 60;\n                var tmp_roomInfo = props.roomInfo;\n                tmp_roomInfo['music'] = musicName;\n                strSetTime(String(minute) + ' : ' + String(second));\n            });\n        }, []);\n        return (\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <div>\n                    <TextField\n                        label={strTime}\n                        defaultValue={strTime}\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                    />\n                </div>\n            </form>\n        );\n    }\n    let isSetUp = false;\n    useEffect(() => {\n        if (!isSetUp) {\n          props.socket.off('startGame_Res').once('startGame_Res', (gameTime) => {\n              props.MusicPause();\n                props.history.push({\n                    pathname: '/game',\n                    state: { gameTime: gameTime },\n                });\n            });\n            isSetUp = true;\n        }\n    }, []);\n    return (\n        <>\n            <Grid>\n                <MusicInput />\n            </Grid>\n            <Grid>\n                <ShowMusic />\n            </Grid>\n            <Button variant=\"contained\" color=\"primary\" disabled>\n                {' '}\n                StartGame{' '}\n            </Button>\n            <img src={KeyMapTemp} style={{ width: '800px' }} />\n        </>\n    );\n}\n","import React, { useEffect, useLayoutEffect, useState } from 'react';\nimport {\n    Button,\n    TextField,\n    Fab,\n    Grid,\n    Paper,\n    GridList,\n    makeStyles,\n} from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport LobbyPlayerCard from './LobbyPlayerCard';\nimport MusicLeader from './MusicLeader';\nimport MusicMember from './MusicMember';\nimport {SnackAlertBtn} from './SnackAlert';\nimport {SnackbarProvider} from 'notistack';\n// 용기\n// 용기\n\n// 용기\n\nfunction Lobby(props) {\n    var IsLeader = true;\n    const PutPlayer = (props) => {\n        return (\n            <Grid container justify=\"space-between\">\n                <LobbyPlayerCard\n                    playerID={props.player.playerID}\n                    cash={props.player.cash}\n                    asset={props.player.asset}\n                />\n            </Grid>\n        );\n    };\n    function CopyURL() {\n        var copyText = document.getElementById('gameLink');\n        copyText.select();\n        document.execCommand('Copy');\n        // alert('복사되었습니다.');\n    }\n    let [roomInfo, setRoomInfo] = useState('');\n    const [roomLeader, setRoomLeader] = useState(props.socket.id); //props.roomInfo['roomLeader']\n    const [socketId, setSocketId] = useState(props.socket.id);\n\n    let soc = props.socket;\n    useLayoutEffect(() => {\n        if (soc) {\n            soc.on('joinRoom_Res', (room) => {\n                // 사람이 들어올 때마다 roomInfo 갱신\n                setRoomInfo(room.roomInfo);\n                props.SetRoomIdAndInfo(room);\n                setRoomLeader(room.roomInfo['roomLeader']);\n                setSocketId(soc.id);\n            });\n        }\n    }, []);\n\n    useLayoutEffect(() => {\n        // let soc = props.socket;\n        if (soc) {\n            soc.on('disconnect', (roomInfo) => {\n                // 사람이 나갈 때마다 roomInfo 갱신\n                setRoomInfo(roomInfo);\n                props.SetRoomIdAndInfo({\n                    roomID: props.roomID,\n                    roomInfo: roomInfo,\n                });\n                setRoomLeader(roomInfo['roomLeader']);\n                setSocketId(soc.id);\n            });\n        }\n    });\n\n    const Card = () => {\n        if (roomInfo != '') {\n            return <PutNewCard roomInfo={roomInfo} socket={props.socket} />;\n        }\n        return <PutPlayer player={props.player} />;\n    };\n\n    function getPlayersList(roomInfo) {\n        // let keyList = Object.keys(roomInfo).filter((key) => key.length === 20);\n        let playerList = [];\n        for (const [key, value] of Object.entries(roomInfo)) {\n            if (key.length === 20) {\n                playerList[key] = value;\n            }\n        }\n        return playerList;\n    }\n\n    function PutNewCard(props) {\n        if (props.roomInfo != '') {\n            let PlayerList = getPlayersList(props.roomInfo);\n\n            // ? PlayerList.forEach(player => console.log(player));\n            let tmparr = [];\n            for (let key in PlayerList) {\n                tmparr.push(PlayerList[key]);\n            }\n            return (\n                // ? PlayerList.forEach((player) => (<putPlayer player = {player}/>))\n                <div>\n                    {tmparr.map((player) => {\n                        return <PutPlayer player={player} />;\n                    })}\n                </div>\n            );\n        }\n    }\n    const CheckLeader = (props) => {\n        if (props.roomLeader === props.socketId) {\n            return (\n                <>\n                    <MusicLeader\n                        musicList={props.musicList}\n                        roomID={props.roomID}\n                        roomInfo={props.roomInfo}\n                        time={props.time}\n                        socket={props.socket}\n                        SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                        history={props.history}\n                        MusicPause= {props.MusicPause}\n                    />\n                </>\n            );\n        } else {\n            return (\n                <>\n                    <MusicMember\n                        musicList={props.musicList}\n                        roomID={props.roomID}\n                        roomInfo={props.roomInfo}\n                        time={props.time}\n                        socket={props.socket}\n                        SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                        history={props.history}\n                        MusicPause= {props.MusicPause}\n                    />\n                </>\n            );\n        }\n    };\n    return (\n        <>\n            <Grid\n                container\n                justify=\"center\"\n                style={{ height: '80vh', margin: '5vh 5vh 5vh 5vh' }}\n            >\n                <Grid style={{ width: '50%' }}>\n                    <Paper style={{ width: '30%' }}>{props.name}</Paper>\n                    <CheckLeader\n                        roomLeader={roomLeader}\n                        socketId={socketId}\n                        musicList={props.musicList}\n                        roomID={props.roomID}\n                        roomInfo={props.roomInfo}\n                        time={props.time}\n                        socket={props.socket}\n                        SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                        history={props.history}\n                        MusicPause= {props.MusicPause}\n                    />\n                </Grid>\n                <Grid style={{ width: '50%' }}>\n                    {/* <Grid style={{ height: '80vh' }}>{Card()}</Grid> */}\n                    <Grid style={{ width: '50%' }}>\n                        <GridList>\n                            <Grid style={{ height: '80vh' }}>{Card()}</Grid>\n                        </GridList>\n                        <Grid container justify=\"center\">\n                            <input\n                                type=\"text\"\n                                id=\"gameLink\"\n                                className=\"form-control text-center fw-bold bg-white\"\n                                value={`${window.location.protocol}//${window.location.host}/?id=${props.roomID}`}\n                                style={{ width: '70%' }}\n                                readOnly\n                            />\n                            <SnackbarProvider maxSnack={3}>\n                                <SnackAlertBtn\n                                    className=\"btn btn-warning\"\n                                    severity=\"success\"\n                                    message=\"링크가 복사됐어요! 😚\"\n                                    label=\"게임 방 URL copy\"\n                                    onAlert= {true}\n                                    type=\"button\"\n                                    onClick={CopyURL}\n                                    id=\"copy\"\n                                />\n                            </SnackbarProvider>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default withRouter(Lobby);\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport SetPlayerName from './setPlayerName';\nimport Lobby from './Lobby';\n// import { useSound } from './useSound';\nimport Tetris99 from './audios/music/Tetris99.mp3';\n\nexport default function EnterRoom(props, { history }) {\n\n\n    const [name, setName] = React.useState('');\n    const [player, setPlayer] = React.useState('');\n    const [roomID, setRoomID] = React.useState(props.roomID);\n    const [bgm_audio] = useState(new Audio(Tetris99));\n    const [playing, setPlaying] = useState(true);\n\n    const MusicPause = () => {\n        console.log(playing);\n        setPlaying(false);\n        console.log(playing);\n    }\n    useEffect(() => {\n        playing ? bgm_audio.play() : bgm_audio.pause();\n      },\n    //  ?  [playing] 이 조건이 없으면 렌더가 불필요하게 많이 된다.\n    // ? 그런데 있으면 렌더가 한 번 모자라서 음악이 안나옴\n    );\n\n    let textInput = useRef(null);\n    let musicList = [];\n    const handleOnSave = (textInput) => {\n        setName(textInput);\n        sendName(textInput);\n    };\n    if (props.socket == null) {\n        props.requestSocket('createPrivateRoom');\n        // setPlaying(true);\n    }\n    // useLayoutEffect(()=>{\n    //     if (bgm_audio.paused) {\n    //         console.log('play');\n    //         bgm_audio.play();\n    //     }\n    // }, []);\n    // const PauseAudio = (() => {\n    //     // if (!bgm_audio.paused) {\n    //         console.log(bgm_audio.paused);\n    //         bgm_audio.pause();\n    //         console.log(bgm_audio.paused); \n    //     // }\n    //         // bgm_audio = new Audio('');\n    // });\n\n    const sendName = (name) => {\n        // ev.preventDefault();\n        // console.log(props.socket);\n        const params = window.location\n            .toString()\n            .substring(window.location.toString().indexOf('?'));\n        const searchParams = new URLSearchParams(params);\n        if (searchParams.has('id')) {\n            // 초대링크 받아서 온 사람\n            props.socket.emit('joinRoom_Req', {\n                playerID: name,\n                roomID: searchParams.get('id'),\n            });\n            // console.log(searchParams.get('id'));\n            setRoomID(searchParams.get('id'));\n            setPlayer(name);\n        } else {\n            // 방장\n            props.socket.emit('createPrivateRoom_Req', { playerID: name });\n            props.socket.on('createPrivateRoom_Res', (data, useSound) => {\n                // console.log(data.roomInfo[props.socket.id]);\n                props.SetRoomIdAndInfo(data);\n                setPlayer(data.roomInfo[props.socket.id]);\n                setRoomID(data.roomID);\n                musicList = data.musicList;\n            });\n        }\n    };\n\n    const isName = name === '';\n    return (\n        <>\n            {isName && (\n                <SetPlayerName\n                    onSave={handleOnSave}\n                    name={name}\n                    setName={setName}\n                    history={history}\n                />\n            )}\n            {!isName && (\n                <Lobby\n                    name={name}\n                    socket={props.socket}\n                    history={history}\n                    roomID={roomID}\n                    player={player}\n                    SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                    roomInfo={props.roomInfo}\n                    musicList={musicList}\n                    time={props.time}\n                    MusicPause= {MusicPause}\n                    // audio = {bgm_audio}\n                />\n            )}\n        </>\n    );\n}\n","import React, { Component, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch,Redirect } from 'react-router-dom';\nimport LayoutGridEffect from './LayoutGridEffect';\nimport EnterRoom from './EnterRoom';\nimport Lobby from './Lobby';\n\nexport default function Routes(props) {\n    const [time, setTime] = React.useState(0);\n    const isValid = () => {\n        if (props.socket)\n            return true;\n        return false;\n    }\n\n    return (\n        <>\n            <Router>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={() => {\n                            return (\n                                <>\n                            <EnterRoom\n                                socket={props.socket}\n                                requestSocket={props.requestSocket}\n                                SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                                time ={time}\n                                setTime={setTime}\n                                roomID={props.roomID}\n                                roomInfo={props.roomInfo}\n                            />\n                            </>)\n                        }}\n                    />\n                    <Route\n                        path=\"/game\"\n                        render={() => {\n                            return(\n                            isValid() ? \n                            <LayoutGridEffect\n                                socket={props.socket}\n                                requestSocket={props.requestSocket}\n                                roomID={props.roomID}\n                                roomInfo={props.roomInfo}\n                                gameTime={time}\n                            /> : <Redirect to=\"/\" />)}}\n                        roomID={props.roomID}\n                        roomInfo={props.roomInfo}\n                    />\n                </Switch>\n            </Router>\n        </>\n    );\n}\n","import React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport CanvasManager from './CanvasManager';\nimport { Button } from '@material-ui/core';\nimport ChartComponent from './ChartComponent';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LayoutGrid from './LayoutGrid';\nimport Routes from './Routes';\n\nclass GameManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hash: '',\n            author: '',\n            message: '',\n            messages: [],\n            socketId: null,\n\n            roomID: null,\n            roomInfo: null,\n        };\n        // this.socket = io('15.165.129.19:5000'); //_ http://15.165.129.19:5000/\n        this.socket = io('http://3.34.156.16:5000');\n        this.socket.on('connect', () => {\n            console.log('connnected', this.socket);\n            this.socket.emit('join');\n        });\n    }\n    componentWillUnmount() {\n    }\n    componentDidMount() {\n        let socketCopy = null;\n        let user_cnt = 0;\n        // this.socket = io(\"15.165.129.19:5000\"); //_ http://15.165.129.19:5000/\n        // this.socket.on(\"connect\", async () => {\n        //   console.log(\"connnected\", this.socket);\n        //   this.socket.emit(\"join\");\n        // });\n        this.socket.on('curCoin', (data) => {\n            let today = new Date();\n            let minutes = today.getMinutes(); // 분\n            let seconds = today.getSeconds(); // 초\n            let milliseconds = today.getMilliseconds(); // 밀리초\n        });\n        this.socket.on('socket', (socket) => {\n            setSocket();\n        });\n        this.socket.on('update', function (data) {\n            addMessage(data);\n        });\n        this.socket.on('get_chart_data', function (data) {\n        });\n        const setSocket = (socket) => {\n            this.setState({ socketId: socket });\n        };\n        const addSocket = () => {\n            if (this.socketId === null) {\n                this.setState({ socketId: this.socket });\n            }\n        };\n        const addMessage = (data) => {\n            this.setState({ messages: [...this.state.messages, data] });\n        };\n        this.socket.on('update_users', function (data, user_count) {\n            user_cnt = user_count;\n            // 화면에 있는 6명에게 이 소켓이 부여되도록 하고싶어요 선생님 ㅠㅠ\n            // 이 자리에 들어가면 될거같아요\n            // room, start 버튼 도입하면 해결될 문제 !\n        });\n    }\n\n    TestEmitButton = (props) => {\n        return (\n            <>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.sendComment}\n                >\n                    소켓 연결 확인용 버튼(action::'test')\n                </Button>\n            </>\n        );\n    };\n\n    sendComment = (ev) => {\n        ev.preventDefault();\n        this.socket.emit('test', {\n            comment:\n                '연결 테스트 메시지 입니다. 클라이언트와 서버가 연결되어 있습니다.',\n        });\n    };\n    RequestSocket = (component, socket) => {\n        if (socket != null) return;\n        console.log(\n            component + ' 에서 socket을 요청했습니다. 랜더링을 다시 합니다.'\n        );\n        this.setState({ socketId: this.socket });\n    };\n\n    SetRoomIdAndInfo = (data) => {\n        this.setState({\n            roomID: data.roomID,\n            roomInfo: data.roomInfo,\n        });\n        console.log(\n            'SetRoomIdAndInfo. 랜더링을 다시 합니다.'\n        );\n    };\n\n    \n\n    render() {\n        const socket = this.state.socketId;\n        const roomID = this.state.roomID;\n        const roomInfo = this.state.roomInfo;\n        return (\n            <>\n                <Routes\n                    socket={socket}\n                    requestSocket={this.RequestSocket}\n                    SetRoomIdAndInfo={this.SetRoomIdAndInfo}\n                    roomID={roomID}\n                    roomInfo={roomInfo}\n                />\n            </>\n        );\n    }\n}\nexport default GameManager;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport GameManager from './GameManager';\nimport Test from './Test';\nimport GameOverModal from './GameOverModal';\n\nReactDOM.render(\n    <React.StrictMode>\n        <GameManager/>\n        {/* <GameOverModal/> */}\n        {/* <Test/> */}\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}