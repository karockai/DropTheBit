{"version":3,"sources":["reportWebVitals.js","logo.svg","StockMarket.js","PlayerManager.js","Chat.js","InfoManager.js","FundManager.js","App.js","CanvasManager.js","StockChart.js","ChartTitle.js","utils.js","Timer.js","ChartComponent.js","useSound.js","audios/effect/drumUp.wav","audios/effect/drumDown.wav","audios/effect/hatUp.wav","audios/effect/hatDown.wav","PurpleComponent.js","SnackAlert.js","TradeStock.js","MyAsset.js","Message.js","audios/effect/check.mp3","audios/effect/bidSound.wav","audios/effect/askSound.wav","StockDoneList.js","ChatRoom.js","PlayerList.js","GameOverModal.js","ThreeSecTimer.js","audios/music/King_Conga.mp3","audios/music/Mausoleum_Mash.mp3","audios/music/Deja_Vu.mp3","audios/music/Tetris99.mp3","BidTab.js","BidEntity.js","BidTable.js","AskEntity.js","AskTable.js","TabControl.js","LayoutGrid.js","LayoutGridEffect.js","images/Logo.png","setPlayerName.js","LobbyPlayerCard.js","MusicLeader.js","images/KeyMap.png","MusicMember.js","LobbyTabs.js","StartGame.js","Lobby.js","videos/LobbyImage3.gif","EnterRoom.js","Routes.js","GameManager.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","makeStyles","theme","root","width","backgroundColor","palette","background","paper","float","card","display","orange","inline","bullet","margin","modal_name","fontSize","marginBottom","modal_price","modal_arrow","maxWidth","Textfield","pos","modal","alignItems","justifyContent","height","border","boxShadow","shadows","padding","spacing","StockMarket","PlayerProfileCard","id","className","Avatar","image","NameHolder","name","this","props","Info","point","money","gain","InfoButton","buy","info","React","Component","variant","src","alt","style","Chat","title","InfoManager","withStyles","head","common","black","color","white","body","TableCell","action","hover","TableRow","table","typography","button","CanvasManager","candlesAppearance","wickStroke","fill","d","close","open","red","blue","stroke","candleStrokeWidth","widthRatio","opacity","StockChart","type","initialData","data","ratio","discontinuousTimeScaleProvider","inputDateAccessor","date","xScaleProvider","xScale","xAccessor","displayXAccessor","xExtents","last","Math","max","length","left","right","top","bottom","seriesName","yExtents","high","low","axisAt","orient","ticks","at","displayFormat","format","defaultProps","fitWidth","ChartTitle","useState","textColor","setBullColor","isBullIcon","SetBullIcon","wonYield","SetYield","SetWonBefore","currentWon","SetWonCurrent","upDown","SetUpDown","useEffect","datas","before","curPrice","current","sub","yid","toFixed","icon","parseWonToStr","won","toString","Grid","container","justify","SplitByThree","value","substring","timeParse","Timer","time","setTime","socket","on","restGameTime","minute","parseInt","second","String","ShowTime","ChartComponent","setup","setAPI","addCandleData","Date","setAPIData","state","shift","setState","console","log","requestSocket","dataLength","emit","chartData","map","CircularProgress","isStart","playSound","sound","volume","soundInject","Howl","PurpleButton","getContrastText","purple","Button","PurpleSwitch","switchBase","yellow","checked","track","Switch","SnackAlertBtn","enqueueSnackbar","useSnackbar","class","onClick","severity","onAlert","message","anchorOrigin","vertical","horizontal","autoHideDuration","label","SnackAlertFunc","preventDuplicate","CssTextField","borderColor","TextField","useStyles","flexGrow","textAlign","input","button_block","TradeStock","classes","currentBid","SetBid","newBid","SetNewBid","currentVolume","SetVolume","newVolume","SetNewVolume","unitBid","SetUnit","isBind","SetBind","isFocus","SetFocus","status","val","vol","sellStatus","setSellStatus","buyStatus","setBuyStatus","myCash","myAsset","myCoin","myWallet","setWallet","isInit","setInit","RefreshBid","once","priceUnit","Buy","bid","bbid","price","roomID","socketID","Sell","sbid","HandleKeyUp","e","inputCtrl","keyCode","preventDefault","HatUp","play","floor","HatDown","VolumeUp","Number","DrumUp","DrumDown","SetSellMaxCount","SetBuyMaxCount","useLayoutEffect","currentCash","cash","currentAsset","asset","currentCoin","coinVol","document","addEventListener","removeEventListener","costColor","grey","dateString","getMinutes","getSeconds","getMilliseconds","maxSnack","wrap","direction","item","size","onChange","target","ret","ExpBySymbol","button2","MyAsset","myAvg","currentAvg","avgPrice","Paper","fontWeight","Message","StockDoneList","doneItem","setItem","doneList","setList","messagesEnd","useRef","isMine","done","Check","BidSound","AskSound","scrollIntoView","behavior","GridList","idx","buySellColor","playerID","clear","ref","fontStyle","text","secondary","ChatRoom","setMessage","resMsg","setResMsg","messages","setMessages","textInput","scrollToBottom","sendMessage","author","roomInfo","activeElement","focus","blur","dirction","inputRef","onFocus","SetInputCtrl","onBlur","event","inputProps","greenTheme","createMuiTheme","primary","green","score","PlayerList","players","setPlayers","playerArray","player","index","myColor","myFont","xs","minWidth","GameOverModal","setOpen","rows","leaderBoard","history","useHistory","Modal","disablePortal","disableEnforceFocus","disableAutoFocus","disableBackdropClick","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","TableContainer","component","Table","aria-label","TableHead","align","TableBody","row","scope","push","typo","ThreeSecTimer","signal","setTimeout","minHeight","BidTab","sell","currentBids","bidObject","BidEntity","reqJson","reqPrice","reqVol","justifyItems","BidTable","setTable","CancelBid","num","bidTable","CancelBidByKey","bidElem","AskEntity","AskTable","CancelAsk","askTable","CancelAskByKey","askElem","StyledTabs","indicator","Tabs","TabIndicatorProps","children","StyledTab","textTransform","fontWeightRegular","pxToRem","marginRight","Tab","disableRipple","TabPanel","other","role","hidden","Box","p","Typography","a11yProps","demo1","demo2","TabControl","setValue","newValue","LayoutGrid","gameTime","useLocation","timerTime","setInputCtrl","over","setOver","APIdata","alignContents","justify-content","align-items","isChat","chat","bgm_audio","Audio","LayoutGridEffect","setTimerTime","setIsStart","SpecificMusic","Deja_Vu","King_Conga","Mausoleum_Mash","split","threeSecTimerOpen","setThreeSecTimerOpen","paused","withRouter","params","window","location","indexOf","searchParams","URLSearchParams","tmp","setTemp","handleOnSave","onSave","buttonMsg","has","Logo","InputProps","InputLabelProps","autoFocus","onKeyPress","key","transform","LobbyPlayerCard","isLeader","roomLeader","CardContent","gutterBottom","formControl","selectEmpty","marginTop","MusicLeader","tmp_music","tmp_time","music","setMusic","strTime","strSetTime","MusicInput","FormControl","InputLabel","Select","labelId","musicName","MenuItem","ShowMusic","musicTime","noValidate","autoComplete","defaultValue","readOnly","MusicMember","disabled","LobbyMusicOnOff","FormGroup","FormControlLabel","control","MusicPause","MusicStart","LobbyTabs","keymap","setKeymap","selectMusic","setSelectMusic","handleClose","openKey","Boolean","openSelect","CheckLeader","socketId","musicList","SetRoomIdAndInfo","currentTarget","Popover","anchorEl","transformOrigin","KeyMapTemp","StartGame","isSetUp","off","pathname","setRoomLeader","setSocketId","PutPlayer","setRoomInfo","soc","PutNewCard","playerList","Object","entries","getPlayersList","tmparr","room","protocol","host","getElementById","select","execCommand","EnterRoom","setName","setPlayer","setRoomID","Tetris99","playing","setPlaying","pause","sendName","get","useSound","isName","backgroundImage","backgroundImg","backgroundSize","Routes","exact","path","render","to","GameManager","TestEmitButton","sendComment","ev","comment","RequestSocket","hash","io","today","setSocket","addMessage","user_count","ReactDOM"],"mappings":"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","file":"static/js/main.c7edb4e3.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport {\n    FormHelperText,\n    Input,\n    FormControl,\n    makeStyles,\n    TextField,\n    InputAdornment,\n} from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport './PlayerManager.css';\nimport axios from 'axios';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\n// import {Fade} from './TradeModal.js';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport clsx from 'clsx';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '80%',\n        //   maxWidth: '30ch',\n        backgroundColor: theme.palette.background.paper,\n        float: 'left',\n    },\n    card: {\n        display: 'inline-block',\n    },\n    orange: {\n        backgroundColor: '#666666',\n    },\n    inline: {\n        display: 'inline',\n    },\n    bullet: {\n        width: '45%',\n        margin: '10px',\n    },\n    modal_name: {\n        fontSize: 60,\n        marginBottom: 14,\n    },\n    modal_price: {\n        fontSize: 55,\n        marginBottom: 50,\n    },\n    modal_arrow: {\n        maxWidth: '20px',\n        float: 'right',\n    },\n    Textfield: {\n        fontSize: 20,\n        marginBottom: 10,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        width: '500px',\n        height: '500px',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        float: 'auto',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(4, 6, 6),\n    },\n}));\nfunction StockRow(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const Fade = React.forwardRef(function Fade(props, ref) {\n        const { in: open, children, onEnter, onExited, ...other } = props;\n        const style = useSpring({\n            from: { opacity: 0 },\n            to: { opacity: open ? 1 : 0 },\n            onStart: () => {\n                if (open && onEnter) {\n                    onEnter();\n                }\n            },\n            onRest: () => {\n                if (!open && onExited) {\n                    onExited();\n                }\n            },\n        });\n        return (\n            <animated.div ref={ref} style={style} {...other}>\n                {children}\n            </animated.div>\n        );\n    });\n    return (\n        <Row>\n            <Button\n                className=\"button\"\n                onClick={handleOpen}\n                style={{ width: '100%' }}\n            >\n                <Col>{props.stock.stock_name}</Col>\n                <Col>{props.stock.prevYear}</Col>\n                <Col>{props.stock.curr_price}</Col>\n                <Col>{props.stock.id}</Col>\n                <Col>{props.stock.upDownRate}</Col>\n            </Button>\n            <Modal\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2\n                            className={classes.modal_name}\n                            id=\"spring-modal-title\"\n                        >\n                            {props.stock.stock_name}\n                        </h2>\n                        <h2\n                            className={classes.modal_price}\n                            id=\"spring-modal-title\"\n                        >\n                            {props.stock.curr_price}\n                        </h2>\n                        <PurchaseModal\n                            user={props.user}\n                            socket={props.socket}\n                            stock_list={props.user.stock}\n                            cash={props.user.cash}\n                            stock_name={props.stock.stock_name}\n                            price={props.stock.curr_price}\n                        />\n                    </div>\n                </Fade>\n            </Modal>\n        </Row>\n    );\n}\nfunction PurchaseModal(props) {\n    const classes = useStyles();\n    const [stock, setStock] = useState(null);\n    const [tmpStock, setTmpStock] = useState(0);\n    const [cash, setCash] = useState(props.cash);\n    const [price, setPrice] = useState(props.price);\n    const [diffrence, setDiffrence] = useState(0);\n    const [open, setOpen] = React.useState(false);\n    /*\n   *  유저가 가지고있는 stock list에서 현재 modal에 띄워진 stock과 일치하는 stock을 찾는다.\n    ? for문이 최선? 10개밖에 없으니까 일단 괜찮을 것 같긴 함  \n   */\n    for (let i = 0; i < props.stock_list.length; i++) {\n        if (props.stock_list[i].stock_name === props.stock_name) {\n            setStock(props.stock_list[i]);\n            setTmpStock(props.stock_list[i]);\n            break;\n        }\n    }\n    function PlusArrow(props) {\n        setDiffrence(diffrence + 1);\n        return setTmpStock(tmpStock + 1);\n    }\n    function MinusArrow(props) {\n        setDiffrence(diffrence - 1);\n        return setTmpStock(tmpStock - 1);\n    }\n    const handleClick = () => {\n        setOpen(true);\n    };\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n    function Buy() {\n        props.socket.emit('test', {\n            comment:\n                '_' +\n                props.stock_name +\n                '_ [' +\n                tmpStock +\n                '] 개의 주식의' +\n                ' 매수 주문을 체결했습니다.',\n        });\n        props.socket.emit(\n            'stock_buy',\n            // {\n            //   //@ playerId, roomId,\n            //   userID: props.user.user_id,\n            //   socketID: props.user.socket_id,\n            //   stockName: props.stock_name,\n            //   buyCount: tmpStock,\n            // }\n            {\n                room_id: 'test_room',\n                player_id: 'karockai',\n                type: 'stock_buy',\n                stock_name: 'A화학',\n                ea: '2',\n            }\n        );\n        props.socket.on('stock_buy_res', (response, player_info) => {\n            handleClick();\n            //@ pop up event,\n        });\n    }\n    function Sell() {\n        props.socket.emit('test', {\n            comment:\n                '_' +\n                props.stock_name +\n                '_ [' +\n                tmpStock +\n                '] 개의 주식의' +\n                ' 매도 주문을 체결했습니다.',\n        });\n        //@ Sell 관련 backend 개발 이후에 추가할 예정\n    }\n    return (\n        <div>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <FormControl\n                    className={clsx(\n                        classes.margin,\n                        classes.withoutLabel,\n                        classes.textfield\n                    )}\n                    style={{ margin: 'auto' }}\n                >\n                    <FormHelperText id=\"standard-weight-helper-text\">\n                        보유 주\n                    </FormHelperText>\n                    <Input\n                        id=\"standard-adornment-weight\"\n                        value={tmpStock}\n                        endAdornment={\n                            <InputAdornment position=\"end\">개</InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <FormControl\n                    className={clsx(\n                        classes.margin,\n                        classes.withoutLabel,\n                        classes.textfield\n                    )}\n                    style={{ margin: 'auto' }}\n                >\n                    <FormHelperText id=\"standard-weight-helper-text\">\n                        지불 금액\n                    </FormHelperText>\n                    <Input\n                        id=\"standard-adornment-weight\"\n                        value={price * diffrence}\n                        endAdornment={\n                            <InputAdornment position=\"end\">원</InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <FormControl\n                    className={clsx(\n                        classes.margin,\n                        classes.withoutLabel,\n                        classes.textField\n                    )}\n                    style={{ margin: 'auto' }}\n                >\n                    <FormHelperText id=\"standard-weight-helper-text\">\n                        잔액\n                    </FormHelperText>\n                    <Input\n                        id=\"standard-adornment-weight\"\n                        value={cash - price * diffrence}\n                        endAdornment={\n                            <InputAdornment position=\"end\">원</InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </form>\n            <form className={classes.modal_arrow} noValidate autoComplete=\"off\">\n                <ArrowDropUpIcon\n                    onClick={PlusArrow}\n                    style={{ fontSize: '40px' }}\n                />\n                <ArrowDropDownIcon\n                    onClick={MinusArrow}\n                    style={{ fontSize: '40px' }}\n                />\n            </form>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                    Buy(props.stock_name);\n                }}\n            >\n                매수\n            </Button>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                    Sell(props.stock_name);\n                }}\n            >\n                매도\n            </Button>\n            <div className={classes.root}>\n                <Snackbar\n                    open={open}\n                    autoHideDuration={2000}\n                    onClose={handleClose}\n                >\n                    <Alert onClose={handleClose} severity=\"success\">\n                        매수 주문이 완료되었어요! 😍\n                    </Alert>\n                </Snackbar>\n            </div>\n        </div>\n    );\n}\nfunction StockMarket(props) {\n    const marketCurrent = props.stock_list.map((stock, id) => {\n        return (\n            <StockRow\n                socket={props.socket}\n                className=\"stock\"\n                key={id}\n                stock={stock}\n                user={props.user}\n            />\n        );\n    });\n    return (\n        <div className=\"animate-change\">\n            <p>StockMarket</p>\n            <div>\n                <Container>\n                    <Row>\n                        <Col>종목명</Col>\n                        <Col>종목번호</Col>\n                        <Col>현재가</Col>\n                        <Col>id</Col>\n                        <Col>분류</Col>\n                    </Row>\n                    {marketCurrent}\n                </Container>\n            </div>\n        </div>\n    );\n}\nexport default StockMarket;\n","import logo from './logo.svg';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, Container, Col, Row } from 'react-bootstrap';\nimport './PlayerManager.css';\nimport user_list from './user.json';\n\nclass PlayerProfileCard extends React.Component {\n    render() {\n        return (\n            <div id=\"card\">\n                <div className=\"personal\">\n                    <Avatar image=\"https://raw.githubusercontent.com/JustMonk/codepen-resource-project/master/img/pixel%20avatar.png\" />\n                    <NameHolder name={this.props.name} />\n                </div>\n                <Info\n                    point={this.props.point}\n                    money={this.props.money}\n                    gain={this.props.gain}\n                />\n                <InfoButton buy=\"매매목록\" info=\"대화요청\" />\n            </div>\n        );\n    }\n}\n\nfunction InfoButton(props) {\n    return (\n        <div className=\"infoButton\">\n            <Button variant=\"info\">{props.buy}</Button>\n            <Button variant=\"danger\">{props.info}</Button>\n        </div>\n    );\n}\n\nfunction Info(props) {\n    return (\n        <div className=\"info\">\n            <span>포인트 {props.point}</span>\n            <span>자산 {props.money}</span>\n            <span>수익률 {props.gain}</span>\n        </div>\n    );\n}\n\nfunction Avatar(props) {\n    return (\n        <div className=\"avatar\">\n            <img src={props.image} alt=\"user avatar\" />\n        </div>\n    );\n}\n\nfunction NameHolder(props) {\n    return (\n        <div className=\"nameHolder\" style={{ margin: 'auto' }}>\n            <h1>{props.name}</h1>\n        </div>\n    );\n}\n\nclass PlayerManager extends React.Component {\n    renderUser(userIdx) {\n        return (\n            <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                    <Card.Title>Card Title</Card.Title>\n\n                    <Card.Link href=\"#\">Card Link</Card.Link>\n                    <Card.Link href=\"#\">Another Link</Card.Link>\n                </Card.Body>\n            </Card>\n        );\n    }\n\n    yonggi() {}\n\n    render() {\n        // const users = this.state.users;\n        const users = user_list;\n        const isLeft = this.props.isLeft;\n        let userProfile = Array(6).fill(null);\n        users.map((user, idx) => {\n            userProfile[idx] = (\n                <Row>\n                    <PlayerProfileCard\n                        onClick={this.yonggi}\n                        name={user.id}\n                        winRate={user.yield}\n                        point={user.point}\n                        money={user.cash}\n                        gain={user.yield}\n                    />\n                </Row>\n            );\n        });\n\n        return (\n            //@ 6명의 유저를 모두 출력 해주도록 함수를 호출\n            //@ template 찾기\n            <div>\n                <Container>\n                    {isLeft ? (\n                        <Col>\n                            {userProfile[0]}\n                            {userProfile[1]}\n                            {userProfile[2]}\n                        </Col>\n                    ) : (\n                        <Col>\n                            {userProfile[3]}\n                            {userProfile[4]}\n                            {userProfile[5]}\n                        </Col>\n                    )}\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default PlayerManager;\n\n// class ProfileCard extends React.Component {\n//     render() {\n//        return (\n//           <div id=\"card\">\n//              <div className=\"personal\">\n//                 <Avatar image=\"https://raw.githubusercontent.com/JustMonk/codepen-resource-project/master/img/pixel%20avatar.png\" />\n//                 <NameHolder name={this.props.name} career={this.props.career} />\n//              </div>\n//              <Info pens={this.props.pens} posts={this.props.posts} projects={this.props.projects} />\n//              <Skills skills={this.props.skills} />\n//              <Followers followers={this.props.followers} following={this.props.following} />\n//              <RandomizeButton />\n//           </div>\n//        );\n//     }\n//  }\n\n//  function RandomizeButton() {\n//     let rand = Math.random;\n//     let maxSkills = 3 + getRandom(2);\n\n//     function getRandom(arg) {\n//        if (Array.isArray(arg)) return arg[Math.round((rand() * (arg.length - 1)).toFixed(2))];\n//        return Math.round((rand() * arg).toFixed(2)) || 1;\n//     }\n\n//     function randomize() {\n//        let names = [\"Mike\", \"Andrew\", \"Tom\", \"Jack\", \"Garry\", \"Nick\", \"Daniel\"];\n//        let surnames = [\"Vazovsky\", \"Anderson\", \"Archer\", \"Armstrong\", \"Ash\", \"Bradley\", \"Collins\"];\n//        let careers = [\"Frontend developer\", \"Backend developer\", \"Designer\", \"Data scientist\", \"Engineer\", \"Painter\"];\n//        let skills = [\"CSS3\", \"Ruby\", \"PHP\", \"JavaScript\", \"React\", \"HTML5\", \"Vue.js\", \"Angular\", \"Python\", \"C#\", \"C++\", \"Java\", \"Node.JS\"];\n//        let randomSkils = [];\n//        while (randomSkils.length <= maxSkills) { randomSkils.push(skills.splice(getRandom(skills.length - 1), 1)); }\n//        ReactDOM.render(<ProfileCard name={getRandom(names) + \" \" + getRandom(surnames)} career={getRandom(careers)} pens={getRandom(60)} posts={getRandom(20)} projects={getRandom(10)} skills={randomSkils} followers={getRandom(44)} following={getRandom(27)} />, document.getElementById('root'));\n\n//        //anim changeable data\n//        let changeNodes = document.querySelectorAll('.nameHolder, .info span, .skills, .followers h2');\n//        changeNodes.forEach(val => {\n//           val.classList.add('animate-change');\n//        });\n\n//        changeNodes[0].addEventListener(\"animationend\", animationEnd);\n//        changeNodes[0].addEventListener(\"webkitAnimationEnd\", animationEnd);\n//        function animationEnd(e) {\n//           changeNodes.forEach(val => {\n//              val.classList.remove(\"animate-change\");\n//           });\n//        }\n//     }\n\n//     return (\n//        <a className=\"randomizeButton\" onClick={randomize}>Randomize</a>\n//     );\n//  }\n\n//  function Followers(props) {\n//     return (\n//        <div className=\"followers\">\n//           <div>\n//              <h1>followers</h1>\n//              <h2>{props.followers}</h2>\n//           </div>\n//           <div>\n//              <h1>following</h1>\n//              <h2>{props.following}</h2>\n//           </div>\n//        </div>\n//     );\n//  }\n\n//  function Skills(props) {\n//     let startKey = 0;\n//     return (\n//        <div className=\"skills\">\n//           {\n//              props.skills.map(elem => {\n//                 return <span key={startKey++}>{elem}</span>\n//              })\n//           }\n//        </div>\n//     );\n//  }\n\n//  function Avatar(props) {\n//     return (\n//        <div className=\"avatar\">\n//           <img src={props.image} alt=\"user avatar\" />\n//        </div>\n//     );\n//  }\n\n//  function NameHolder(props) {\n//     return (\n//        <div className=\"nameHolder\">\n//           <h1>{props.name}</h1>\n//           <h2>{props.career}</h2>\n//        </div>\n//     );\n//  }\n\n//  function Info(props) {\n//     return (\n//        <div className=\"info\">\n//           <span>Pens: {props.pens}</span>\n//           <span>Posts: {props.posts}</span>\n//           <span>Projects: {props.projects}</span>\n//        </div>\n//     );\n//  }\n\n//  ReactDOM.render(<ProfileCard name=\"Mike Vazovsky\" career=\"Frontend developer\" pens=\"14\" posts=\"7\" projects=\"5\" skills={[\"CSS3\", \"HTML5\", \"JavaScript\", \"PHP\"]} followers=\"45\" following=\"12\" />, document.getElementById('root'));\n","import React, { useState } from 'react';\n\nconst strByteLength = (s, b, i, c) => {\n    for (b = i = 0; (c = s.charCodeAt(i++)); b += c >> 11 ? 3 : c >> 7 ? 2 : 1);\n    return b;\n};\n\nfunction Chat(props) {\n    const [msg, setMessage] = useState('');\n\n    const OnChange = (e) => {\n        setMessage(e.target.value);\n    };\n\n    const OnKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            props.sendMessage(e);\n        }\n    };\n\n    const color = (author) => {\n        if (author === 'SERVER') {\n            return '#BB0000';\n        } else {\n            return (\n                '#' +\n                Math.floor(\n                    parseInt(author.substring(4)) * 121203891028309128315\n                ).toString(16)\n            );\n        }\n    };\n    return (\n        <div className=\"container\">\n            <div style={{ width: '100%' }}>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"card-title\">Stock Chat</div>\n                        <hr />\n                        <div className=\"messages\">\n                            {props.chat.messages.map((message) => {\n                                return (\n                                    <div\n                                        style={{ color: color(message.author) }}\n                                    >\n                                        {message.author}: {message.message}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"card-footer\">\n                        <br />\n                        <input\n                            ref={(input) => input && input.focus()}\n                            type=\"text\"\n                            placeholder=\"Message\"\n                            className=\"form-control\"\n                            value={msg}\n                            onKeyPress={OnKeyPress}\n                            onChange={OnChange}\n                        />\n                        <br />\n                        <button\n                            value={msg}\n                            onClick={props.sendMessage}\n                            className=\"btn btn-primary form-control\"\n                        >\n                            Send\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;\n","import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, CardContent, CardActions, makeStyles } from '@material-ui/core';\nimport { Button } from 'react-bootstrap';\nimport { ChatFeed, Message } from 'react-chat-ui';\nimport './ChatManager.css';\nimport './InfoManager.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport './App.css';\nimport newsList from './news.json';\nimport stockList from './stock.json';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\nimport { orange } from '@material-ui/core/colors';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\n// import {Fade} from './TradeModal.js';\n\n// const InfoManager = () => {\n//     const []\n// }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '30ch',\n        //   backgroundColor: theme.palette.background.paper,\n    },\n    card: {\n        display: 'inline-block',\n    },\n    orange: {\n        backgroundColor: '#666666',\n    },\n    inline: {\n        display: 'inline',\n    },\n    bullet: {\n        width: '45%',\n        margin: '10px',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nfunction MakeInfo(props) {\n    const classes = useStyles();\n    const company = props.comp; //@ 회사명\n    const headline = props.info[0]; //@ 뉴스 헤드라인\n    return (\n        <div>\n            <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                    <Avatar className={classes.orange}>\n                        {company.substring(0, 1)}\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={company}\n                    secondary={\n                        <React.Fragment>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                className={classes.inline}\n                                color=\"textPrimary\"\n                            ></Typography>\n                        </React.Fragment>\n                    }\n                />\n            </ListItem>\n        </div>\n    );\n}\n\nfunction MakeInfoList(props) {\n    const classes = useStyles();\n    return (\n        <>\n            <MakeInfo info={props.info} comp={props.comp} />\n        </>\n    );\n}\n// function plus(props) {\n//   const [points,setPoints] = useState(0);\n//   return (\n//     <div>\n//     <Typography variant=\"h5\" component=\"h2\">\n//     {setPoints(points+1)}\n//     </Typography>\n//     </div>\n//   );\n// }\n\n// Fade.propTypes = {\n//   children: PropTypes.element,\n//   in: PropTypes.bool.isRequired,\n//   onEnter: PropTypes.func,\n//   onExited: PropTypes.func,\n// };\n\nfunction SpringModal(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [lockOpen, setLockOpen] = React.useState(false);\n    const handleOpen = () => {\n        setOpen(true);\n        setLockOpen(true);\n        //@ point 감소\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function lockState() {\n        let lock;\n        if (lockOpen) {\n            lock = <LockOpenRoundedIcon />;\n        } else {\n            lock = <LockRoundedIcon />;\n        }\n        return <>{lock}</>;\n    }\n\n    const Fade = React.forwardRef(function Fade(props, ref) {\n        const { in: open, children, onEnter, onExited, ...other } = props;\n        const style = useSpring({\n            from: { opacity: 0 },\n            to: { opacity: open ? 1 : 0 },\n            onStart: () => {\n                if (open && onEnter) {\n                    onEnter();\n                }\n            },\n            onRest: () => {\n                if (!open && onExited) {\n                    onExited();\n                }\n            },\n        });\n\n        return (\n            <animated.div ref={ref} style={style} {...other}>\n                {children}\n            </animated.div>\n        );\n    });\n\n    return (\n        <div>\n            <Button\n                variant=\"outline-dark\"\n                style={{ float: 'right', margin: '4px 4px 10px' }}\n                type=\"button\"\n                onClick={handleOpen}\n            >\n                {lockState()}\n                &nbsp;정보 보기\n            </Button>\n            <Modal\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2 id=\"spring-modal-title\">{props.comp}</h2>\n                        <p id=\"spring-modal-description\">{props.info[0]}</p>\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\n\nfunction InfoManager(props) {\n    const classes = useStyles();\n    const [infos, setInfos] = useState(newsList);\n    const [companys, setComp] = useState(stockList);\n    const initInfo = () => {};\n\n    const infoList = infos.map((info, idx) => {\n        return (\n            <Card\n                className={[\n                    classes.card,\n                    'animate-change',\n                    classes.bullet,\n                ].join(' ')}\n            >\n                <CardContent>\n                    <MakeInfoList\n                        info={info}\n                        comp={companys[idx]['stock_name']}\n                    />\n                    <SpringModal\n                        point={props.point}\n                        info={info}\n                        comp={companys[idx]['stock_name']}\n                    />\n                </CardContent>\n            </Card>\n        );\n    });\n    return (\n        <>\n            My Point<h1>{props.point}</h1>\n            {infoList}\n        </>\n    );\n}\nexport default InfoManager;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport stock_list from './stock.json';\nimport user_list from './user.json';\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\n// ! stock_list, stock에서 받아온 json을 파싱해서 새로운 object파일 만듬\nfunction createData(stock_name, purchase_amount, number, curr_price) {\n    const yield_amount = (curr_price - purchase_amount) * 100;\n    return { stock_name, purchase_amount, number, curr_price, yield_amount };\n}\n\n// ! 한 줄에 표시되는 정보 만듬\nfunction CreateLine() {\n    // 유저명, 총 평가금액, 작년 대비 이익(+수익률)\n    // 종목명, 매입금액 ,주식수, 현재금액, 수익률\n\n    let [stockList, setStockList] = useState(stock_list);\n    let tmpTable = [...stockList]; // deepcopy\n\n    for (let idx = 0; idx < 10; ++idx) {\n        tmpTable[idx] = createData(\n            stockList[idx]['stock_name'],\n            30, //'구매했을때의 평균가격(아직구현X)'\n            stockList[idx]['upDownRate'],\n            stockList[idx]['curr_price']\n        );\n    }\n\n    // setStockList(tmpTable);\n\n    return (\n        <>\n            {tmpTable.map((object) => (\n                <StyledTableRow key={object.stock_name}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                        {object.stock_name}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                        {object.purchase_amount}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                        {object.number}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                        {object.curr_price}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                        {object.yield_amount}\n                    </StyledTableCell>\n                </StyledTableRow>\n            ))}\n        </>\n    );\n}\n// users.map((user, idx) => {\n//   userProfile[idx] = (<Row>\n//       <PlayerProfileCard onClick={this.yonggi} name={user.name} winRate={user.winRate} point={user.point} money={user.money} gain={user.gain} />\n//   </Row>)\n// })\n// const rows = [\n//   createData('B엔터', '3,000', 100, '30,000', 4.0),\n//   createData('F바이오', '2,000', 10, '2,000', 4.3),\n//   createData('H뷰티', '100,000', 1, '120,000', 6.0),\n//   createData('I화학', '40,000', 2, '30,000', 4.3),\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        // minWidth: 700,\n    },\n    root: {\n        ...theme.typography.button,\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n}));\n\nfunction UserName() {\n    const classes = useStyles();\n    const userName = '김용기';\n    return <div className={classes.root}>{userName + '님의 계좌 잔고'}</div>;\n}\n\nconst currTotal = 5900000;\nconst lastTotal = 3200000;\nconst profitAmount = currTotal - lastTotal;\n// const profitRate = currTotal / lastTotal;\nconst profitRate = 5.4;\n\nfunction CustomizedTables() {\n    const classes = useStyles();\n\n    return (\n        <TableContainer className=\"animate-change\" component={Paper}>\n            <UserName />\n            <Table>\n                <TableRow>\n                    <TableCell>총 평가금액</TableCell>\n                    {/* <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell> */}\n                    <TableCell style={{ fontSize: 30 }} align=\"right\">\n                        {currTotal}\n                    </TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>작년대비</TableCell>\n                    <TableCell align=\"right\">\n                        {'+' +\n                            profitAmount +\n                            '(+' +\n                            `${(profitRate * 100).toFixed(0)} %)`}\n                    </TableCell>\n                    {/* <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell> */}\n                </TableRow>\n            </Table>\n            <Table className={classes.table} aria-label=\"customized table\">\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell>종목명</StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                            매입금액\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">주식수</StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                            현재금액\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">수익률</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <CreateLine />\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default CustomizedTables;\n","import logo from './logo.svg';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport './App.css';\nimport Chat from './Chat'\n\nfunction App() {\n  return (\n    <div>\n      Settings.... 만들어야해...ㅠ\n    </div>\n  );\n}\n\n// Player fucntion\n//_ 공통 기능 :: 플레이어 객체의 정보를 가지고 표현한다\nclass PlayerManager extends React.Component {\n  constructor(props) { // Initialize\n    super(props);\n    this.state = {\n      userID: null,\n      userPoint: 0,\n      userMoney: 0,\n      hint: null,\n\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    }\n  }\n}\n//_ 공통 기능 :: 버튼(button) 객체에 해당하는 화면을 캔버스(canvas)에 띄운다.\n//_ \nclass ButtonManager extends React.Component {\n\n}\n//_ 공통 기능 :: \nclass CanvasManager extends React.Component {\n\n}\n\nclass GameManager extends React.Component {\n  //_ 전체 힌트,\n  //_ hint index를 api 요청을 해.\n  //_ response data가 hint이고,\n  // <CanvasManager hint = \"\"/>\n  // this.prop.hint \n}\n\n\nexport default App;\n","import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    Tab,\n    Tabs,\n    useTheme,\n} from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport './CanvasManager.css';\nimport StockMarket from './StockMarket';\nimport PlayerManager from './PlayerManager';\nimport Chat from './Chat';\nimport InfoManager from './InfoManager';\nimport CustomizedTables from './FundManager';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport App from './App';\nimport PlayerInfo from './yonggi_json/player_info.json';\nimport setting_price from './yonggi_json/setting_price.json';\nimport stock from './stock.json';\n/**\n *\n * socket_id를 대조해서 현재 플레이어가 누군지 저장해둔다.\n */\n\n// function TabPanel(props) {\n//     const { children, value, index, ...other } = props;\n\n//     return (\n//         <div\n//             role=\"tabpanel\"\n//             hidden={value !== index}\n//             id={`full-width-tabpanel-${index}`}\n//             aria-labelledby={`full-width-tab-${index}`}\n//             {...other}\n//         >\n//             {value === index && (\n//                 <Box p={3}>\n//                     <Typography>{children}</Typography>\n//                 </Box>\n//             )}\n//         </div>\n//     );\n// }\n\n// TabPanel.propTypes = {\n//     children: PropTypes.node,\n//     index: PropTypes.any.isRequired,\n//     value: PropTypes.any.isRequired,\n// };\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 1000,\n    },\n}));\n\nfunction FullWidthTabs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"종목토론방\"\n                        {...a11yProps(0)}\n                        onClick={() => props.onClick('chat')}\n                    />\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"매매하기\"\n                        {...a11yProps(1)}\n                        onClick={() => props.onClick('stock')}\n                    />\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"자산확인\"\n                        {...a11yProps(2)}\n                        onClick={() => props.onClick('fund')}\n                    />\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"뉴스보기\"\n                        {...a11yProps(3)}\n                        onClick={() => props.onClick('info')}\n                    />\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"게임설정\"\n                        {...a11yProps(4)}\n                        onClick={() => props.onClick('setting')}\n                    />\n                </Tabs>\n            </AppBar>\n        </div>\n    );\n}\n\n//_ previous Toggles\n// function ToggleButtons(props) {\n//     const [alignment, setAlignment] = React.useState('left');\n\n//     const handleAlignment = (event, newAlignment) => {\n//         setAlignment(newAlignment);\n//     };\n//     return (\n//         <ToggleButtonGroup\n//             value={alignment}\n//             exclusive\n//             onChange={handleAlignment}\n//             aria-label=\"text alignment\"\n//         >\n//             <ToggleButton onClick={() => props.onClick(\"chat\")} className=\"tool-btn\" size=\"large\" value=\"chat\" aria-label=\"centered\">\n//                 채팅\n//             </ToggleButton>\n//             <ToggleButton onClick={() => props.onClick(\"stock\")} className=\"tool-btn\" value=\"stock\" aria-label=\"centered\">\n//                 주가\n//             </ToggleButton>\n//             <ToggleButton onClick={() => props.onClick(\"fund\")} className=\"tool-btn\" value=\"fund\" aria-label=\"centered\">\n//                 자산\n//             </ToggleButton>\n//             <ToggleButton onClick={() => props.onClick(\"info\")} className=\"tool-btn\" value=\"info\" aria-label=\"centered\">\n//                 정보\n//             </ToggleButton>\n//             <ToggleButton onClick={() => props.onClick(\"setting\")} className=\"tool-btn\" value=\"setting\" aria-label=\"centered\">\n//                 설정\n//             </ToggleButton>\n//         </ToggleButtonGroup>\n//     );\n// }\n\nfunction FullWidthGrid(props) {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n    }));\n    const classes = useStyles();\n    const stocks = stock;\n    function Canvas() {\n        let select;\n        if (props.canvas === 'chat') {\n            select = (\n                <Chat\n                    getMessage={props.getMessage}\n                    sendMessage={props.sendMessage}\n                    chat={props.chat}\n                />\n            );\n        } else if (props.canvas === 'stock') {\n            select = (\n                <StockMarket\n                    socket={props.socket}\n                    user={props.userState}\n                    stock_list={stocks}\n                />\n            );\n        } else if (props.canvas === 'fund') {\n            select = <CustomizedTables />;\n        } else if (props.canvas === 'info') {\n            const point = props.userState.info_pt;\n            select = <InfoManager point={point} />;\n        } else if (props.canvas === 'setting') {\n            select = <App />;\n        }\n        return <>{select}</>;\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <FullWidthTabs onClick={props.onClick} />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                    <Paper className={classes.paper}>\n                        <PlayerManager isLeft={true} />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Paper className={classes.paper}>\n                        <Canvas />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                    <Paper className={classes.paper}>\n                        <PlayerManager isLeft={false} />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\n//_ 데이터 구조\n// 캔버스에서 무엇을 관리해야하나. (아래 해당하는 전체 게임 로직에 관한 모든것)\n// Main -> 방 정보, 게임 Turn, 시간, 유저 숫자, 게임 상태 (시작-턴 시작, 진행-턴 진행, 종료-턴 종료, 대기-임의의 이벤트 등),\n// Users -> 방 안의 유저 정보 리스트 (닉네임, 포인트, 자산, 수익률, 자산 내용, 승률 등)\n// Chat -> 내 닉네임, 채팅 상대 목록, 귓속말 상대, 모든 대화 내용 (public, private)\n// Stock -> 구매 가능한 종목, 종목에 대한 여러 지표들 (종목명, 전년, 올해 가격, 등락, [매도])\n// Fund -> 구매한 종목, 내 자산 지표 (내 닉네임, 총 평가금액, 수익률), 종목에 대한 여러 지표들 (종목명, 종목가격, 수익률, 구입 종목 수[매수])\n// Inform -> 내 포인트, 구매 가능한 정보 리스트 (기업정보, 기업내용, 가격point), 구매한 정보 리스트\n// Setting\nfunction CanvasManager(props) {\n    var user_idx;\n    const socket_id = 'aaaaaa';\n    const room_id = '32dmb141zvvd';\n    // var year = setting_price.;\n    /* \n    => socket_id와 room_id는 player_info를 통해 받아오는 걸로 수정해야 함\n    */\n    // ? socket_id, room_id를 객체 밖으로 빼서 key값으로 만들면 for문 없이 key값으로 찾아올 수 있을듯\n    for (var i = 0; i < PlayerInfo.length; i++) {\n        if (socket_id === PlayerInfo[i].socket_id) {\n            user_idx = i;\n        }\n    }\n\n    const player_info = PlayerInfo[user_idx];\n    const [userState, setUserState] = useState(player_info);\n    const [currCanvas, setCurrCanvas] = useState('chat');\n\n    const onClick = (canvasName) => {\n        setUserState({\n            ...userState,\n            [currCanvas]: canvasName,\n        });\n        setCurrCanvas(canvasName);\n    };\n    return (\n        <div>\n            <FullWidthGrid\n                socket={props.socket}\n                getMessage={props.getMessage}\n                sendMessage={props.sendMessage}\n                chat={props.chat}\n                userState={userState}\n                onClick={onClick}\n                canvas={currCanvas}\n            />\n        </div>\n    );\n}\n\nexport default CanvasManager;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { format } from 'd3-format';\nimport { timeFormat } from 'd3-time-format';\n\nimport { ChartCanvas, Chart } from 'react-stockcharts';\nimport { BarSeries, CandlestickSeries } from 'react-stockcharts/lib/series';\nimport { XAxis, YAxis } from 'react-stockcharts/lib/axes';\nimport {\n    CrossHairCursor,\n    MouseCoordinateX,\n    MouseCoordinateY,\n} from 'react-stockcharts/lib/coordinates';\n\nimport { discontinuousTimeScaleProvider } from 'react-stockcharts/lib/scale';\nimport { OHLCTooltip } from 'react-stockcharts/lib/tooltip';\nimport { fitWidth } from 'react-stockcharts/lib/helper';\nimport { last } from 'react-stockcharts/lib/utils';\nimport { blue, red } from '@material-ui/core/colors';\n\nconst candlesAppearance = {\n    wickStroke: '#ffffff',\n    fill: function fill(d) {\n        return d.close > d.open ? red[600] : blue[600];\n    },\n    stroke: '#000000',\n    candleStrokeWidth: 1,\n    widthRatio: 0.8,\n    opacity: 1,\n};\n\nclass StockChart extends React.Component {\n    render() {\n        const { type, data: initialData, width, ratio } = this.props;\n\n        const xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor(\n            (d) => d.date\n        );\n        const { data, xScale, xAccessor, displayXAccessor } = xScaleProvider(\n            initialData\n        );\n\n        const start = xAccessor(last(data));\n        const end = xAccessor(data[Math.max(0, data.length - 100)]);\n        const xExtents = [start, end];\n\n        return (\n            <ChartCanvas\n                height={235}\n                ratio={ratio}\n                width={width}\n                margin={{ left: 55, right: 70, top: 10, bottom: 30 }}\n                type={type}\n                seriesName=\"MSFT\"\n                data={data}\n                xScale={xScale}\n                xAccessor={xAccessor}\n                displayXAccessor={displayXAccessor}\n                xExtents={xExtents}\n            >\n                <Chart id={1} yExtents={[(d) => [d.high + 0.5, d.low - 0.5]]}>\n                    <XAxis axisAt=\"bottom\" orient=\"bottom\" />\n                    <YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n                    <MouseCoordinateY\n                        at=\"right\"\n                        orient=\"right\"\n                        displayFormat={format('.2f')}\n                    />\n                    <CandlestickSeries {...candlesAppearance} />\n                    {/* <OHLCTooltip forChart={1} origin={[-40, 0]} /> */}\n                </Chart>\n                <CrossHairCursor />\n            </ChartCanvas>\n        );\n    }\n}\n\nStockChart.propTypes = {\n    data: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired,\n    ratio: PropTypes.number.isRequired,\n    type: PropTypes.oneOf(['svg', 'hybrid']).isRequired,\n};\n\nStockChart.defaultProps = {\n    type: 'svg',\n};\nStockChart = fitWidth(StockChart);\n\nexport default StockChart;\n","import { blue, red, grey } from '@material-ui/core/colors';\nimport { Grid } from '@material-ui/core';\nimport { React, useState, useEffect } from 'react';\nimport { render } from 'react-dom';\n\n//@ won -> string (4자리 단위로 ',' 끊어주기)\n//@ isBullMarket에 따른 color 변경\n//@ TimeChecker랑 병렬로 놓게 될 것 고려\n//@ 수익률 계산후 문자열 파싱 -> ('+1.33%')\n//@ useEffect socket 통신\n\nfunction ChartTitle(props) {\n    const subtit = '이전대비';\n    const unit = 'KRW';\n    const isBullMarket = true;\n    const [textColor, setBullColor] = useState({\n        color: isBullMarket ? red[600] : blue[600],\n    });\n    const [isBullIcon, SetBullIcon] = useState('▲');\n    const [wonYield, SetYield] = useState('+' + 1.33 + '%');\n    const [beforeWon, SetWonBefore] = useState();\n    const [currentWon, SetWonCurrent] = useState(0);\n    const [upDown, SetUpDown] = useState(0);\n\n    useEffect(() => {\n        return () => {\n            const datas = props.data;\n            const length = props.data.length;\n            const before = datas[length - 2].curPrice;\n            const current = datas[length - 1].curPrice;\n            const sub = current - before;\n            const yid =\n                (sub >= 0 ? '+' : '') +\n                ((sub / current) * 100).toFixed(2) +\n                '%';\n            const icon = sub >= 0 ? '▲' : '▼';\n            const color = sub >= 0 ? red[600] : blue[600];\n            SetWonBefore(before);\n            SetWonCurrent(current);\n            SetUpDown(sub);\n            SetYield(yid);\n            SetBullIcon(icon);\n            setBullColor({ color: color });\n            // console.log({\n            //     before : beforeWon,\n            //     current : currentWon,\n            //     updown : upDown,\n            //     icon : isBullIcon,\n            //     textColor : textColor,\n            // });\n        };\n    }, [props.data]);\n\n\n    function SplitByThree(value) {\n        if (value.length <= 3) return value;\n        return (\n            SplitByThree(value.substring(0, value.length - 3)) +\n            ',' +\n            value.substring(value.length - 3, value.length)\n        );\n    }\n\n\n    function ExpBySymbol(value) {\n        let ret = '';\n        if (value.length >= 9) { // 199489230 -> 1억 9948만 9230\n            ret += ( value.substring(0, value.length - 9 + 1)  + '억 ' ) // 1억\n            value = value.substring(value.length - 9 + 1);\n        }\n        if (value.length >= 5) { // value 99489230\n            ret += ( value.substring(0, value.length - 5 + 1)  + '만 ' )  // 9948만\n            value = value.substring(value.length - 5 + 1);\n        }\n        ret += value;\n        return ret;\n    }\n\n    const parseWonToStr = (won) => {\n        if (typeof won == 'number') won = won.toString();\n        return won;\n    };\n\n    return (\n        <>\n            <div className=\"ChartTitle\" style={textColor}>\n                <span style={{ display: 'block' }}>\n                <Grid container justify='space-between'>\n                    <Grid>\n                        <strong style={{ fontSize: '40px' }}>\n                            {SplitByThree(parseWonToStr(currentWon))}\n                            \n                        </strong>\n                        <span style={{color: 'white'}} >{' ' + unit}</span>\n                    </Grid>\n                    {/* <Grid>\n                        <span style={{ color: grey[900] ,}}>\n                            {/* <ShowTime/> */}\n                        {/* </span> */}\n                    {/* </Grid> */}\n                </Grid>\n                </span>\n                <span>\n                    <p\n                        style={{\n                            fontSize: '12px',\n                            color: '#ffffff',\n                            display: 'inline-block',\n                        }}\n                    >\n                        {subtit}\n                    </p>\n                    <strong>{'   ' + wonYield + '  '}</strong>\n                    <strong style={{ display: 'inline' }}>\n                        {' ' + isBullIcon + ' ' + parseWonToStr(upDown)}\n                    </strong>\n\n                </span>\n            </div>\n        </>\n    );\n}\n\nexport default ChartTitle;\n","import { tsvParse, csvParse } from 'd3-dsv';\nimport { timeParse } from 'd3-time-format';\n\nfunction parseData(parse) {\n    return function (d) {\n        d.date = parse(d.date);\n        d.open = +d.open;\n        d.high = +d.high;\n        d.low = +d.low;\n        d.close = +d.close;\n        d.volume = +d.volume;\n\n        return d;\n    };\n}\n\nconst parseDate = timeParse('%Y-%m-%d');\n// const parseDate = timeParse(\"%Y-%m-%d-%H-%M-%S\");\n//@ data 가져오는 부분\n//@ socket을 어떻게 할당하면 좋을까.\n\nexport function getData() {\n    const promiseMSFT = fetch(\n        'https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/MSFT.tsv'\n    )\n        .then((response) => response.text())\n        .then((data) => tsvParse(data, parseData(parseDate)));\n    return promiseMSFT;\n}\n","import React, {useEffect, useState} from 'react';\n\nexport default function Timer(props) {\n    const [time, setTime] = useState(-1);\n    props.socket.on('restGameTime', (restGameTime) => {\n        setTime(restGameTime);\n    });\n    const ShowTime = ()=> {\n            var minute  = parseInt(time / 60);\n            var second = time - minute * 60;\n            minute = minute >= 10 ? String(minute) : '0'+String(minute);\n            second = second >= 10 ? String(second) : '0'+String(second);\n            if (time <= 0) {\n                minute = '00';\n                second = '00';\n            }\n            return (\n                <h2 style={{fontSize: 40}}>\n                    {minute+' : '+second}    \n                </h2>\n            );\n        }\n        return(\n            ShowTime()\n        ); \n    }\n\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { socket } from 'socket.io-client';\nimport StockChart from './StockChart';\nimport ChartTitle from './ChartTitle';\nimport { getData } from './utils';\nimport { tsvParse, csvParse } from 'd3-dsv';\nimport { timeParse } from 'd3-time-format';\nimport {CircularProgress,Grid} from '@material-ui/core';\nimport Timer from './Timer';\n\nclass ChartComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n        };\n    }\n    componentDidUpdate() {}\n    componentWillMount() {\n        if (this.props.socket === null) {\n            this.props.requestSocket('ChartComponent');\n        }\n    }\n    componentDidMount() {\n        //@ 소켓 통신 대기\n    }\n    setup = true;\n    setAPI = false;\n    addCandleData = (data) => {\n        if (data === null) {\n            console.log('하늘소....하늘소.. 응답하라....');\n            return;\n        }\n        data.date = new Date(data.date);\n        if(!this.setAPI) {\n            this.props.setAPIData(data);\n            this.setAPI = true;\n        }\n        if (this.state.data.length >= 150) this.state.data.shift();\n        this.setState({ data: [...this.state.data, data] });\n        // console.log(this.state.datas);\n        // getData(this.state.datas).then(data => {\n        // })\n    };\n    render() {\n        const dataLength = this.state.data.length;\n\n        if (this.setup) {\n            //@ candle data callback\n            if (this.props.socket == null) {\n                this.props.requestSocket('ChartComponent');\n            }\n            if (this.props.requestSocket == null) {\n                console.log('requestSocket is null');\n            } else if (this.props.socket != null) {\n                this.props.socket.emit('chartData_Req');\n                this.props.socket.on('chartData_Res', (datas) =>{\n                    console.log('게임 시작 이전의 차트 데이터(최대 100tick)가 로드되었습니다.');\n                    datas.chartData.map((data) => {\n                        this.addCandleData(data);\n                    })\n                    this.props.socket.on('chart', (data) => {\n                        this.addCandleData(data);\n                    });\n                });\n                this.setup = false;\n            }\n        }\n\n        if (this.props.socket == null || dataLength < 2) {\n            return (\n                <div\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '30vh',\n                    }}\n                >\n                    <CircularProgress />\n                </div>\n            );\n        }\n        // console.log(this.props.time);\n        return (\n            <>\n                <Grid container justify={'space-between'} style={{padding:'1vh'}}>\n                    <ChartTitle data={this.state.data} time={this.props.time} />\n                    {\n                        this.props.isStart && <Timer socket={this.props.socket}/>\n                    }\n                </Grid>\n                <StockChart type={'hybrid'} data={this.state.data} />\n            </>\n        );\n    }\n}\n\nexport default ChartComponent;\n","import { useEffect } from 'react';\nimport { Howl } from 'howler';\n\n// 배경음 재생\nfunction useSound(src, volume = 1, fadeoutTime = 0, signal) {\n    let sound = new Howl({ src });\n\n    const soundStop = () => sound.stop();\n    const soundPlay = (src) => {\n        sound = new Howl({ src });\n        sound.volume(volume);\n        sound.play();\n    };\n\n    useEffect(() => {\n        soundStop();\n        if (signal) {\n            soundPlay(src);\n            console.log('useSound Played.')\n            sound.on('play', () => {\n                const fadeouttime = fadeoutTime;\n                setTimeout(\n                    () => sound.fade(volume, 0, fadeouttime),\n                    (sound.duration() - sound.seek()) * 1000 - fadeouttime\n                );\n            });\n            return soundStop;\n        }\n    }, [signal]);\n}\n\n// 효과음 재생\nfunction playSound(src, volume = 1) {\n    let sound;\n    const soundInject = (src) => {\n        sound = new Howl({ src });\n        sound.volume(volume);\n    };\n    soundInject(src);\n    return sound;\n}\n\nvar getDuration = function (src) {\n    var howl = new Howl({ src });\n    return new Promise(function (resolve, reject) {\n        howl.on('load', function () {\n            let time = howl.duration();\n            resolve(time);\n        });\n    });\n};\n\nexport { useSound, playSound, getDuration };\n","export default __webpack_public_path__ + \"static/media/drumUp.578db9f8.wav\";","export default __webpack_public_path__ + \"static/media/drumDown.88b05de6.wav\";","export default __webpack_public_path__ + \"static/media/hatUp.06e7bdd3.wav\";","export default __webpack_public_path__ + \"static/media/hatDown.531ab761.wav\";","import { Button, Switch } from '@material-ui/core';\nimport { purple, yellow } from '@material-ui/core/colors';\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst PurpleButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(purple[500]),\n    // backgroundColor: purple[500],\n    backgroundColor: 'rgba(89, 32, 146, 0.37)',\n    '&:hover': {\n      // color: theme.palette.getContrastText(purple[500]),\n      backgroundColor: purple[700],\n    },\n  },\n}))(Button);\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: yellow[300],\n    '&$checked': {\n      color: purple[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nexport {PurpleButton, PurpleSwitch};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useSnackbar } from 'notistack';\nimport {PurpleButton, PurpleSwitch} from './PurpleComponent';\n//@ 5 params\n//? ------- props -----------------------------\n//? {\n//?     onAlert = 조건문.\n//?     severity = [error, warning, info, success]\n//?     message = \"스낵메세지\"\n//?     label = \"버튼라벨\"\n//?     class = ex \"btn btn-warning\"\n//?     onClick = ...\n//? }\n//? -------------------------------------------\n\n\n\n\nexport function SnackAlertBtn(props) {\n    const { enqueueSnackbar } = useSnackbar();\n\n    const handleClickVariant = (variant) => () => {\n        console.log('btn 수행한다.')\n        props.onClick();\n        // variant could be success, error, warning, info, or default\n        if (props.onAlert) {\n            enqueueSnackbar(props.message, {\n                variant,\n                anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                },\n                autoHideDuration: 700,\n            });\n        }\n    };\n\n    return (\n        <>\n            <PurpleButton\n                className={props.class}\n                onClick={handleClickVariant(props.severity)}\n            >\n                {props.label}\n            </PurpleButton>\n\n        </>\n    );\n}\n\n//@ 2 params\n//? ------- props -----------------------------\n//? {\n//?     severity = [error, warning, info, success]\n//?     message = \"스낵메세지\"\n//? }\n//? -------------------------------------------\nlet index = 0;\nexport function SnackAlertFunc(props) {\n    const { enqueueSnackbar } = useSnackbar();\n    // variant could be success, error, warning, info, or default\n    const callback = () => {\n        enqueueSnackbar(props.message, {\n            variant: props.severity,\n            anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'left',\n            },\n            autoHideDuration: 1500,\n            preventDuplicate: true\n        }); \n    }\n    callback();\n    return <></>;\n}","import React, { useEffect, useState,  useLayoutEffect } from 'react';\nimport {\n    IconButton,\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    makeStyles,\n    withStyles,\n} from '@material-ui/core';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { useSound, playSound } from './useSound';\nimport DrumUp from './audios/effect/drumUp.wav';\nimport DrumDown from './audios/effect/drumDown.wav';\nimport HatUp from './audios/effect/hatUp.wav';\nimport HatDown from './audios/effect/hatDown.wav';\nimport { grey, red } from '@material-ui/core/colors';\nimport { SnackAlertFunc } from './SnackAlert';\nimport { SnackbarProvider } from 'notistack';\n\nconst CssTextField = withStyles({\n    root: {\n      '& label.Mui-focused': {\n        color: '#CDD7E0',\n    },\n    '& .MuiInputLabel-root': {\n      color: '#CDD7E0',\n    },\n    '& .MuiInputBase-input': {\n      color: '#CDD7E0',\n    },\n      \n    //   '& .MuiInput-underline:after': {\n    //     borderBottomColor: 'white',\n    //   },\n    //   '& .MuiInput-underline:before': {\n    //     borderBottomColor: 'white',\n    //   },\n      '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n          borderColor: 'red',\n        },\n        '&:hover fieldset': {\n          borderColor: 'yellow',\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: 'green',\n        },\n      },\n    },\n  })(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    button: {\n        '& > *': {\n            width: '42%',\n            // textAlign: 'center',\n            margin: theme.spacing(1),\n        },\n    },\n    paper: {\n        // padding: theme.spacing(1),\n        textAlign: 'left',\n        color: '#CDD7E0',\n        backgroundColor: '#0C151C',\n    },\n\n    input: {\n        textAlign: 'left',\n        color: '#CDD7E0',\n    },\n\n    button_block: {\n        width: '1vh',\n    },\n}));\n\nfunction ArrowButton(props) {\n    const classes = useStyles();\n    const [stock, setStock] = useState(null);\n    const [tmpStock, setTmpStock] = useState(0);\n    const [diffrence, setDiffrence] = useState(0);\n\n    function PlusArrow(props) {\n        setDiffrence(diffrence + 1);\n        return setTmpStock(tmpStock + 1);\n    }\n\n    function MinusArrow(props) {\n        setDiffrence(diffrence - 1);\n        return setTmpStock(tmpStock - 1);\n    }\n\n    return (\n        <Grid\n            className={classes.button_block}\n            display=\"flex\"\n            justify=\"center\"\n            style={{ height: '100%' }}\n        >\n            <IconButton\n                aria-label=\"delete\"\n                className={classes.margin}\n                size=\"small\"\n                onClick={props.upEvent}\n            >\n                <ArrowDropUpIcon />\n            </IconButton>\n            <IconButton\n                aria-label=\"delete\"\n                className={classes.margin}\n                size=\"small\"\n                onClick={props.downEvent}\n            >\n                <ArrowDropDownIcon />\n            </IconButton>\n        </Grid>\n    );\n}\n\nlet startTime = null;\n\nexport default function TradeStock(props) {\n    const classes = useStyles();\n    const [currentBid, SetBid] = useState(0);\n    const [newBid, SetNewBid] = useState(0); //props.APIdata.curPrice\n    const [currentVolume, SetVolume] = useState(1);\n    const [newVolume, SetNewVolume] = useState(1);\n    const [unitBid, SetUnit] = useState(0); // props.APIdata.priceUnit\n    const [isBind, SetBind] = useState(false);\n    const [isFocus, SetFocus] = useState(false);\n    const [sellStatus, setSellStatus] = useState({\n        status: '',\n        val: 0,\n        vol: 0,\n    });\n    const [buyStatus, setBuyStatus] = useState({\n        status: '',\n        val: 0,\n        vol: 0,\n    });\n    const [myWallet, setWallet] = useState({\n        myCash: 0,\n        myAsset: 0,\n        myCoin: 0,\n    });\n    const [isInit, setInit] = useState(false);\n\n    if (!isBind) SetBind(true);\n    if (!isInit) setInit(true);\n    //@ 가정 => props에 socket이 전달되었어야함.\n    useLayoutEffect(() => {\n        startTime = new Date();\n        if (props.socket == null) {\n            props.requestSocket('MyAsset', props.socket);\n            setInit(true);\n        } else {\n            props.socket.on('refreshWallet', (data) => {\n                //@ buyreq\n                const currentCash = data.cash;\n                const currentAsset = data.asset;\n                const currentCoin = data.coinVol;\n                setWallet({\n                    myCash: currentCash,\n                    myAsset: currentAsset,\n                    myCoin: currentCoin,\n                });\n            });\n        }\n    }, [isInit]);\n\n    function VolumeUp(volume) {\n        // if (\n        //     volume + Math.floor((myWallet.myCash / currentBid) * 0.1) >\n        //     Math.floor(myWallet.myCash / currentBid)\n        // )\n        //     return;\n        SetNewVolume(volume + Math.floor((myWallet.myCash / currentBid) * 0.1));\n    }\n    function VolumeDown(volume) {\n        if (volume - Math.floor((myWallet.myCash / currentBid) * 0.1) <= 0) {\n            SetNewVolume(1);\n            return;\n        }\n        SetNewVolume(volume - Math.floor((myWallet.myCash / currentBid) * 0.1));\n    }\n    function BidUp() {\n        SetBid(Number(currentBid) + Number(unitBid));\n    }\n    function BidDown() {\n        SetBid(Number(currentBid) - Number(unitBid));\n    }\n\n    function RefreshBid() {\n        props.socket.once('chart', (data) => {\n            SetUnit(data.priceUnit);\n            SetBid(data.curPrice);\n            //SetVolume(1);\n        });\n    }\n\n    function Buy(bid, volume) {\n        let status = '';\n        if (bid <= 0 || volume <= 0) {\n            return {\n                status: 'invalid',\n                val: bid,\n                vol: volume,\n            };\n        }\n        if (bid * volume > myWallet.myCash) {\n            // SnackAlertFunc({\n            //     severity:\"error\",\n            //     message:\"호가 및 수량이 부적절합니다. (ex. '0') 😱\"\n            // })\n            props.socket.once('buyDone', (bbid) => {\n                SetNewBid(bbid.price);\n            });\n            return {\n                status: 'lack',\n                val: bid,\n                vol: volume,\n            };\n        }\n        status = {\n            status: 'request',\n            val: bid,\n            vol: volume,\n        };\n        props.socket.emit('buy_Req', {\n            //@ reqJson.json 형식확인\n            roomID: props.roomID,\n            socketID: props.socket.id,\n            currentBid: bid,\n            currentVolume: volume,\n        });\n        props.socket.once('buyDone', (bbid) => {\n            SetNewBid(bbid.price);\n            setBuyStatus({\n                status: 'done',\n                val: bid,\n                vol: volume,\n            });\n        });\n        SetBind(true);\n        return status;\n    }\n\n    function Sell(bid, volume) {\n        let status = '';\n        if (bid <= 0 || volume <= 0) {\n            return {\n                status: 'invalid',\n                val: bid,\n                vol: volume,\n            };\n        }\n        if (myWallet.myCoin < volume) {\n            props.socket.once('sellDone', (bbid) => {\n                SetNewBid(bbid.price);\n            });\n            return {\n                status: 'lack',\n                val: bid,\n                vol: volume,\n            };\n        }\n        status = {\n            status: 'request',\n            val: bid,\n            vol: volume,\n        };\n        props.socket.emit('sell_Req', {\n            roomID: props.roomID,\n            socketID: props.socket.id,\n            currentBid: bid,\n            currentVolume: volume,\n        });\n        //@ 중복 문제가 발생한다.\n        props.socket.once('sellDone', (sbid) => {\n            console.log(sbid);\n            SetNewBid(sbid.price);\n            setSellStatus({\n                status: 'done',\n                val: bid,\n                vol: volume,\n            });\n        });\n        SetBind(true);\n        return status;\n    }\n\n    function HandleKeyUp(e) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n        if (props.socket == null || isBind === false) {\n            props.requestSocket('TradeStock', props.socket);\n            return;\n        }\n        if (e.keyCode === 37) {\n            //_ LEFT ARROW\n            playSound(HatUp, 1).play();\n            VolumeDown(currentVolume);\n        } else if (e.keyCode === 39) {\n            //_ RIGHT ARROW\n            playSound(HatDown, 1).play();\n            VolumeUp(currentVolume);\n        } else if (e.keyCode === 38) {\n            //_ UP ARROW\n            playSound(HatUp, 1).play();\n            BidUp();\n        } else if (e.keyCode === 40) {\n            //_ DOWN ARROW\n            playSound(HatDown, 1).play();\n            BidDown();\n        } else if (e.keyCode === 65) {\n            //_ 'A'\n            playSound(DrumUp, 1).play();\n            setBuyStatus(Buy(currentBid, currentVolume));\n        } else if (e.keyCode === 83) {\n            //_ 'S'\n            playSound(DrumDown, 1).play();\n            setSellStatus(Sell(currentBid, currentVolume));\n        } else if (e.keyCode === 68) {\n            //_ 'D'\n            playSound(DrumDown, 1).play();\n            RefreshBid();\n        } else if (e.keyCode === 90) {\n            //_ 'Z'\n            playSound(DrumDown, 1).play();\n            SetSellMaxCount();\n        } else if (e.keyCode === 88) {\n            //_ 'X'\n            playSound(DrumDown, 1).play();\n            SetBuyMaxCount();\n        }\n    }\n\n    useEffect(() => {\n        RefreshBid();\n    }, []);\n\n    useEffect(() => {\n        if (isFocus === true) {\n            console.log('keydown event not working now!');\n            return;\n        }\n        document.addEventListener('keyup', HandleKeyUp);\n        // document.addEventListener('keydown', HandleKeyDown);\n        return () => {\n            document.removeEventListener('keyup', HandleKeyUp);\n            // document.removeEventListener('keydown', HandleKeyDown);\n        };\n    });\n\n    //@ socket을 통해 정보가 변했음을 알고 render이전에 호가를 갱신해야할 필요가 있다.\n    useEffect(() => {\n        const responseBid = newBid;\n        SetBid(responseBid);\n    }, [newBid]); //@ 호가가 변할때이다.\n\n    useEffect(() => {\n        const responseVolume = newVolume;\n        SetVolume(responseVolume);\n        return () => {};\n    }, [newVolume]);\n\n    useEffect(() => {\n        console.log(sellStatus, 'sellStatus');\n        if (sellStatus !== null) setSellStatus(null);\n    }, [sellStatus]);\n\n    useEffect(() => {\n        console.log(buyStatus, 'buy');\n        if (buyStatus !== null) setBuyStatus(null);\n    }, [buyStatus]);\n\n    function handleVolumeChange(e) {\n        if (e.target.id === 'outlined-required') {\n            SetVolume(e.target.value);\n            SetFocus(true);\n        }\n    }\n    function handleBidChange(e) {\n        if (e.target.id === 'outlined-required') {\n            SetBid(e.target.value);\n            SetFocus(true);\n        }\n    }\n\n    let costColor = {\n        color:\n            myWallet.myCash >= currentBid * currentVolume\n                ? grey[700]\n                : red[200],\n    };\n\n    function SetSellMaxCount() {\n        SetVolume(Math.floor(myWallet.myCash / currentBid));\n    }\n\n    function SetBuyMaxCount() {\n        SetVolume(myWallet.myCoin);\n    }\n\n    function SplitByThree(value) {\n        if (!value) return 'Something wrong.';\n        if (value.length <= 3) return value;\n        return (\n            SplitByThree(value.substring(0, value.length - 3)) +\n            ',' +\n            value.substring(value.length - 3, value.length)\n        );\n    }\n\n    const parseWonToStr = (won) => {\n        if (typeof won == 'number') won = won.toString();\n        return won;\n    };\n\n    function ExpBySymbol(value) {\n        // console.log(value);\n        if (!value) return 'Something wrong.';\n        let ret = '';\n        if (value.length >= 9) {\n            // 199489230 -> 1억 9948만 9230\n            ret += value.substring(0, value.length - 9 + 1) + '억 '; // 1억\n            value = value.substring(value.length - 9 + 1);\n        }\n        if (value.length >= 5) {\n            // value 99489230\n            ret += value.substring(0, value.length - 5 + 1) + '만 '; // 9948만\n            value = value.substring(value.length - 5 + 1);\n        }\n        ret += value;\n        return ret + '원';\n    }\n\n    let dateString = new Date();\n    dateString = '('+dateString.getMinutes() + ':' + dateString.getSeconds() + '.' + dateString.getMilliseconds() + ') '\n\n    return (\n        <>\n            <SnackbarProvider maxSnack={15}>\n                {buyStatus && buyStatus.status === 'lack' && (\n                    <SnackAlertFunc\n                        severity=\"warning\"\n                        message= {dateString + \" 보유 금액이 부족해요 😨\"}\n                    />\n                )}\n                {buyStatus && buyStatus.status === 'invalid' && (\n                    <SnackAlertFunc\n                        severity=\"error\"\n                        message= {dateString +\" 유효하지 않은 값입니다.\"}\n                    />\n                )}\n                {buyStatus && buyStatus.status === 'request' && (\n                    <SnackAlertFunc\n                        severity=\"info\"\n                        message={\n                            dateString + buyStatus.val +\n                            ' 호가에 ' +\n                            buyStatus.vol +\n                            '개 [매수] 주문했어요! 📈'\n                        }\n                    />\n                )}\n                {buyStatus && buyStatus.status === 'done' && (\n                    <SnackAlertFunc\n                        severity=\"success\"\n                        message={\n                            dateString + buyStatus.val +\n                            ',' +\n                            buyStatus.vol +\n                            ' [매수] 주문이 체결되었어요! 🎁'\n                        }\n                    />\n                )}\n                {sellStatus && sellStatus.status === 'lack' && (\n                    <SnackAlertFunc\n                        severity=\"warning\"\n                        message= {dateString + \"코인이 없는걸요? 😨\"}\n                    />\n                )}\n                {sellStatus && sellStatus.status === 'invalid' && (\n                    <SnackAlertFunc\n                        severity=\"error\"\n                        message= {dateString +\"유효하지 않은 값입니다.\"}\n                    />\n                )}\n                {sellStatus && sellStatus.status === 'request' && (\n                    <SnackAlertFunc\n                        severity=\"info\"\n                        message={\n                            dateString +sellStatus.val +\n                            ' 호가에 ' +\n                            sellStatus.vol +\n                            '개 [매도] 주문했어요! 📉'\n                        }\n                    />\n                )}\n                {sellStatus && sellStatus.status === 'done' && (\n                    <SnackAlertFunc\n                        severity=\"success\"\n                        message={\n                            dateString + sellStatus.val +\n                            ',' +\n                            sellStatus.vol +\n                            ' [매도] 주문이 체결되었어요! 💸'\n                        }\n                    />\n                )}\n            </SnackbarProvider>\n            <Grid\n                wrap=\"wrap\"\n                className={classes.paper}\n                alignItems=\"stretch\"\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                style={{ height: '100%' }}\n            >\n                <Grid container item justify=\"center\">\n                    <CssTextField\n                        className={classes.input}\n                        id=\"custom-css-standard-input\"\n                        label=\"매매 호가 ▲ ▼\"\n                        size=\"small\"\n                        // type=\"number\"\n                        style={{ width: '80%' }}\n                        value={currentBid}\n                        onChange={handleBidChange}\n                    />\n                    {/* <ArrowButton\n                        upEvent={() => BidUp(currentBid)}\n                        downEvent={() => BidDown(currentBid)}\n                    /> */}\n                </Grid>\n                <Grid container item justify=\"center\">\n                    <CssTextField\n                        className=\"count\"\n                        id=\"outlined-required\"\n                        label=\"수량 ◀ ▶\"\n                        // type=\"number\"\n                        size=\"small\"\n                        style={{ width: '80%' }}\n                        value={currentVolume}\n                        onChange={handleVolumeChange}\n                    />\n                    {/* <ArrowButton\n                        upEvent={() => VolumeUp(currentVolume)}\n                        downEvent={() => VolumeDown(currentVolume)}\n                    /> */}\n                </Grid>\n                <Grid container item justify=\"center\" alignItems=\"start\">\n                    예상소요금액 :{' '}\n                    <span style={costColor}>\n                        {ExpBySymbol(parseWonToStr(currentVolume * currentBid))}\n                    </span>\n                </Grid>\n                <Grid\n                    container\n                    item\n                    justify=\"center\"\n                    style={{ width: '80%', margin: '0 10 0 1' }}\n                >\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => {\n                            setBuyStatus(Buy(currentBid, currentVolume));\n                        }}\n                    >\n                        [A] 매수 확정\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                            setSellStatus(Sell(currentBid, currentVolume));\n                        }}\n                    > \n                        {/* <KeyboardArrowRightIcon /> */}\n                        [S] 매도 확정\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"info\"\n                        onClick={() => RefreshBid()}\n                    >\n                        {/* <KeyboardArrowRightIcon /> */}\n                        [D] 현재가 설정🔄\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"info\"\n                        onClick={() => SetSellMaxCount()}\n                    >\n                        {/* <KeyboardArrowRightIcon /> */}\n                        [Z] 최대 구매량 설정 📈\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"info\"\n                        onClick={() => SetBuyMaxCount()}\n                    >\n                        {/* <KeyboardArrowRightIcon /> */}\n                        [X] 최대 매도량 설정 📉\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n","import React, { useEffect, useState, makeStyle, useLayoutEffect } from 'react';\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    makeStyles,\n    TextareaAutosize,\n} from '@material-ui/core';\nimport { propTypes } from 'react-bootstrap/esm/Image';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    button: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '100%',\n            justify: 'center',\n        },\n    },\n    button2: {\n        '& > *': {\n            width: '45%',\n            // margin: theme.spacing(1),\n            justify: 'space-between',\n        },\n    },\n    paper: {\n        // padding: theme.spacing(1),\n        textAlign: 'left',\n        color: '#CDD7E0',\n        backgroundColor: '#0C151C',\n    },\n}));\nexport default function MyAsset(props) {\n    let testXs = 12;\n    const classes = useStyles();\n    const [myCash, setCash] = useState(0);\n    const [myAsset, setAsset] = useState(0);\n    const [myCoin, setCoin] = useState(0);\n    const [myWallet, setWallet] = useState({\n        myCash: 0,\n        myAsset: 0,\n        myCoin: 0,\n        myAvg: 0\n    });\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n    //@ 가정 => props에 socket이 전달되었어야함.\n    useLayoutEffect(() => {\n        if (props.socket == null) {\n            props.requestSocket('MyAsset', props.socket);\n            setInit(true);\n        } else {\n            props.socket.on('refreshWallet', (data) => {\n                //@ buyreq\n                // console.log(data.type + '으로 인해서 발생함.');\n                const currentCash = data.cash;\n                const currentAsset = data.asset;\n                const currentCoin = data.coinVol;\n                const currentAvg = data.avgPrice;\n                setWallet({\n                    myCash: currentCash,\n                    myAsset: currentAsset,\n                    myCoin: currentCoin,\n                    myAvg: currentAvg,\n                });\n            });\n        }\n    }, [isInit]);\n\n    function SplitByThree(value) {\n        if (!value) return 'Something wrong.';\n        if (value.length <= 3) return value;\n        return (\n            SplitByThree(value.substring(0, value.length - 3)) +\n            ',' +\n            value.substring(value.length - 3, value.length)\n        );\n    }\n\n    const parseWonToStr = (won) => {\n        if (typeof won == 'number') won = won.toString();\n        return won;\n    };\n\n    function ExpBySymbol(value) {\n        // console.log(value);\n        if (!value) return 'Something wrong.';\n        let ret = '';\n        if (value.length >= 9) {\n            // 199489230 -> 1억 9948만 9230\n            ret += value.substring(0, value.length - 9 + 1) + '억 '; // 1억\n            value = value.substring(value.length - 9 + 1);\n        }\n        if (value.length >= 5) {\n            // value 99489230\n            ret += value.substring(0, value.length - 5 + 1) + '만 '; // 9948만\n            value = value.substring(value.length - 5 + 1);\n        }\n        ret += value;\n        return ret + '원';\n    }\n\n    return (\n        <Grid wrap=\"wrap\" container direction=\"row\" style={{ height: '100%' }}>\n            <Grid\n                container\n                direction=\"row\"\n                alignItems=\"center\"\n                display=\"flex\"\n                justify=\"space-between\"\n            >\n                <Grid\n                    style={{\n                        width: '55%',\n                        height: '95%',\n                        margin: '0 4px 1vh 0',\n                    }}\n                >\n                    <Paper className={classes.paper}  style={{ height: '100%' }}>\n                        보유 현금 (KRW)\n                        {/* <h4>\n                            {SplitByThree(parseWonToStr(myWallet.myCash)) +\n                                ' 원'}\n                        </h4> */}\n                        <h5 style={{ fontWeight: 'bold' }}>\n                            {ExpBySymbol(parseWonToStr(myWallet.myCash))}\n                        </h5>\n                    </Paper>\n                </Grid>\n                <Grid\n                    style={{ width: '40%', height: '95%', margin: '0 0 1vh 0' }}\n                >\n                    <Paper className={classes.paper} style={{ height: '100%' }}>\n                        보유 코인 수 (개)<h3>{myWallet.myCoin}</h3>\n                        평균매입단가<h6>{myWallet.myAvg}</h6>\n                    </Paper>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                justify=\"center\"\n                alignItems=\"stretch\"\n                display=\"flex\"\n            >\n                <Grid  style={{ width: '100%', height: '100%' }}>\n                    <Paper className={classes.paper} style={{ height: '100%' }}>\n                        총 평가 자산 (KRW)\n                        {/* <h2 style={{ fontStyle: 'italic', fontWeight: 'bold' }}>\n                            {SplitByThree(parseWonToStr(myWallet.myAsset)) +\n                                ' 원'}\n                        </h2> */}\n                        <h2 style={{ fontWeight: 'bold' }}>\n                            {ExpBySymbol(parseWonToStr(myWallet.myAsset))}\n                        </h2>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, { useState } from 'react';\n\nfunction Message(props) {\n    const [msg, setMessage] = useState('');\n\n    const OnChange = (e) => {\n        setMessage(e.target.value);\n    };\n\n    const OnKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            props.sendMessage(e);\n        }\n    };\n\n    const color = (author) => {\n        if (author === 'SERVER') {\n            return '#BB0000';\n        } else {\n            return (\n                '#' +\n                Math.floor(\n                    parseInt(author.substring(4)) * 121203891028309128315\n                ).toString(16)\n            );\n        }\n    };\n    return <div>{msg}</div>;\n}\n\nexport default Message;\n","export default __webpack_public_path__ + \"static/media/check.0e7c2f3f.mp3\";","export default __webpack_public_path__ + \"static/media/bidSound.20d9c706.wav\";","export default __webpack_public_path__ + \"static/media/askSound.0f646c39.wav\";","import { Grid, GridList } from '@material-ui/core';\nimport { blue, red } from '@material-ui/core/colors';\nimport React, { useEffect, useState, useLayoutEffect, useRef } from 'react';\nimport { useSound, playSound } from './useSound';\nimport Check from './audios/effect/check.mp3';\nimport BidSound from './audios/effect/bidSound.wav';\nimport AskSound from './audios/effect/askSound.wav';\nexport default function StockDoneList(props) {\n    // socket ,  type (me , others), socket\n    const [doneItem, setItem] = useState(null);\n    const [doneList, setList] = useState([]);\n    const messagesEnd = React.useRef(null);\n\n    const scrollToBottom = () => {\n        messagesEnd.current.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    useEffect(() => {\n        if (props.socket == null) {\n            props.requestSocket('StockDoneList', props.socket);\n        } else {\n            if (!props.isMine) {\n                props.socket.on('buyDone_Room', (done) => {\n                    setItem(done);\n                });\n                props.socket.on('sellDone_Room', (done) => {\n                    setItem(done);\n                });\n                props.socket.on('bidDone_Room', (done) => {\n                    setItem(done);\n                });\n                props.socket.on('askDone_Room', (done) => {\n                    setItem(done);\n                });\n            }\n            else {\n                props.socket.on('buyDone', (done) => {\n                    if(done.type === \"매수 완료\") {\n                        playSound(Check, 1).play();\n                    }\n                    else if(done.type === \"매수 주문 체결\"){\n                        playSound(BidSound, 1).play();\n                    }\n                    setItem(done);\n                });\n                props.socket.on('sellDone', (done) => {\n                    if(done.type === \"매도 완료\") {\n                        playSound(Check, 1).play();\n                    }\n                    else if(done.type === \"매도 주문 체결\"){\n                        playSound(AskSound, 1).play();\n                    }\n                    setItem(done);\n                });\n                props.socket.on('bidDone', (done) => {\n                    setItem(done);\n                });\n                props.socket.on('askDone', (done) => {\n                    setItem(done);\n                });\n            }   \n        }\n    }, []);\n\n    useEffect(() => {\n        if (doneList.length >= 10) doneList.shift();\n        setList([...doneList, doneItem]);\n        scrollToBottom();\n\n    }, [doneItem]);\n\n    return (\n        <GridList\n            spacing={0}\n            wrap=\"wrap\"\n            style={{ width: '100%', height: '100%' }}\n        >\n            {\n                <Grid style={{ width: '100%' }}>\n                    <div>\n                        {doneList.map((done, idx) => {\n                            if (done === null) return;\n                            let buySellColor = {\n                                color:\n                                    done.type.substring(0, 2) === '매수'\n                                        ? done.type.substring(3, 5) === '완료' || done.type.substring(6, 8) === '체결'\n                                            ? red[500]\n                                            : red[300]\n                                        : done.type.substring(3, 5) === '완료' || done.type.substring(6, 8) === '체결'\n                                        ? blue[500]\n                                        : blue[300],\n                                fontWeight:\n                                    done.type.substring(3, 5) === '완료' || done.type.substring(6, 8) === '체결'\n                                        ? 'bold'\n                                        : 'normal',\n                            };\n                            return (\n                                <pre key = {idx}>\n                                    <span style={{ fontWeight: 'bold' }}>\n                                        {props.isMine ? '' : done.playerID}\n                                    </span>\n                                    {props.isMine ? '' : '님이 '}\n                                    <span style={{ fontWeight: 'bold' }}>\n                                        {done.price}\n                                    </span>\n                                    원에{' '}\n                                    <span style={{ fontWeight: 'bold' }}>\n                                        {done.vol}\n                                    </span>\n                                    개를{' '}\n                                    <span style={buySellColor}>\n                                        {done.type}.\n                                    </span>\n                                </pre>\n                            );\n                        })}\n                    </div>\n                    <div\n                        style={{ float: 'left', clear: 'both',  height: \"0%\"  }}\n                        ref={messagesEnd}\n                    ></div>\n                </Grid>\n            }\n        </GridList>\n    );\n}\n","import React, {\n    useState,\n    useRef,\n    useEffect,\n    makeStyle,\n    useLayoutEffect,\n} from 'react';\nimport {\n    IconButton,\n    Button,\n    Box,\n    TextField,\n    Grid,\n    Paper,\n    withStyles,\n    makeStyles,\n    GridList,\n} from '@material-ui/core';\nimport Message from './Message';\nimport StockDoneList from './StockDoneList';\n\nconst CssTextField = withStyles({\n    root: {\n      '& label.Mui-focused': {\n        color: '#CDD7E0',\n    },\n    '& .MuiInputLabel-root': {\n      color: '#CDD7E0',\n    },\n    '& .MuiInputBase-input': {\n      color: '#CDD7E0',\n    },\n      \n    //   '& .MuiInput-underline:after': {\n    //     borderBottomColor: 'white',\n    //   },\n    //   '& .MuiInput-underline:before': {\n    //     borderBottomColor: 'white',\n    //   },\n      '& .MuiOutlinedInput-root': {\n        '& .MuiInputBase-input': {\n            color: '#CDD7E0',\n        },\n        '& .MuiInputLabel-root': {\n            color: '#CDD7E0',\n            fontStyle:'italic'\n        },\n        '& fieldset': {\n          borderColor: '#2D4053',\n        },\n        '&:hover fieldset': {\n          borderColor: 'white',\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: '#635ee7',\n        },\n      },\n    },\n  })(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    button: {\n        '& > *': {\n            // margin: theme.spacing(1),\n            width: '100%',\n            // float: 'auto',\n            // height: \"50%\"\n        },\n    },\n    button2: {\n        '& > *': {\n            // width: '45%',\n            // margin: theme.spacing(1),\n            justify: 'space-between',\n        },\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function ChatRoom(props) {\n    // console.log(props.socket);\n    let testXs = 12;\n    const classes = useStyles();\n    const [message, setMessage] = useState(''); // 보낼 때의 메시지자체만 저장\n    const [resMsg, setResMsg] = useState('');\n    const [messages, setMessages] = useState(\n        // author와 쌍으로 저장된 메시지\n        [\n        ]\n    );\n    const messagesEnd =  React.useRef(null);\n    const [isChanged, setChanged]  = useState(true);\n    let textInput = useRef(null);\n    const scrollToBottom = () => {\n        messagesEnd.current.scrollIntoView();\n    }\n\n    useEffect(() => {\n        if(messages.length >= 15) messages.shift();\n        setMessages([...messages, resMsg]);\n        scrollToBottom();\n    },[resMsg])\n\n    useEffect(() => {\n        props.socket.on('update', (data) => {\n            if (data) {\n                setResMsg(data);\n            }\n        })\n    },[]);\n\n    useEffect(() => {\n        document.addEventListener('keyup', HandleKeyUp);\n        return () => {\n            document.removeEventListener('keyup', HandleKeyUp);\n        };\n    },);\n\n    useEffect(() => {\n        scrollToBottom();\n    },[messages])\n    \n    // const socket_on = (async() => {\n    //     await props.socket.on('update', (data) => {\n    //         if (data) {\n    //             console.log('update 3', messages);\n    //             addMessage(data);\n    //         }\n    //     })\n    // })()\n    //\n    const handleOnChange = (event) => {\n        setMessage(event.target.value);\n    };\n    \n    const sendMessage = () => {\n        if (textInput.current.value) {\n            // ev.preventDefault();\n            textInput.current.value = '';\n            // author: this.state.author,\n            // console.log(message);\n            props.socket.emit('message', {\n                message: message,\n                author: props.roomInfo[props.socket.id]['playerID'],\n                roomID: props.roomID,\n            });\n            setMessage('');\n        }\n    };\n    // * 서버에서 받아온 채팅메시지를 채팅창에 씀\n    \n    const addMessage = (data) => {\n        // setMessages({ messages: [...messages, data['message']] });\n        const new_messages = [...messages, data];\n        setMessages(new_messages);\n    };\n\n    let isFocus = false;\n\n    function HandleKeyUp(e) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27) return; //_ 'F12' || 'esc'\n        e.preventDefault();\n        // if (props.socket == null || isBind === false) {\n        //     props.requestSocket('TradeStock', props.socket);\n        //     return;\n        // }\n        if (e.keyCode === 13) {\n            //_ Enter\n            if (document.activeElement !== textInput.current) {\n                textInput.current.focus();\n            }\n            else if (textInput.current.value === '') {\n                textInput.current.blur();\n            }\n            else {\n                sendMessage();\n            }\n        }\n    }\n\n    function PrintMessage() {\n        return <></>;\n    }\n\n    return (\n        <>\n        <Grid container\n            direction={'column'}\n            justify={'space-evenly'}\n            >\n        {/* <Grid\n            container\n            className={classes.button}\n            // direction={'row'}\n            // justify={'space-between'}\n            wrap={'nowrap'}\n            \n        > */}\n            <GridList item style={{width: '100%', height: '30vh'}} wrap={'nowrap'} >\n                <Grid>\n                    {\n                        messages.map( (message) => {\n                            return (\n                                <>\n                                <pre style ={{ color: 'white'}}>\n                                    {message.author} : {message.message}\n                                </pre>\n                                </>\n                            );\n                        })\n                    }\n                </Grid>\n                <Grid\n                    style={{ float:\"left\", clear: \"both\", height: \"0%\" }}\n                    ref={messagesEnd}>\n                </Grid> \n            </GridList>\n        </Grid>\n        <Grid\n                    item\n                    container\n                    dirction=\"column\"\n                    style={{ padding: '2vh 0 0 0'}}\n                    spacing={2}\n                    justify={'center'}\n                    alignItems=\"center\"\n                >\n                    <Grid item style={{ margin: '10 0 0 0', width: '70%' }}>\n                        <CssTextField\n                            style={{ height: '100%' }}\n                            id=\"standard-basic\"\n                            inputRef={textInput}\n                            label=\"메세지 보내기 (최대 20자)\"\n                            onFocus={()=> {\n                                isFocus = true;\n                                props.SetInputCtrl(true)\n                            }}\n                            onBlur={()=> {\n                                isFocus = false;\n                                props.SetInputCtrl(false)\n                            }}\n                            onChange={handleOnChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            inputProps={{ 'maxlength': 20 }}\n                        />\n                    </Grid>\n                    <Grid item style={{ width: '20%' }}>\n                        <Button\n                            style={{ height: '100%' ,backgroundColor:'#635ee7' }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={()=>{sendMessage()}}\n                        >\n                            전송\n                        </Button>\n                    </Grid>\n                </Grid>\n        </>\n    );\n}\n\n// export default function AlignItems() {\n//     return (\n//       <div style={{ width: '100%' }}>\n//         <Box\n//           display=\"flex\"\n//           alignItems=\"flex-end\"\n//           p={1}\n//           m={1}\n//           bgcolor=\"background.paper\"\n//           css={{ height: 100 }}\n//         >\n//           <Box p={1} bgcolor=\"grey.300\">\n//             Item 1\n//           </Box>\n//         </Box>\n//       </div>\n//     );\n//   }\n","import React, { useState, makeStyle, useLayoutEffect } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport {\n    IconButton,\n    Button,\n    Box,\n    TextField,\n    GridList,\n    Grid,\n    Paper,\n    makeStyles,\n} from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        // padding: theme.spacing(1),\n        textAlign: 'left',\n        color: '#CDD7E0',\n        backgroundColor: '#0C151C',\n    },\n    score: {},\n}));\n\nfunction MakePlayerPaper(props) {\n    const classes = useStyles(greenTheme);\n\n    return (\n        <Paper style={{ height: '9.8vh' }} className={classes.paper}>\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid style={{ width: '20%', height: '5vh' }} className=\"score\">\n                    {props.index}\n                </Grid>\n                <Grid>\n                    <Grid container direction=\"col\" className=\"score\">\n                        <Grid>{props.player.playerID}</Grid>\n                    </Grid>\n                    <Grid container direction=\"col\" className=\"score\">\n                        <Grid>{props.player.asset}</Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default function PlayerList(props) {\n    const classes = useStyles(greenTheme);\n    const testXs = 12;\n    const [players, setPlayers] = useState([\n        {\n            socketID: 'socketID',\n            playerID: 'playerID',\n            asset: 'asset',\n        },\n    ]);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    useLayoutEffect(() => {\n        if (props.socket == null) {\n            props.requestSocket('MakePlayerPaper', props.socket);\n            setInit(true);\n        } else {\n            props.socket.on('roomRank', (playerArray) => {\n                // console.log(playerArray)\n                setPlayers(playerArray);\n            });\n        }\n    }, [isInit]);\n\n    return (\n        <>\n            {players.map((player, index) => {\n                if (player.socketID === props.socket.id) {\n                    return (\n                        <div>\n                            <Paper\n                                className={classes.paper}\n                                style={{\n                                    height: '90%',\n                                    border: 'solid',\n                                    borderColor: '#2D4053',\n                                    margin: '0 0 10px 0',\n                                    // boxShadow: '12px 12px 2px 1px #ffffff',\n                                }}\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    alignItems=\"center\"\n                                >\n                                    <Grid\n                                        style={{ width: '20%', height: '100%' }}\n                                        className=\"score\"\n                                    >\n                                        {index + 1}\n                                        {'위.'}\n                                    </Grid>\n                                    <Grid\n                                        style={{ width: '80%', height: '100%' }}\n                                        container\n                                        direction=\"column\"\n                                        className=\"score\"\n                                    >\n                                        <Grid alignItems=\"right\">{player.playerID}</Grid>\n                                        <Grid alignItems=\"right\">{player.asset}</Grid>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </div>\n                    );\n                }\n            })}\n\n            <Grid\n                wrap=\"wrap\"\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"stretch\"\n                spacing={2}\n            >\n                {players.map((player, index) => {\n                    const myColor =\n                        player.socketID === props.socket.id\n                            ? '#2D4053'\n                            : '#0C151C';\n                    const myFont =\n                        player.socketID === props.socket.id ? 'bold' : 'normal';\n                    return (\n                        <Grid item xs={testXs}>\n                            <Paper\n                                style={{\n                                    height: '9.8vh',\n                                    backgroundColor: myColor,\n                                    fontWeight: myFont,\n                                }}\n                                className={classes.paper}\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    alignItems=\"center\"\n                                >\n                                    <Grid\n                                        style={{ width: '20%', height: '100%' }}\n                                        className=\"score\"\n                                    >\n                                        {index + 1}\n                                        {'위.'}\n                                    </Grid>\n                                    <Grid\n                                        style={{ width: '80%', height: '100%' }}\n                                        container\n                                        direction=\"column\"\n                                        className=\"score\"\n                                    >\n                                        <Grid alignItems=\"right\">\n                                            {player.playerID}\n                                        </Grid>\n                                        <Grid alignItems=\"right\">\n                                            {player.asset}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    history,\n    Redirect,\n    useHistory,\n} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        // alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    table: {\n        minWidth: 650,\n    },\n}));\n\nexport default function GameOverModal(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const rows = props.leaderBoard;\n    const [done, setDone] = useState(false);\n\n    const history = useHistory();\n    const BackToLobby = () => {\n        let path = '/';\n        history.push(path);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    console.log(props.leaderBoard);\n    return (\n        <div>\n            <Modal\n                disablePortal\n                disableEnforceFocus\n                disableAutoFocus\n                disableBackdropClick // backdrop을 클릭해도 modal을 지우지 않는 옵션\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n            >\n                {/* <Fade in={open}> */}\n                    <div container className={classes.paper}>\n                        <h2\n                            id=\"transition-modal-title\"\n                            style={{ textAlign: 'center' }}\n                        >\n                            🌠Game Finished🌠\n                        </h2>\n                        <Grid\n                            container\n                            direction={'column'}\n                            alignItems={'center'}\n                        >\n                            <TableContainer component={Paper}>\n                                <Table\n                                    className={classes.table}\n                                    aria-label=\"simple table\"\n                                >\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Rank</TableCell>\n                                            <TableCell align=\"right\">\n                                                Player ID\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                asset\n                                            </TableCell>\n                                            {/* <TableCell align=\"right\">Fat&nbsp;(g)</TableCell> */}\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {rows.map((row, idx) => (\n                                            <TableRow key={row.playerID}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {idx + 1}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.playerID}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.asset}\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <Button onClick={BackToLobby}>\n                                {' '}\n                                Back to Lobby{' '}\n                            </Button>\n                        </Grid>\n                    </div>\n                {/* </Fade> */}\n            </Modal>\n        </div>\n    );\n}\n","import React, {useEffect}from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Modal, Typography} from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    width: '50vh',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    alignItems: 'center',\n    justifyContent: 'center',\n\n  },\n  typo: {\n    fontSize: '12rem',\n    textAlign: 'center',\n  }\n}));\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n  const { in: open, children, onEnter, onExited, ...other } = props;\n  const style = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: open ? 1 : 0 },\n    onStart: () => {\n      if (open && onEnter) {\n        onEnter();\n      }\n    },\n    onRest: () => {\n      if (!open && onExited) {\n        onExited();\n      }\n    },\n  });\n\n  return (\n    <animated.div ref={ref} style={style} {...other}>\n      {children}\n    </animated.div>\n  );\n});\n\nFade.propTypes = {\n  children: PropTypes.element,\n  in: PropTypes.bool.isRequired,\n  onEnter: PropTypes.func,\n  onExited: PropTypes.func,\n};\n\nexport default function ThreeSecTimer(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [time, setTime] = React.useState(3);\nconst changeTime = () => {\n  if(time > 1) {\n    setTimeout(function(){\n        setTime(time - 1);\n      }, 1000);\n    }\n  };\n    \n  const signal = props.open;\n\n  useEffect(()=>{\n    changeTime();\n  },[time]);\n  \n  useEffect(()=>{\n    setOpen(signal); \n  },[signal]);\n\n\n  return (\n      <Modal\n        disablePortal\n        disableEnforceFocus\n        disableAutoFocus\n        disableBackdropClick\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={open}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n      >\n        {/* <Fade in={open}> */}\n          <div className={classes.paper}>\n            <h4 className={classes.typo} id=\"spring-modal-title\" style={{justifyContent: 'center'}}> {time} </h4>\n          </div>\n        {/* </Fade> */}\n      </Modal>\n\n  );\n}\n","export default __webpack_public_path__ + \"static/media/King_Conga.78ec5c8e.mp3\";","export default __webpack_public_path__ + \"static/media/Mausoleum_Mash.691b5af4.mp3\";","export default __webpack_public_path__ + \"static/media/Deja_Vu.b7bee3db.mp3\";","export default __webpack_public_path__ + \"static/media/Tetris99.af303290.mp3\";","import React, { useState, useEffect, useLayoutEffect } from 'react';\nimport { render } from 'react-dom';\nimport MuiThemeProvider from '@material-ui/styles/ThemeProvider';\nimport { Tabs, Tab, Button, Grid } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { blue, red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 100,\n        minHeight: 100,\n        fontSize: 8,\n    },\n});\n\nfunction createData(sell, price, buy) {\n    return { sell, price, buy };\n}\n\n\nexport default function BidTab(props) {\n    const [isInit, setInit] = useState(false);\n    const [currentBids, SetBid] = useState([\n        {\n            buy: '',\n            price: '',\n            sell: '',\n        },\n    ]);\n    if (!isInit) setInit(true);\n\n    useLayoutEffect(() => {\n        if (props.socket == null) {\n            props.requestSocket('BidTab', props.socket);\n            setInit(true);\n        } else {\n            props.socket.on('refreshBid', (bidObject) => {\n                SetBid(bidObject);\n            });\n        }\n    }, [isInit]);\n\n    const classes = useStyles();\n\n\n    return (\n        <MuiThemeProvider>\n            <Grid\n                style={{ height: '110%' }}\n                container\n                wrap=\"wrap\"\n                // alignItems=\"stretch\"\n                justify=\"center\"\n                direction=\"column\"\n                spacing={2}\n                display=\"center\"\n            >\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        size=\"small\"\n                        aria-label=\"a dense table\"\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">거래량</TableCell>\n                                <TableCell align=\"center\">거래가</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {currentBids.map((row, index) => {\n                                return (\n                                    <TableRow\n                                        style={{\n                                            backgroundColor:\n                                                index <= 4\n                                                    ? blue[100]\n                                                    : red[100],\n                                            opacity: 0.9,\n                                        }}\n                                        key={row.price}\n                                    >\n                                        <TableCell>{row.buy}</TableCell>\n                                        <TableCell>\n                                            {row.price}\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n        </MuiThemeProvider>\n    );\n}\n\n// render(<App />, document.getElementById(\"root\"));\n","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        spacing: 2,\n        textAlign: 'center',\n        backgroundColor: '#2D4053',\n        color: 'white',\n        margin: '0 0 10px 0'\n    },\n    score: {},\n}));\n\nexport default function BidEntity(props) {\n    const classes = useStyles(greenTheme);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    // useLayoutEffect(() => {\n    //     if (props.socket == null) {\n    //         props.requestSocket('makeTableEntity', props.socket);\n    //         setInit(true);\n    //     }\n    // }, [isInit]);\n\n    const bidCancel = () => {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n            reqPrice: props.price,\n            reqVol: props.vol,\n        };\n\n        props.socket.emit('cancelBid_Req', reqJson);\n    };\n    return (\n        <Grid\n            wrap=\"wrap\"\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <Paper\n                // style={{ height: '4vh', width: '100%' }}\n                className={classes.paper}\n                onClick={bidCancel}\n            >\n                <Grid container direction=\"row\" justifyItems=\"center\" alignItems=\"center\">\n                    <Grid\n                        style={{ width: '20%', height: '4vh' }}\n                        className=\"price\"\n                    >\n                        <span style={{ fontStyle: 'italic' }}>\n                            [{props.index}]\n                        </span>\n                    </Grid>\n                    <Grid\n                        style={{ width: '40%', height: '4vh' }}\n                        className=\"price\"\n                    >\n                        {props.price}\n                    </Grid>\n                    <Grid\n                        style={{ width: '40%', height: '4vh' }}\n                        className=\"vol\"\n                    >\n                        {props.vol}\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n}\n","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport {\n    IconButton,\n    Button,\n    Box,\n    TextField,\n    Grid,\n    GridList,\n    Paper,\n    makeStyles,\n} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport BidEntity from './BidEntity';\n\n// const dummyTable = [\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n// ];\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.primary,\n    },\n    score: {},\n    table :{\n        color: '#2D4053',\n        spacing: 1,\n\n    }\n}));\n\n// const bidCancel = (props, price, vol) => {\n\n// function MakeTableEntity(props) {\n//     const classes = useStyles(greenTheme);\n\n//     return (\n//         <Paper style={{ height: '9.8vh' }} className={classes.paper}>\n//             <Grid container direction=\"row\" alignItems=\"center\">\n//                 <Grid style={{ width: '50%', height: '5vh' }} className=\"price\">\n//                     {props.price}\n//                 </Grid>\n//                 <Grid style={{ width: '50%', height: '5vh' }} className=\"vol\">\n//                     {props.vol}\n//                 </Grid>\n//             </Grid>\n//         </Paper>\n//     );\n// }\n\nexport default function BidTable(props) {\n    const classes = useStyles(greenTheme);\n    const testXs = 12;\n    const [BidTable, setTable] = useState([]);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    useEffect(() => {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n        };\n        props.socket.emit('bidTable_Req', reqJson);\n\n        if (props.socket == null) {\n            props.requestSocket('makeTableEntity', props.socket);\n            setInit(true);\n        } else {\n            props.socket.on('bidTable_Res', (bidTable) => {\n                setTable(bidTable);\n            });\n        }\n    }, [isInit]);\n\n    function CancelBid(num, table) {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n            reqPrice: table[num]['price'],\n            reqVol: table[num]['vol'],\n        };\n        props.socket.emit('cancelBid_Req', reqJson);\n    }\n\n    function HandleKeyUp(e, BidTable) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n\n        if (e.keyCode === 49 && BidTable.length >= 1) {\n            //_ 1\n\n            CancelBid(0, BidTable);\n        } else if (e.keyCode === 50 && BidTable.length >= 2) {\n            //_ 2\n            CancelBid(1, BidTable);\n        } else if (e.keyCode === 51 && BidTable.length >= 3) {\n            //_ 3\n            CancelBid(2, BidTable);\n        } else if (e.keyCode === 52 && BidTable.length >= 4) {\n            //_ 4\n            CancelBid(3, BidTable);\n        } else if (e.keyCode === 53 && BidTable.length >= 5) {\n            //_ 5\n            CancelBid(4, BidTable);\n        } else if (e.keyCode === 54 && BidTable.length >= 6) {\n            //_ 6\n            CancelBid(5, BidTable);\n        } else if (e.keyCode === 55 && BidTable.length >= 7) {\n            //_ 7\n            CancelBid(6, BidTable);\n        } else if (e.keyCode === 56 && BidTable.length >= 8) {\n            //_ 8\n            CancelBid(7, BidTable);\n        }\n    }\n\n    useEffect(() => {\n        const CancelBidByKey = (e) => {\n            HandleKeyUp(e, BidTable);\n        };\n        document.addEventListener('keyup', CancelBidByKey);\n        return () => {\n            document.removeEventListener('keyup', CancelBidByKey);\n        };\n    });\n\n    return (\n        <Grid\n            wrap=\"wrap\"\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <TableContainer>\n                <Table\n                    className={classes.table}\n                    size=\"small\"\n                    aria-label=\"a dense table\"\n                >\n                    <TableHead>\n                        <TableRow>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ color: 'white', fontWeight: 'bold' }}>\n                                    취소 번호 [1]~[8]\n                                </span>\n                            </TableCell>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{  color: 'white', fontWeight: 'bold' }}>\n                                    매수 가격\n                                </span>\n                            </TableCell>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{  color: 'white', fontWeight: 'bold' }}>\n                                    매수 수량\n                                </span>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                </Table>\n            </TableContainer>\n\n            <GridList wrap=\"wrap\" style={{ width: '100%', height: '30vh' }}>\n                <Grid style={{ width: '99%' }}>\n                    {BidTable.map((bidElem, index, BidTable) => {\n                        return (\n                            <Grid style={{ margin: '5px' }} item xs={testXs}>\n                                <BidEntity\n                                    price={bidElem.price}\n                                    vol={bidElem.vol}\n                                    index={index + 1}\n                                    socket={props.socket}\n                                    requestSocket={props.requestSocket}\n                                    roomID={props.roomID}\n                                />\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </GridList>\n        </Grid>\n    );\n}\n","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.primary,\n    },\n    score: {},\n}));\n\nexport default function AskEntity(props) {\n    const classes = useStyles(greenTheme);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    // useLayoutEffect(() => {\n    //     if (props.socket == null) {\n    //         props.requestSocket('makeTableEntity', props.socket);\n    //         setInit(true);\n    //     }\n    // }, [isInit]);\n\n    const askCancel = () => {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n            reqPrice: props.price,\n            reqVol: props.vol,\n        };\n\n        props.socket.emit('cancelAsk_Req', reqJson);\n    };\n    return (\n        <Grid\n            wrap=\"wrap\"\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <Paper\n                style={{ height: '4vh' }}\n                className={classes.paper}\n                onClick={askCancel}\n            >\n                <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid\n                        style={{ width: '20%', height: '4vh' }}\n                        className=\"price\"\n                    >\n                        <span style={{ fontStyle: 'italic' }}>\n                            [{props.index}]\n                        </span>\n                    </Grid>\n                    <Grid\n                        style={{ width: '40%', height: '4vh' }}\n                        className=\"price\"\n                    >\n                        {props.price}\n                    </Grid>\n                    <Grid\n                        style={{ width: '40%', height: '4vh' }}\n                        className=\"vol\"\n                    >\n                        {props.vol}\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n}\n","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport {\n    IconButton,\n    Button,\n    Box,\n    TextField,\n    Grid,\n    GridList,\n    Paper,\n    makeStyles,\n} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport AskEntity from './AskEntity';\n\n// const dummyTable = [\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n// ];\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.primary,\n    },\n    score: {},\n}));\n\n// function MakeTableEntity(props) {\n//     const classes = useStyles(greenTheme);\n\n//     return (\n//         <Paper style={{ height: '9.8vh' }} className={classes.paper}>\n//             <Grid container direction=\"row\" alignItems=\"center\">\n//                 <Grid style={{ width: '50%', height: '5vh' }} className=\"price\">\n//                     {props.price}\n//                 </Grid>\n//                 <Grid style={{ width: '50%', height: '5vh' }} className=\"vol\">\n//                     {props.vol}\n//                 </Grid>\n//             </Grid>\n//         </Paper>\n//     );\n// }\n\nexport default function AskTable(props) {\n    const classes = useStyles(greenTheme);\n    const testXs = 12;\n    const [AskTable, setTable] = useState([]);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    useLayoutEffect(() => {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n        };\n        props.socket.emit('askTable_Req', reqJson);\n\n        if (props.socket == null) {\n            props.requestSocket('makeTableEntity', props.socket);\n            setInit(true);\n        } else {\n            props.socket.on('askTable_Res', (askTable) => {\n                setTable(askTable);\n            });\n        }\n    }, [isInit]);\n\n    function CancelAsk(num, table) {\n        console.log('num:', num);\n        console.log('table:', table);\n        console.log('hi');\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n            reqPrice: table[num]['price'],\n            reqVol: table[num]['vol'],\n        };\n        props.socket.emit('cancelAsk_Req', reqJson);\n    }\n\n    function HandleKeyUp(e, AskTable) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n\n        if (e.keyCode === 49 && AskTable.length >= 1) {\n            //_ 1\n            CancelAsk(0, AskTable);\n        } else if (e.keyCode === 50 && AskTable.length >= 2) {\n            //_ 2\n            CancelAsk(1, AskTable);\n        } else if (e.keyCode === 51 && AskTable.length >= 3) {\n            //_ 3\n            CancelAsk(2, AskTable);\n        } else if (e.keyCode === 52 && AskTable.length >= 4) {\n            //_ 4\n            CancelAsk(3, AskTable);\n        } else if (e.keyCode === 53 && AskTable.length >= 5) {\n            //_ 5\n            CancelAsk(4, AskTable);\n        } else if (e.keyCode === 54 && AskTable.length >= 6) {\n            //_ 6\n            CancelAsk(5, AskTable);\n        } else if (e.keyCode === 55 && AskTable.length >= 7) {\n            //_ 7\n            CancelAsk(6, AskTable);\n        } else if (e.keyCode === 56 && AskTable.length >= 8) {\n            //_ 8\n            CancelAsk(7, AskTable);\n        }\n    }\n\n    useEffect(() => {\n        const CancelAskByKey = (e) => {\n            HandleKeyUp(e, AskTable);\n        };\n        document.addEventListener('keyup', CancelAskByKey);\n        return () => {\n            document.removeEventListener('keyup', CancelAskByKey);\n        };\n    });\n\n    return (\n        <Grid\n            wrap=\"wrap\"\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n            spacing={2}\n        >\n            <TableContainer>\n                <Table\n                    className={classes.table}\n                    size=\"small\"\n                    aria-label=\"a dense table\"\n                >\n                    <TableHead>\n                        <TableRow>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ fontWeight: 'bold' }}>\n                                    취소 번호 [1]~[8]\n                                </span>\n                            </TableCell>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ fontWeight: 'bold' }}>\n                                    매도 가격\n                                </span>\n                            </TableCell>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ fontWeight: 'bold' }}>\n                                    매도 수량\n                                </span>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                </Table>\n            </TableContainer>\n            <GridList wrap=\"wrap\" style={{ width: '100%', height: '30vh' }}>\n                <Grid style={{ width: '99%' }}>\n                    {AskTable.map((askElem, index, AskTable) => {\n                        return (\n                            <Grid style={{ margin: '5px' }} item xs={testXs}>\n                                <AskEntity\n                                    price={askElem.price}\n                                    vol={askElem.vol}\n                                    index={index + 1}\n                                    socket={props.socket}\n                                    requestSocket={props.requestSocket}\n                                    roomID={props.roomID}\n                                />\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </GridList>\n        </Grid>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport BidTab from './BidTab';\nimport BidTable from './BidTable';\nimport AskTable from './AskTable';\n\n\nconst StyledTabs = withStyles({\n    indicator: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      backgroundColor: \"transparent\",\n      \"& > span\": {\n        maxWidth: 40,\n        width: \"100%\",\n        backgroundColor: \"#635ee7\"\n      }\n    }\n  })((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n  \n  const StyledTab = withStyles((theme) => ({\n    root: {\n      textTransform: \"none\",\n      color: \"#fff\",\n      fontWeight: theme.typography.fontWeightRegular,\n      fontSize: theme.typography.pxToRem(15),\n      marginRight: theme.spacing(1),\n      \"&:focus\": {\n        opacity: 1\n      }\n    }\n  }))((props) => <Tab disableRipple {...props} />);\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n      },\n      padding: {\n        padding: theme.spacing(3)\n      },\n      demo1: {\n        backgroundColor: theme.palette.background.paper\n      },\n      demo2: {\n        backgroundColor: \"#0C151C\"\n      }\n    }));\n\nexport default function TabControl(props) {\n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n    const [isBind, SetBind] = useState(false);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    function HandleKeyUp(e) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n        // if (props.socket == null || isBind === false) {\n        //     props.requestSocket('TradeStock', props.socket);\n        //     return;\n        // }\n        if (e.keyCode === 81) {\n            //_ Q\n            setValue(0);\n        } else if (e.keyCode === 87) {\n            //_ W\n            setValue(1);\n        } else if (e.keyCode === 69) {\n            //_ E\n            setValue(2);\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('keyup', HandleKeyUp);\n        // document.addEventListener('keydown', HandleKeyDown);\n        return () => {\n            document.removeEventListener('keyup', HandleKeyUp);\n            // document.removeEventListener('keydown', HandleKeyDown);\n        };\n    });\n\n    return (\n        <div className={classes.demo2}>\n            <StyledTabs value={value} onChange={handleChange}>\n                <StyledTab label=\"[Q] 매수 주문 목록\" {...a11yProps(0)} />\n                <StyledTab label=\"[W] 매도 주문 목록\" {...a11yProps(1)} />\n                <StyledTab label=\"[E] 호가 목록\" {...a11yProps(2)} />\n            </StyledTabs>\n            <TabPanel value={value} index={0}>\n                <BidTable\n                    roomID={props.roomID}\n                    socket={props.socket}\n                    requestSocket={props.requestSocket}\n                />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <AskTable\n                    roomID={props.roomID}\n                    socket={props.socket}\n                    requestSocket={props.requestSocket}\n                />\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <BidTab\n                    socket={props.socket}\n                    requestSocket={props.requestSocket}\n                />\n            </TabPanel>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Button, Grid, Paper, makeStyles } from '@material-ui/core';\nimport { sizing } from '@material-ui/system';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TradeStock from './TradeStock';\nimport MyAsset from './MyAsset';\nimport ChatRoom from './ChatRoom';\nimport PlayerList from './PlayerList';\nimport ChartComponent from './ChartComponent';\nimport ChartTitle from './ChartTitle';\nimport GameOverModal from './GameOverModal';\nimport StockDoneList from './StockDoneList';\nimport { red } from '@material-ui/core/colors';\nimport ThreeSecTimer from './ThreeSecTimer';\nimport GameMusicStart from './MusicStart';\nimport { Howl,Howler } from 'howler';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    useLocation,\n    useHistory,\n} from 'react-router-dom';\nimport TabPanel from './TabControl';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign: 'center',\n        padding: theme.spacing(1),\n        textAlign: 'left',\n        color: '#CDD7E0',\n        backgroundColor: '#0C151C',\n    },\n}));\n\nexport default function LayoutGrid(props) {\n    const classes = useStyles();\n    let testXs = 12;\n    let leftSm = 2;\n    let middleSm = 7;\n    let rightSm = 3;\n\n    const location = useLocation();\n    const gameTime = location.state.gameTime;\n    const [timerTime, setTimerTime] = useState(gameTime);\n    const [inputCtrl, setInputCtrl] = useState(false);\n\n    const SetInputCtrl =  (isChat) => {\n        setInputCtrl(isChat);\n    };\n\n    useEffect(() => {\n        console.log('layoutGrid rendered....!');\n    });\n\n    const [over, setOver] = useState(false);\n\n    useEffect(() => {\n        props.socket.on('gameOver', (leaderBoard) => {\n            console.log('gameover');\n            if (leaderBoard) {\n                setOver(leaderBoard);\n            }\n        });\n    }, []);\n\n    const [APIdata, setAPI] = useState(null);\n    let setCurrentAPIData = (data) => {\n        setAPI(data);\n    };\n    let getCurrentAPIData = () => {\n        return APIdata;\n    };\n\n    return (\n        <>\n            {over && <GameOverModal leaderBoard={over} />}\n            <Container maxWidth=\"xl\">\n                <Typography component=\"div\" style={{ padding: '0 0 0 0' }}>\n                    <Grid\n                        style={{ height: '100vh' }}\n                        wrap=\"wrap\"\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"stretch\"\n                        spacing={1}\n                    >\n                        <Grid className=\"playerListGrid\" item xs={leftSm}>\n                            <PlayerList\n                                socket={props.socket}\n                                requestSocket={props.requestSocket}\n                                roomID={props.roomID}\n                                roomInfo={props.roomInfo}\n                            />\n                        </Grid>\n                        <Grid\n                            className=\"stockTradeGrid\"\n                            container\n                            item\n                            xs={middleSm}\n                            wrap=\"wrap\"\n                            alignContents=\"stretch\"\n                        >\n                            <Grid\n                                style={{ height: '90vh' }}\n                                item\n                                wrap=\"wrap\"\n                                alignContents=\"stretch\"\n                                alignItems=\"stretch\"\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                spacing={1}\n                            >\n                                <Grid\n                                    style={{ height: '45vh' }}\n                                    item\n                                    alignItems=\"stretch\"\n                                >\n                                    <Paper\n                                        style={{ height: '44vh' }}\n                                        className={classes.paper}\n                                    >\n                                        <ChartComponent\n                                            socket={props.socket}\n                                            requestSocket={props.requestSocket}\n                                            setAPIData={setCurrentAPIData}\n                                            APIdata={APIdata}\n                                            display=\"flex\"\n                                            justify-content=\"center\"\n                                            align-items=\"center\"\n                                            // time={props.time}\n                                            isStart={props.isStart}\n                                            time={timerTime}\n                                        />\n                                    </Paper>\n                                </Grid>\n                                <Grid style={{ height: '18vh' }}>\n                                    <Grid\n                                        style={{ height: '100%' }}\n                                        wrap=\"wrap\"\n                                        alignItems=\"stretch\"\n                                        container\n                                        direction=\"row\"\n                                        justify=\"space-around\"\n                                    >\n                                        <Grid\n                                            style={{\n                                                width: '45%',\n                                                height: '100%',\n                                            }}\n                                            item\n                                        >\n                                            <Paper\n                                                style={{ height: '17vh' }}\n                                                className={classes.paper}\n                                            >\n                                                <StockDoneList\n                                                    socket={props.socket}\n                                                    requestSocket={\n                                                        props.requestSocket\n                                                    }\n                                                    isMine={true}\n                                                />\n                                            </Paper>\n                                        </Grid>\n                                        <Grid\n                                            style={{\n                                                width: '55%',\n                                                height: '100%',\n                                            }}\n                                            item\n                                        >\n                                            <Paper\n                                                style={{ height: '17vh' }}\n                                                className={classes.paper}\n                                            >\n                                                <StockDoneList\n                                                    socket={props.socket}\n                                                    requestSocket={\n                                                        props.requestSocket\n                                                    }\n                                                    isMine={false}\n                                                />\n                                            </Paper>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid style={{ height: '27vh' }} item>\n                                    <Grid\n                                        style={{ height: '100%' }}\n                                        wrap=\"wrap\"\n                                        alignItems=\"stretch\"\n                                        container\n                                        direction=\"row\"\n                                        justify=\"space-around\"\n                                    >\n                                        <Grid\n                                            style={{\n                                                width: '45%',\n                                                height: '22vh',\n                                            }}\n                                            item\n                                        >\n                                            {/* <Paper style={{ height: \"100%\" }} > */}\n                                            <MyAsset\n                                                roomID={props.roomID}\n                                                socket={props.socket}\n                                                requestSocket={\n                                                    props.requestSocket\n                                                }\n                                            />\n                                            {/* </Paper> */}\n                                        </Grid>\n                                        <Grid\n                                            style={{\n                                                width: '50%',\n                                                height: '22vh',\n                                                margin: '0 0 0 0',\n                                            }}\n                                            item\n                                        >\n                                            <Paper\n                                                style={{ height: '100%' }}\n                                                className={classes.paper}\n                                            >\n                                                <TradeStock\n                                                    inputCtrl={inputCtrl}\n                                                    roomID={props.roomID}\n                                                    APIdata={APIdata}\n                                                    socket={props.socket}\n                                                    requestSocket={\n                                                        props.requestSocket\n                                                    }\n                                                />\n                                            </Paper>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid className=\"bidChatGrid\" item xs={rightSm}>\n                            <Grid\n                                style={{ height: '90vh' }}\n                                wrap=\"wrap\"\n                                alignItems=\"stretch\"\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                spacing={2}\n                            >\n                                <Grid\n                                    style={{ height: '45vh' }}\n                                    item\n                                    alignItems=\"stretch\"\n                                >\n                                    <Paper\n                                        style={{ height: '44vh' }}\n                                        className={classes.paper}\n                                    >\n                                        <TabPanel\n                                            inputCtrl={inputCtrl}\n                                            roomID={props.roomID}\n                                            socket={props.socket}\n                                            requestSocket={props.requestSocket}\n                                        />\n                                    </Paper>\n                                </Grid>\n                                <Grid style={{ height: '45vh' }} item>\n                                    <Paper\n                                        className={classes.paper}\n                                    >\n                                        <ChatRoom\n                                            SetInputCtrl={SetInputCtrl}\n                                            roomInfo={props.roomInfo}\n                                            roomID={props.roomID}\n                                            socket={props.socket}\n                                            chat={props.chat}\n                                        />\n                                    </Paper>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Typography>\n            </Container>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    useLocation,\n    useHistory,\n} from 'react-router-dom';\nimport King_Conga from './audios/music/King_Conga.mp3';\nimport Mausoleum_Mash from './audios/music/Mausoleum_Mash.mp3';\nimport Deja_Vu from './audios/music/Deja_Vu.mp3';\nimport { useSound, playSound, getDuration } from './useSound';\nimport ThreeSecTimer from './ThreeSecTimer';\nimport LayoutGrid from './LayoutGrid';\n\nlet bgm_audio = new Audio('');\n\nexport default function LayoutGridEffect(props) {\n    const location = useLocation();\n    const gameTime = location.state.gameTime;\n    const [timerTime, setTimerTime] = useState(gameTime);\n    const [isStart, setIsStart] = useState(false);\n    const musicList = {\n        Deja_Vu: Deja_Vu,\n        King_Conga: King_Conga,\n        Mausoleum_Mash: Mausoleum_Mash,\n    };\n    const SpecificMusic = musicList[props.roomInfo['music'].split('.')[0]];\n    const [threeSecTimerOpen, setThreeSecTimerOpen] = useState(true);\n\n    useEffect(() => {\n        props.socket.once('startGame_Real', (data) => {\n            setThreeSecTimerOpen(false);\n            setTimerTime(gameTime);\n            setIsStart(true);\n            bgm_audio = new Audio(SpecificMusic);\n            if (bgm_audio.paused) bgm_audio.play();\n        });\n    }, [timerTime]);\n    return (\n        <>\n            <ThreeSecTimer\n                SpecificMusic={SpecificMusic}\n                open={threeSecTimerOpen}\n            />\n            <LayoutGrid\n                socket={props.socket}\n                requestSocket={props.requestSocket}\n                roomID={props.roomID}\n                roomInfo={props.roomInfo}\n                gameTime={props.time}\n                isStart={isStart}\n                />\n                \n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/Logo.e2afc65a.png\";","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport Logo from './images/Logo.png';\nconst useStyles = makeStyles((theme) => ({\n    input: {\n        color: \"white\",\n    },\n}));\nfunction SetPlayerName(props) {\n    // const socket = io();\n    // const [name, setName] = React.useState('');\n    const classes = useStyles();\n    const params = window.location\n        .toString()\n        .substring(window.location.toString().indexOf('?'));\n    const searchParams = new URLSearchParams(params);\n    const [tmp, setTemp] = React.useState('');\n\n    // const nameInput = useRef();\n    // useEffect(()=>{\n    //     nameInput.current.focus();\n    // });\n\n    const onKeyPress = (e) => {\n        if (e.key == 'Enter') {\n            handleOnSave(e);\n        }\n    };\n\n    const handleChange = (event) => {\n        setTemp(event.target.value);\n    };\n\n    const handleOnSave = (event) => {\n        if (tmp != '') {\n            event.preventDefault();\n            props.onSave(tmp);\n        }\n    };\n    let buttonMsg = 'Create Private Room';\n    if (searchParams.has('id')) {\n        // 초대링크 받아서 온 사람\n        buttonMsg = 'Join Room';\n    } else {\n        buttonMsg = 'Create Private Room';\n    }\n    return (\n        <>\n            <Grid\n                container\n                justify={'center'}\n                alignItems={'center'}\n                // spacing={2}\n                direction=\"column\"\n                style={{ width: '100%', height: '100vh' }}\n            >\n                <Grid>\n                    <img src={Logo} />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        id=\"form-control text-center fw-bold bg-transparent\"\n                        label=\"인게임 닉네임 (8자 제한)\"\n                        inputRef={props.textInput}\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        InputProps={{\n                            className: classes.input,\n                        }}\n                        InputLabelProps={{\n                            style: { color: '#fff' },\n                        }}\n                        // ref={nameInput}\n                        autoFocus\n                        onKeyPress={onKeyPress}\n                        inputProps={{ 'maxLength': 8 }}\n                    />\n                </Grid>\n\n                <Grid item>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleOnSave}\n                    >\n                        {buttonMsg}\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\nexport default withRouter(SetPlayerName);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Card,Grid} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {   \n    width: '30vh',\n    height: '15vh',\n    margin: '0 2vh 2vh 2vh',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function LobbyPlayerCard(props) {\n  const classes = useStyles();\n  const isLeader =  props.roomLeader ? '방장' : ''\n  return (\n    <Card className={classes.root} >\n      <CardContent>\n      <Grid container direction={'column'} justify={'center'} alignItems={'flex-end'}>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {isLeader}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {props.playerID}\n        </Typography>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Tetris99 from './audios/music/Tetris99.mp3';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\nexport default function MusicLeader(props) {\n    const classes = useStyles();\n    let tmp_music = props.roomInfo ? props.roomInfo['music'] : 'King_Conga.mp3';\n    let tmp_time = props.roomInfo ? props.roomInfo['gameTime'] : '02 : 25';\n    const [music, setMusic] = React.useState(tmp_music);\n    const [strTime, strSetTime] = React.useState(tmp_time);\n\n    if (typeof strTime === 'number') {\n        let minute = parseInt(strTime / 60);\n        let second = strTime % 60;\n        minute = minute >= 10 ? String(minute) : '0' + String(minute);\n        second = second >= 10 ? String(second) : '0' + String(second);\n\n        strSetTime(minute + ' : ' + second);\n    }\n\n    function MusicInput() {\n        const handleChange = (event) => {\n            const musicName = event.target.value;\n            setMusic(musicName);\n            props.socket.emit('settingsUpdate_Req', {\n                roomID: props.roomID,\n                musicName: musicName,\n            });\n        };\n        /*  music select 현재 하드코딩 상태에서 동적으로 구현할 함수..!\n      function MusicMenu() {\n          return (\n              <>\n              {props.musicList.map((music) => {\n                      console.log(music);\n                  return (\n                  (<MenuItem\n                      value={music}>{music}\n                  </MenuItem>)\n                  );\n              })}\n              </>\n          );\n      }\n*/\n        return (\n            <div>\n                <FormControl className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        Select Music\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={music}\n                        onChange={handleChange}\n                    >\n                        <MenuItem value={'King_Conga.mp3'}>\n                            King_Conga.mp3\n                        </MenuItem>\n                        <MenuItem value={'Mausoleum_Mash.mp3'}>\n                            Mausoleum_Mash.mp3\n                        </MenuItem>\n                        <MenuItem value={'Deja_Vu.mp3'}>Deja_Vu.mp3</MenuItem>\n                        {/* <>\n              {props.musicList.map((music) => {\n                  return (\n                  (<MenuItem\n                      value={music}>{music}\n                  </MenuItem>)\n                  );\n              })}\n              </> */}\n                    </Select>\n                </FormControl>\n            </div>\n        );\n    }\n    function ShowMusic() {\n        useEffect(() => {\n            props.socket.once('settingsUpdate_Res', (data) => {\n                const musicName = data.musicName;\n                const musicTime = data.musicTime;\n\n                if (props.roomInfo) {\n                    var minute = parseInt(musicTime / 60);\n                    var second = musicTime % 60;\n                    minute =\n                        minute >= 10 ? String(minute) : '0' + String(minute);\n                    second =\n                        second >= 10 ? String(second) : '0' + String(second);\n\n                    var tmp_roomInfo = props.roomInfo;\n                    tmp_roomInfo['music'] = musicName;\n                    strSetTime(minute + ' : ' + second);\n                }\n            });\n        }, []);\n        // }\n        return (\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <div>\n                    <TextField\n                        id=\"standard-read-only-input\"\n                        label=\"Play Time\"\n                        defaultValue={strTime}\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                    />\n                </div>\n            </form>\n        );\n    }\n    // const StartGameReq = () => {\n    //     if (music === '') {\n    //         return alert('음악을 선택해주세요');\n    //     } else {\n    //         props.socket.emit('startGame_Req', props.roomID);\n    //     }\n    // };\n\n\n    // let isSetUp = false;\n    // useEffect(() => {\n    //     if (!isSetUp) {\n    //         props.socket.off('startGame_Res').once('startGame_Res', (gameTime) => {\n    //             props.MusicPause();\n    //             props.history.push({\n    //                 pathname: '/game',\n    //                 state: { gameTime: gameTime },\n    //             });\n    //         });\n    //         isSetUp = true;\n    //     }\n    // }, []);\n    return (\n        <>\n            <Grid>\n                <MusicInput />\n            </Grid>\n            <Grid>\n                <ShowMusic />\n            </Grid>\n            {/* <Button variant=\"contained\" color=\"primary\" onClick={StartGameReq}>\n                {' '}\n                StartGame{' '}\n            </Button> */}\n\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/KeyMap.f99426d9.png\";","import React, { useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Tetris99 from './audios/music/Tetris99.mp3';\nimport KeyMapTemp from './images/KeyMap.png';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\nexport default function MusicMember(props) {\n    const classes = useStyles();\n\n    var tmp_music = props.roomInfo['music'];\n    var tmp_time = props.roomInfo['gameTime'];\n\n    var minute = parseInt(tmp_time / 60);\n    var second = tmp_time % 60;\n    minute = minute >= 10 ? String(minute) : '0' + String(minute);\n    second = second >= 10 ? String(second) : '0' + String(second);\n    const [music, setMusic] = React.useState(tmp_music);\n    const [strTime, strSetTime] = React.useState(minute + ' : ' + second);\n    function MusicInput() {\n        return (\n            <div>\n                <FormControl className={classes.formControl} disabled>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        {music}\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                    >\n                        <MenuItem value={'King_Conga.mp3'}>\n                            King_Conga.mp3\n                        </MenuItem>\n                        <MenuItem value={'Mausoleum_Mash.mp3'}>\n                            Mausoleum_Mash.mp3\n                        </MenuItem>\n                        <MenuItem value={'Deja_Vu.mp3'}>Deja_Vu.mp3</MenuItem>\n                    </Select>\n                </FormControl>\n            </div>\n        );\n    }\n\n    function ShowMusic() {\n        useEffect(() => {\n            props.socket.once('settingsUpdate_Res', (data) => {\n                const musicName = data.musicName;\n                const musicTime = data.musicTime;\n                setMusic(musicName);\n\n                var minute = parseInt(musicTime / 60);\n                var second = musicTime % 60;\n                var tmp_roomInfo = props.roomInfo;\n                tmp_roomInfo['music'] = musicName;\n                strSetTime(String(minute) + ' : ' + String(second));\n            });\n        }, []);\n        return (\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <div>\n                    <TextField\n                        label={strTime}\n                        defaultValue={strTime}\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                    />\n                </div>\n            </form>\n        );\n    }\n    // let isSetUp = false;\n    // useEffect(() => {\n    //     if (!isSetUp) {\n    //       props.socket.off('startGame_Res').once('startGame_Res', (gameTime) => {\n    //           props.MusicPause();\n    //             props.history.push({\n    //                 pathname: '/game',\n    //                 state: { gameTime: gameTime },\n    //             });\n    //         });\n    //         isSetUp = true;\n    //     }\n    // }, []);\n    return (\n        <>\n            <Grid>\n                <MusicInput />\n            </Grid>\n            <Grid>\n                <ShowMusic />\n            </Grid>\n            {/* <Button variant=\"contained\" color=\"primary\" disabled>\n                {' '}\n                StartGame{' '}\n            </Button> */}\n        </>\n    );\n}\n","import React, {Component} from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {Grid, Paper, Popover,FormGroup,FormControlLabel } from '@material-ui/core';\nimport { Typography,Switch } from '@material-ui/core';\nimport KeyMapTemp from './images/KeyMap.png';\nimport MusicLeader from './MusicLeader';\nimport MusicMember from './MusicMember';\nimport {PurpleButton, PurpleSwitch} from './PurpleComponent';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n  },\n  padding: {\n    padding: theme.spacing(1),\n  },\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\n\n  function LobbyMusicOnOff(props) {\n    const [state, setState] = React.useState(true);\n  \n    const handleChange = (event) => {\n      setState({ ...state, [event.target.name]: event.target.checked });\n      if (state) {\n        setState(false);\n        setState(false);\n        props.MusicPause();\n      }\n      else {\n          setState(true);\n          props.MusicStart();\n      }\n    };\n  \n    return (\n      <FormGroup>\n        <FormControlLabel\n          control={<PurpleSwitch checked={state} onChange={handleChange} name=\"checkedA\" />}\n        //   label=\"Custom color\"\n        />\n      </FormGroup>\n    );\n  }\n\n\nexport default function LobbyTabs(props) {\n  const classes = useStyles();\n  // const keyMapButton = () => {<Button id=\"key_map\" size=\"large\">KEY MAP</Button>}\n  const [keymap, setKeymap] = React.useState(null);\n  // const [keymap, setKeymap] = React.useState(props.roomLeader ? null : 'key_map');\n  const [selectMusic, setSelectMusic] = React.useState(null);\n  \n  const handleKeymap = (event) => {\n    console.log(event.currentTarget);\n    setKeymap(event.currentTarget);\n    console.log(keymap);\n  };\n\n  const handleSelectMusic = (event) => {\n    console.log(event.currentTarget);\n    setSelectMusic(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setKeymap(null);\n    setSelectMusic(null);\n  };\n\n  const openKey = Boolean(keymap);\n  const openSelect = Boolean(selectMusic);\n\n  const CheckLeader = () => {\n    console.log(props.socket);\n    if (props.roomLeader === props.socketId) {\n        return (\n            <>\n                <MusicLeader\n                    musicList={props.musicList}\n                    roomID={props.roomID}\n                    roomInfo={props.roomInfo}\n                    socket={props.socket}\n                    SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                    history={props.history}\n                    MusicPause= {props.MusicPause}\n                />\n            </>\n        );\n    } else {\n        return (\n            <>\n                <MusicMember\n                    musicList={props.musicList}\n                    roomID={props.roomID}\n                    roomInfo={props.roomInfo}\n                    socket={props.socket}\n                    SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                    history={props.history}\n                    MusicPause= {props.MusicPause}\n                />\n            </>\n        );\n    }\n};\nconsole.log(keymap, openKey);\nconsole.log(selectMusic, openSelect);\n  return (   \n    <>\n        <Grid container justify={'space-around'}  alignItems={'center'}>\n            <PurpleButton id=\"key_map\" onClick={handleKeymap} size=\"large\">\n            KEY MAP\n            </PurpleButton>\n            <PurpleButton id=\"select_music\" onClick={handleSelectMusic} size=\"large\">\n            SELECT MUSIC\n            </PurpleButton>\n            <LobbyMusicOnOff MusicPause={props.MusicPause} MusicStart={props.MusicStart}/>\n        </Grid>\n        <Popover\n            open={openKey}\n            anchorEl={keymap}\n            onClose={handleClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            >\n        <Typography className={classes.typography}>\n            <img src={KeyMapTemp} style={{ width: '50vw' }} />  \n        </Typography>\n        </Popover>\n        <Popover\n            open={openSelect}\n            anchorEl={selectMusic}\n            onClose={handleClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            >\n        <Typography className={classes.typography}>\n            <CheckLeader/>\n        </Typography>\n        </Popover>\n    </>\n);\n}\n\n\n\n\n\n\n\n","import React, { useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Tetris99 from './audios/music/Tetris99.mp3';\nimport {PurpleButton} from './PurpleComponent';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function StartGame(props) {\n    const classes = useStyles();\n\n    const StartGameReq = () => {\n        // if (music === '') {\n        //     return alert('음악을 선택해주세요');\n        // } else {\n            props.socket.emit('startGame_Req', props.roomID);\n        // }\n    };\n\n\n    let isSetUp = false;\n    useEffect(() => {\n        if (!isSetUp) {\n            props.socket.off('startGame_Res').once('startGame_Res', (gameTime) => {\n                props.MusicPause();\n                props.history.push({\n                    pathname: '/game',\n                    state: { gameTime: gameTime },\n                });\n            });\n            isSetUp = true;\n        }\n    }, []);\n\n    return(\n        <PurpleButton \n        variant=\"contained\" \n        color=\"primary\" \n        onClick={StartGameReq}\n        style={{width:\"80%\", height:\"20vh\",fontSize:\"8vh\"}}\n        text\n        >\n        {' '}\n        Start Game{' '}\n        </PurpleButton>\n    );\n}","import React, { useEffect, useLayoutEffect, useState } from 'react';\nimport {\n    Button,\n    Grid,\n    Paper,\n    GridList,\n    makeStyles,\n    Typography,\n    Container,\n    TextField,\n} from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport Zoom from '@material-ui/core/Zoom';\nimport { withRouter } from 'react-router-dom';\nimport LobbyPlayerCard from './LobbyPlayerCard';\nimport MusicLeader from './MusicLeader';\nimport MusicMember from './MusicMember';\nimport {SnackAlertBtn} from './SnackAlert';\nimport {SnackbarProvider} from 'notistack';\n// 용기\n// 용기\n\nimport ChatRoom from './ChatRoom';\nimport { ChatFeed, Message } from 'react-chat-ui';\nimport LobbyTabs from './LobbyTabs'\nimport './Lobby.css';\nimport StartGame from './StartGame';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // flexGrow: 1,\n        // padding: theme.spacing(3),\n    },\n    paper: {\n        textAlign: 'center',\n        padding: theme.spacing(1),\n        textAlign: 'left',\n        color: '#CDD7E0',\n        backgroundColor: '#0C151C',\n    },\n    button: {\n        // color: theme.palette.getContrastText\n        backgroundColor: '#0069d9',\n    },\n    input: {\n        color: \"white\",\n    },\n}));\n\nfunction Lobby(props) {\n    let leftSm = 3;\n    let middleSm = 5;\n    let rightSm = 3;\n    const [roomLeader, setRoomLeader] = useState(props.socket.id); //props.roomInfo['roomLeader']\n    const [socketId, setSocketId] = useState(props.socket.id);\n\n    const classes = useStyles();\n    const PutPlayer = (props) => {\n        return (\n            <Grid container justify=\"space-between\" style={{margin:'2vh 0 0 0'}}>\n                <LobbyPlayerCard\n                    playerID={props.player.playerID}\n                    roomLeader={roomLeader}\n                />\n            </Grid>\n        );\n    };\n\n    const [inputCtrl, setInputCtrl] = useState(false);\n    const SetInputCtrl =  (isChat) => {\n        setInputCtrl(isChat);\n    };\n\n    function CopyURL() {\n        var copyText = document.getElementById('gameLink');\n        copyText.select();\n        document.execCommand('Copy');\n        // alert('복사되었습니다.');\n    }\n    let [roomInfo, setRoomInfo] = useState('');\n    let soc = props.socket;\n    useLayoutEffect(() => {\n        if (soc) {\n            soc.on('joinRoom_Res', (room) => {\n                // 사람이 들어올 때마다 roomInfo 갱신\n                setRoomInfo(room.roomInfo);\n                props.SetRoomIdAndInfo(room);\n                setRoomLeader(room.roomInfo['roomLeader']);\n                setSocketId(soc.id);\n            });\n        }\n    }, []);\n\n    useLayoutEffect(() => {\n        if (soc) {\n            soc.on('disconnect', (roomInfo) => {\n                // 사람이 나갈 때마다 roomInfo 갱신\n                setRoomInfo(roomInfo);\n                props.SetRoomIdAndInfo({\n                    roomID: props.roomID,\n                    roomInfo: roomInfo,\n                });\n                setRoomLeader(roomInfo['roomLeader']);\n                setSocketId(soc.id);\n            });\n        }\n    });\n\n    const Card = () => {\n        if (roomInfo != '') {\n            return <PutNewCard roomInfo={roomInfo} socket={props.socket} />;\n        }\n        return <PutPlayer player={props.player} />;\n    };\n\n    function getPlayersList(roomInfo) {\n        // let keyList = Object.keys(roomInfo).filter((key) => key.length === 20);\n        let playerList = [];\n        for (const [key, value] of Object.entries(roomInfo)) {\n            if (key.length === 20) {\n                playerList[key] = value;\n            }\n        }\n        return playerList;\n    }\n\n    function PutNewCard(props) {\n        if (props.roomInfo != '') {\n            let PlayerList = getPlayersList(props.roomInfo);\n\n            let tmparr = [];\n            for (let key in PlayerList) {\n                tmparr.push(PlayerList[key]);\n            }\n            return (\n                <div>\n                    {tmparr.map((player) => {\n                        return <PutPlayer player={player} />;\n                    })}\n                </div>\n            );\n        }\n    }\n    return (\n \n        // <><Container maxWidth=\"xl\">\n        // <Typography component=\"div\" >\n            <Grid\n                style={{ height: '100vh', }}\n                // wrap=\"wrap\"\n                container\n                // direction=\"row\"\n                justify=\"center\"\n                // spacing={1}\n            >\n                <Grid className=\"playerListGrid\" item xs={leftSm}>\n                        <Grid >{Card()}</Grid>\n                </Grid>\n                <Grid\n                    className=\"stockTradeGrid\"\n                    container\n                    item\n                    direction={'column'}\n                    alignItems={'center'}\n                    justify={'space-around'}\n                    xs={middleSm}\n                    // alignContents=\"stretch\"\n                >\n                    <Grid style={{height:'25vh'}}>\n\n                    </Grid>\n                    <StartGame\n                        roomID={props.roomID}\n                        socket={props.socket}\n                        history={props.history}\n                        MusicPause= {props.MusicPause}\n\n                    />\n                </Grid>\n                <Grid className=\"bidChatGrid\" item xs={rightSm} \n                        alignItems=\"stretch\"\n                        container\n                        direction=\"column\"\n                        justify=\"space-between\"\n                        style={{margin:'2vh 2vw 14vh 2vw'}}>\n                            <LobbyTabs\n                                roomLeader={roomLeader}\n                                socketId={socketId}\n                                musicList={props.musicList}\n                                roomID={props.roomID}\n                                roomInfo={props.roomInfo}\n                                time={props.time}\n                                socket={props.socket}\n                                SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                                history={props.history}\n                                MusicPause= {props.MusicPause}\n                                MusicStart={props.MusicStart}\n                            />\n                            <Grid container direction ={'column'} justify={'flex-end'}>\n                                <Grid style={{margin:'0 0 10px 0'}} container justify={'space-between'} >\n                                    <TextField\n                                        type=\"text\"\n                                        id=\"gameLink\"\n                                        className=\"form-control text-center fw-bold bg-transparent\"\n                                        value={`${window.location.protocol}//${window.location.host}/?id=${props.roomID}`}\n                                        InputProps={{\n                                            className: classes.input,\n                                        }}\n                                        // color=\"white\"\n                                        // colorScheme=\"white\"\n                                        style={{ width: '80%',}}\n                                        readOnly\n                                    />\n                                    <SnackbarProvider maxSnack={5}>\n                                        <SnackAlertBtn\n                                            class=\"btn btn-warning\"\n                                            severity=\"success\"\n                                            message=\"링크가 복사됐어요! 😚\"\n                                            // label=\"게임 방 URL copy\"\n                                            label=\"LINK\"\n                                            onAlert= {true}\n                                            type=\"button\"\n                                            onClick={CopyURL}\n                                            id=\"copy\"\n                                        />\n                                    </SnackbarProvider>\n                                </Grid>\n                                <Paper\n                                    style={{ height: '40vh' }}\n                                    className={classes.paper}\n                                    \n                                >\n                                    <ChatRoom\n                                        SetInputCtrl={SetInputCtrl}\n                                        roomInfo={props.roomInfo}\n                                        roomID={props.roomID}\n                                        socket={props.socket}\n                                        chat={props.chat}\n                                    />\n                                </Paper>\n                            </Grid>\n                    </Grid>\n            </Grid>\n        // </Typography>\n    // </Container>\n        // </>\n\n    );\n}\n\nexport default withRouter(Lobby);\n","export default __webpack_public_path__ + \"static/media/LobbyImage3.b2800294.gif\";","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport SetPlayerName from './setPlayerName';\nimport Lobby from './Lobby';\n// import { useSound } from './useSound';\nimport Tetris99 from './audios/music/Tetris99.mp3';\nimport backgroundImg from './videos/LobbyImage3.gif';\n\nexport default function EnterRoom(props, { history }) {\n\n\n    const [name, setName] = React.useState('');\n    const [player, setPlayer] = React.useState('');\n    const [roomID, setRoomID] = React.useState(props.roomID);\n    const [bgm_audio] = useState(new Audio(Tetris99));\n    const [playing, setPlaying] = useState(true);\n\n    const MusicPause = () => {\n        setPlaying(false);\n    }\n    const MusicStart = () => {\n        setPlaying(true);\n    }\n    useEffect(() => {\n        playing ? bgm_audio.play() : bgm_audio.pause();\n      },\n    //  ?  [playing] 이 조건이 없으면 렌더가 불필요하게 많이 된다.\n    // ? 그런데 있으면 렌더가 한 번 모자라서 음악이 안나옴\n    );\n\n    let textInput = useRef(null);\n    let musicList = [];\n    const handleOnSave = (textInput) => {\n        setName(textInput);\n        sendName(textInput);\n    };\n    if (props.socket == null) {\n        props.requestSocket('createPrivateRoom');\n    }\n\n    const sendName = (name) => {\n        // ev.preventDefault();\n        // console.log(props.socket);\n        const params = window.location\n            .toString()\n            .substring(window.location.toString().indexOf('?'));\n        const searchParams = new URLSearchParams(params);\n        if (searchParams.has('id')) {\n            // 초대링크 받아서 온 사람\n            props.socket.emit('joinRoom_Req', {\n                playerID: name,\n                roomID: searchParams.get('id'),\n            });\n            setRoomID(searchParams.get('id'));\n            setPlayer(name);\n        } else {\n            // 방장\n            props.socket.emit('createPrivateRoom_Req', { playerID: name });\n            props.socket.on('createPrivateRoom_Res', (data, useSound) => {\n                props.SetRoomIdAndInfo(data);\n                setPlayer(data.roomInfo[props.socket.id]);\n                setRoomID(data.roomID);\n                musicList = data.musicList;\n            });\n        }\n    };\n\n    const isName = name === '';\n    return (\n        <div style={{backgroundImage: `url(${backgroundImg})`,  backgroundSize: 'cover'}} > \n            {isName && (\n                <SetPlayerName\n                    onSave={handleOnSave}\n                    name={name}\n                    setName={setName}\n                    history={history}\n                />\n            )}\n            {!isName && (\n                <Lobby\n                    name={name}\n                    socket={props.socket}\n                    history={history}\n                    roomID={roomID}\n                    player={player}\n                    SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                    roomInfo={props.roomInfo}\n                    musicList={musicList}\n                    MusicPause= {MusicPause}\n                    MusicStart={MusicStart}\n                />\n            )}\n        </div>\n    );\n}\n","import React, { Component, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch,Redirect } from 'react-router-dom';\nimport LayoutGridEffect from './LayoutGridEffect';\nimport EnterRoom from './EnterRoom';\nimport Lobby from './Lobby';\n\nexport default function Routes(props) {\n    const [time, setTime] = React.useState(0);\n    const isValid = () => {\n        if (props.socket)\n            return true;\n        return false;\n    }\n\n    return (\n        <>\n            <Router>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={() => {\n                            return (\n                                <>\n                            <EnterRoom\n                                socket={props.socket}\n                                requestSocket={props.requestSocket}\n                                SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                                time ={time}\n                                setTime={setTime}\n                                roomID={props.roomID}\n                                roomInfo={props.roomInfo}\n                            />\n                            </>)\n                        }}\n                    />\n                    {/* <Route  // ? 어떻게 /lobby 라우트에 필요한 인자 넘길지 고민중..\n                        path=\"/lobby\"\n                        render={() => {\n                            return(\n                            isValid() ? \n                            <Lobby\n                                socket={props.socket}\n                                requestSocket={props.requestSocket}\n                                roomID={props.roomID}\n                                roomInfo={props.roomInfo}\n                                gameTime={time}\n                            /> : <Redirect to=\"/\" />)}}\n                        roomID={props.roomID}\n                        roomInfo={props.roomInfo}\n                    /> */}\n                    <Route\n                        path=\"/game\"\n                        render={() => {\n                            return(\n                            isValid() ? \n                            <LayoutGridEffect\n                                socket={props.socket}\n                                requestSocket={props.requestSocket}\n                                roomID={props.roomID}\n                                roomInfo={props.roomInfo}\n                                gameTime={time}\n                            /> : <Redirect to=\"/\" />)}}\n                        roomID={props.roomID}\n                        roomInfo={props.roomInfo}\n                    />\n                </Switch>\n            </Router>\n        </>\n    );\n}\n","import React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport CanvasManager from './CanvasManager';\nimport { Button } from '@material-ui/core';\nimport ChartComponent from './ChartComponent';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LayoutGrid from './LayoutGrid';\nimport Routes from './Routes';\n\nclass GameManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hash: '',\n            author: '',\n            message: '',\n            messages: [],\n            socketId: null,\n\n            roomID: null,\n            roomInfo: null,\n        };\n        // this.socket = io('15.165.129.19:5000'); //_ http://15.165.129.19:5000/\n        this.socket = io('localhost:5000');\n        this.socket.on('connect', () => {\n            console.log('connnected', this.socket);\n            this.socket.emit('join');\n        });\n    }\n    componentWillUnmount() {\n    }\n    componentDidMount() {\n        let socketCopy = null;\n        let user_cnt = 0;\n        // this.socket = io(\"15.165.129.19:5000\"); //_ http://15.165.129.19:5000/\n        // this.socket.on(\"connect\", async () => {\n        //   console.log(\"connnected\", this.socket);\n        //   this.socket.emit(\"join\");\n        // });\n        this.socket.on('curCoin', (data) => {\n            let today = new Date();\n            let minutes = today.getMinutes(); // 분\n            let seconds = today.getSeconds(); // 초\n            let milliseconds = today.getMilliseconds(); // 밀리초\n        });\n        this.socket.on('socket', (socket) => {\n            setSocket();\n        });\n        this.socket.on('update', function (data) {\n            addMessage(data);\n        });\n        this.socket.on('get_chart_data', function (data) {\n        });\n        const setSocket = (socket) => {\n            this.setState({ socketId: socket });\n        };\n        const addSocket = () => {\n            if (this.socketId === null) {\n                this.setState({ socketId: this.socket });\n            }\n        };\n        const addMessage = (data) => {\n            this.setState({ messages: [...this.state.messages, data] });\n        };\n        this.socket.on('update_users', function (data, user_count) {\n            user_cnt = user_count;\n            // 화면에 있는 6명에게 이 소켓이 부여되도록 하고싶어요 선생님 ㅠㅠ\n            // 이 자리에 들어가면 될거같아요\n            // room, start 버튼 도입하면 해결될 문제 !\n        });\n    }\n\n    TestEmitButton = (props) => {\n        return (\n            <>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.sendComment}\n                >\n                    소켓 연결 확인용 버튼(action::'test')\n                </Button>\n            </>\n        );\n    };\n\n    sendComment = (ev) => {\n        ev.preventDefault();\n        this.socket.emit('test', {\n            comment:\n                '연결 테스트 메시지 입니다. 클라이언트와 서버가 연결되어 있습니다.',\n        });\n    };\n    RequestSocket = (component, socket) => {\n        if (socket != null) return;\n        console.log(\n            component + ' 에서 socket을 요청했습니다. 랜더링을 다시 합니다.'\n        );\n        this.setState({ socketId: this.socket });\n    };\n\n    SetRoomIdAndInfo = (data) => {\n        this.setState({\n            roomID: data.roomID,\n            roomInfo: data.roomInfo,\n        });\n        console.log(\n            'SetRoomIdAndInfo. 랜더링을 다시 합니다.'\n        );\n    };\n\n    \n\n    render() {\n        const socket = this.state.socketId;\n        const roomID = this.state.roomID;\n        const roomInfo = this.state.roomInfo;\n        return (\n            <>\n                <Routes\n                    socket={socket}\n                    requestSocket={this.RequestSocket}\n                    SetRoomIdAndInfo={this.SetRoomIdAndInfo}\n                    roomID={roomID}\n                    roomInfo={roomInfo}\n                />\n            </>\n        );\n    }\n}\nexport default GameManager;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport GameManager from './GameManager';\nimport Test from './Test';\nimport GameOverModal from './GameOverModal';\n\nReactDOM.render(\n    <div className='GameManager'>\n        <GameManager/>\n        {/* <GameOverModal/> */}\n        {/* <Test/> */}\n    </div>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}