{"version":3,"sources":["reportWebVitals.js","logo.svg","StockMarket.js","PlayerManager.js","Chat.js","InfoManager.js","FundManager.js","App.js","CanvasManager.js","StockChart.js","ChartTitle.js","utils.js","audios/effect/5secLeft.wav","Timer.js","ChartComponent.js","PurpleComponent.js","SnackAlert.js","audios/effect/Buy100.wav","audios/effect/Check.mp3","audios/effect/BuyConfirm.wav","audios/effect/BuyDone.wav","audios/effect/CurPrice.wav","audios/effect/PriceDown.wav","audios/effect/Enter.wav","audios/effect/Error.mp3","audios/effect/ExEnroll.wav","audios/effect/Nope.mp3","audios/effect/PriceUp.wav","audios/effect/Sell100.wav","audios/effect/Result.mp3","audios/effect/Sell0.wav","audios/effect/Sell50.wav","audios/effect/VolDown.wav","audios/effect/SellConfirm.wav","audios/effect/SellDone.wav","audios/effect/VolUp.wav","TradeStock.js","MyAsset.js","useSound.js","StockDoneList.js","ChatRoom.js","PlayerList.js","GameOverModal.js","ThreeSecTimer.js","audios/music/King_Conga.mp3","audios/music/Mausoleum_Mash.mp3","audios/music/Deja_Vu.mp3","audios/music/Tetris99.mp3","audios/effect/GameEnd.mp3","BidTab.js","BidEntity.js","audios/effect/Cancel1.wav","audios/effect/Cancel2.wav","audios/effect/Cancel3.wav","audios/effect/Cancel4.wav","audios/effect/Cancel5.wav","audios/effect/Cancel6.wav","audios/effect/Cancel7.wav","audios/effect/Cancel8.wav","BidTable.js","AskEntity.js","AskTable.js","audios/effect/ExTable.wav","audios/effect/BidTable.wav","audios/effect/AskTable.wav","TabControl.js","LayoutGrid.js","audios/music/Dont_Stop_Me_Now.mp3","audios/music/GONG.mp3","audios/music/Without_Me.mp3","audios/music/질풍가도.mp3","audios/music/Beethven_Virus.mp3","audios/music/The_Wight_to_Remain.mp3","audios/effect/AskDone.wav","audios/effect/BidDone.wav","audios/effect/Buy0.wav","audios/effect/Buy50.wav","LayoutGridEffect.js","images/Logo.png","setPlayerName.js","LobbyPlayerCard.js","MusicLeader.js","images/KeyMap.png","MusicMember.js","LobbyTabs.js","StartGame.js","videos/LobbyImage3.gif","Lobby.js","EnterRoom.js","Routes.js","GameManager.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","makeStyles","theme","root","width","backgroundColor","palette","background","paper","float","card","display","orange","inline","bullet","margin","modal_name","fontSize","marginBottom","modal_price","modal_arrow","maxWidth","Textfield","pos","modal","alignItems","justifyContent","height","border","boxShadow","shadows","padding","spacing","StockMarket","PlayerProfileCard","id","className","Avatar","image","NameHolder","name","this","props","Info","point","money","gain","InfoButton","buy","info","React","Component","variant","src","alt","style","Chat","title","InfoManager","withStyles","head","common","black","color","white","body","TableCell","action","hover","TableRow","table","typography","button","CanvasManager","candlesAppearance","wickStroke","fill","d","close","open","red","blue","stroke","candleStrokeWidth","widthRatio","opacity","StockChart","handleResize","setState","window","innerHeight","innerWidth","state","dataHigh","dataLow","addEventListener","removeEventListener","type","initialData","data","ratio","discontinuousTimeScaleProvider","inputDateAccessor","date","xScaleProvider","xScale","xAccessor","displayXAccessor","xExtents","last","Math","max","length","high","low","left","right","top","bottom","seriesName","yExtents","axisAt","orient","ticks","at","displayFormat","format","price","strokeWidth","textFill","arrowWidth","strokeDasharray","defaultProps","fitWidth","ChartTitle","useState","textColor","setBullColor","isBullIcon","SetBullIcon","wonYield","SetYield","SetWonBefore","currentWon","SetWonCurrent","upDown","SetUpDown","useEffect","datas","before","curPrice","current","sub","yid","toFixed","icon","parseWonToStr","won","toString","Grid","container","justify","SplitByThree","value","substring","timeParse","Timer","Audio","fiveSecLeft","timerSound","time","setTime","socket","on","restGameTime","play","minute","parseInt","second","String","fontWeight","ShowTime","ChartComponent","setup","setAPI","addCandleData","Date","setAPIData","shift","console","log","requestSocket","dataLength","emit","chartData","map","CircularProgress","isStart","PurpleButton","getContrastText","purple","Button","PurpleSwitch","switchBase","yellow","checked","track","Switch","SnackAlertBtn","enqueueSnackbar","useSnackbar","class","onClick","severity","onAlert","message","anchorOrigin","vertical","horizontal","autoHideDuration","label","SnackAlertFunc","parseMsg","split","preventDuplicate","CssTextField","fontFamily","borderColor","TextField","useStyles","flexGrow","input","small_text","TradeStock","classes","currentBid","SetBid","newBid","SetNewBid","currentVolume","SetVolume","newVolume","SetNewVolume","unitBid","SetUnit","isBind","SetBind","isFocus","SetFocus","status","val","vol","sellStatus","setSellStatus","buyStatus","setBuyStatus","myCash","myAsset","myCoin","myWallet","setWallet","isInit","setInit","VolumeUp","volume","floor","VolumeDown","BidUp","Number","BidDown","RefreshBid_Req","once","Buy","bid","bbid","roomID","socketID","Sell","sbid","HandleKeyUp","e","inputCtrl","keyCode","preventDefault","tmpAudio","CurPrice","remove","VolDown","VolUp","PriceUp","PriceDown","Buy100","SetBuyMaxCount","Sell100","SetSellMaxCount","Check","key","document","getElementById","classList","add","HandleKeyDown","useLayoutEffect","currentCash","cash","currentAsset","asset","currentCoin","coinVol","priceUnit","grey","dateString","getMinutes","getSeconds","getMilliseconds","maxSnack","wrap","direction","item","size","onChange","target","button2","textAlign","MyAsset","myAvg","currentAvg","avgPrice","ExpBySymbol","ret","Paper","defaultTextStyle","highlightTextStyle","StockDoneList","doneItem","setItem","doneList","setList","isMine","done","idx","buySellColor","playerID","fontStyle","text","secondary","ChatRoom","setMessage","resMsg","setResMsg","author","messages","setMessages","messagesEnd","useRef","textInput","scrollToBottom","scrollIntoView","sendMessage","roomInfo","activeElement","focus","blur","GridList","clear","ref","dirction","placeholder","inputRef","onFocus","SetInputCtrl","onBlur","event","autoFocus","inputProps","maxlength","greenTheme","createMuiTheme","primary","green","score","PlayerList","players","setPlayers","playerArray","player","index","myColor","myFont","minWidth","GameOverModal","setOpen","rows","leaderBoard","history","useHistory","Modal","disablePortal","disableEnforceFocus","disableAutoFocus","disableBackdropClick","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","TableContainer","component","Table","aria-label","TableHead","align","TableBody","row","scope","setLeaderBoard","push","lobbyAudio","currentTime","typo","ThreeSecTimer","signal","setTimeout","StyledTable","BidTab","currentBids","bidObject","boldIndex","BidEntity","reqJson","reqPrice","reqVol","justifyItems","BidTable","setTable","CancelBid","num","bidTable","CancelBidByKey","Cancel1","Cancel2","Cancel3","Cancel4","Cancel5","Cancel6","Cancel7","Cancel8","bidElem","xs","AskEntity","AskTable","CancelAsk","askTable","CancelAskByKey","askElem","StyledTabs","indicator","alignContent","Tabs","TabIndicatorProps","children","StyledTab","textTransform","fontWeightRegular","wrapped","Tab","disableRipple","TabPanel","other","role","hidden","Box","p","a11yProps","demo1","demo2","TabControl","setValue","BidTableSound","AskTableSound","ExTable","newValue","LayoutGrid","gameTime","useLocation","timerTime","setInputCtrl","over","setOver","GameEnd","APIdata","isChat","chat","_","gameMusic","musicList","Deja_Vu","Dont_Stop_Me_Now","Gong","King_Conga","Mausoleum_Mash","Without_Me","StormRoad","Beethven_Virus","The_Wight_to_Remain","LayoutGridEffect","location","musicName","setTimerTime","setIsStart","SpecificMusic","threeSecTimerOpen","setThreeSecTimerOpen","withRouter","params","indexOf","searchParams","URLSearchParams","tmp","setTemp","handleOnSave","onSave","buttonMsg","has","Logo","InputProps","InputLabelProps","onKeyPress","maxLength","transform","LobbyPlayerCard","isLeader","roomLeader","svg","Avatars","sprites","create","CardContent","dangerouslySetInnerHTML","__html","formControl","selectEmpty","marginTop","MusicLeader","MusicInput","FormControl","InputLabel","Select","labelId","music","duration","MenuItem","ShowMusic","musicTime","setMusicTime","noValidate","autoComplete","defaultValue","strTime","readOnly","MusicMember","disabled","tmp_roomInfo","SetRoomIdAndInfo","LobbyMusicOnOff","FormGroup","FormControlLabel","control","pause","LobbyTabs","keymap","setKeymap","selectMusic","setSelectMusic","tmp_music","tmp_time","setMusic","strSetTime","handleClose","openKey","Boolean","openSelect","CheckLeader","socketId","currentTarget","Popover","anchorEl","transformOrigin","Typography","KeyMapTemp","StartGame","restReadyTime","SetRestTime","isSetUp","off","pathname","restTime","soc","PutNewCard","playerList","Object","entries","getPlayersList","tmparr","contianer","room","backgroundImage","backgroundImg","backgroundSize","protocol","host","select","execCommand","EnterRoom","setName","LobbyMusic","playing","loop","sendAudio","sendName","flag","get","Routes","isValid","setAudio","audio","exact","path","render","to","dotenv","config","GameManager","TestEmitButton","sendComment","ev","comment","RequestSocket","hash","io","process","ipAddress","today","setSocket","addMessage","user_count","ReactDOM"],"mappings":"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","file":"static/js/main.1dc38eb8.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport {\n    FormHelperText,\n    Input,\n    FormControl,\n    makeStyles,\n    TextField,\n    InputAdornment,\n} from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport './PlayerManager.css';\nimport axios from 'axios';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\n// import {Fade} from './TradeModal.js';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport clsx from 'clsx';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '80%',\n        //   maxWidth: '30ch',\n        backgroundColor: theme.palette.background.paper,\n        float: 'left',\n    },\n    card: {\n        display: 'inline-block',\n    },\n    orange: {\n        backgroundColor: '#666666',\n    },\n    inline: {\n        display: 'inline',\n    },\n    bullet: {\n        width: '45%',\n        margin: '10px',\n    },\n    modal_name: {\n        fontSize: 60,\n        marginBottom: 14,\n    },\n    modal_price: {\n        fontSize: 55,\n        marginBottom: 50,\n    },\n    modal_arrow: {\n        maxWidth: '20px',\n        float: 'right',\n    },\n    Textfield: {\n        fontSize: 20,\n        marginBottom: 10,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        width: '500px',\n        height: '500px',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        float: 'auto',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(4, 6, 6),\n    },\n}));\nfunction StockRow(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const Fade = React.forwardRef(function Fade(props, ref) {\n        const { in: open, children, onEnter, onExited, ...other } = props;\n        const style = useSpring({\n            from: { opacity: 0 },\n            to: { opacity: open ? 1 : 0 },\n            onStart: () => {\n                if (open && onEnter) {\n                    onEnter();\n                }\n            },\n            onRest: () => {\n                if (!open && onExited) {\n                    onExited();\n                }\n            },\n        });\n        return (\n            <animated.div ref={ref} style={style} {...other}>\n                {children}\n            </animated.div>\n        );\n    });\n    return (\n        <Row>\n            <Button\n                className=\"button\"\n                onClick={handleOpen}\n                style={{ width: '100%' }}\n            >\n                <Col>{props.stock.stock_name}</Col>\n                <Col>{props.stock.prevYear}</Col>\n                <Col>{props.stock.curr_price}</Col>\n                <Col>{props.stock.id}</Col>\n                <Col>{props.stock.upDownRate}</Col>\n            </Button>\n            <Modal\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2\n                            className={classes.modal_name}\n                            id=\"spring-modal-title\"\n                        >\n                            {props.stock.stock_name}\n                        </h2>\n                        <h2\n                            className={classes.modal_price}\n                            id=\"spring-modal-title\"\n                        >\n                            {props.stock.curr_price}\n                        </h2>\n                        <PurchaseModal\n                            user={props.user}\n                            socket={props.socket}\n                            stock_list={props.user.stock}\n                            cash={props.user.cash}\n                            stock_name={props.stock.stock_name}\n                            price={props.stock.curr_price}\n                        />\n                    </div>\n                </Fade>\n            </Modal>\n        </Row>\n    );\n}\nfunction PurchaseModal(props) {\n    const classes = useStyles();\n    const [stock, setStock] = useState(null);\n    const [tmpStock, setTmpStock] = useState(0);\n    const [cash, setCash] = useState(props.cash);\n    const [price, setPrice] = useState(props.price);\n    const [diffrence, setDiffrence] = useState(0);\n    const [open, setOpen] = React.useState(false);\n    /*\n   *  유저가 가지고있는 stock list에서 현재 modal에 띄워진 stock과 일치하는 stock을 찾는다.\n    ? for문이 최선? 10개밖에 없으니까 일단 괜찮을 것 같긴 함  \n   */\n    for (let i = 0; i < props.stock_list.length; i++) {\n        if (props.stock_list[i].stock_name === props.stock_name) {\n            setStock(props.stock_list[i]);\n            setTmpStock(props.stock_list[i]);\n            break;\n        }\n    }\n    function PlusArrow(props) {\n        setDiffrence(diffrence + 1);\n        return setTmpStock(tmpStock + 1);\n    }\n    function MinusArrow(props) {\n        setDiffrence(diffrence - 1);\n        return setTmpStock(tmpStock - 1);\n    }\n    const handleClick = () => {\n        setOpen(true);\n    };\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n    function Buy() {\n        props.socket.emit('test', {\n            comment:\n                '_' +\n                props.stock_name +\n                '_ [' +\n                tmpStock +\n                '] 개의 주식의' +\n                ' 매수 주문을 체결했습니다.',\n        });\n        props.socket.emit(\n            'stock_buy',\n            // {\n            //   //@ playerId, roomId,\n            //   userID: props.user.user_id,\n            //   socketID: props.user.socket_id,\n            //   stockName: props.stock_name,\n            //   buyCount: tmpStock,\n            // }\n            {\n                room_id: 'test_room',\n                player_id: 'karockai',\n                type: 'stock_buy',\n                stock_name: 'A화학',\n                ea: '2',\n            }\n        );\n        props.socket.on('stock_buy_res', (response, player_info) => {\n            handleClick();\n            //@ pop up event,\n        });\n    }\n    function Sell() {\n        props.socket.emit('test', {\n            comment:\n                '_' +\n                props.stock_name +\n                '_ [' +\n                tmpStock +\n                '] 개의 주식의' +\n                ' 매도 주문을 체결했습니다.',\n        });\n        //@ Sell 관련 backend 개발 이후에 추가할 예정\n    }\n    return (\n        <div>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <FormControl\n                    className={clsx(\n                        classes.margin,\n                        classes.withoutLabel,\n                        classes.textfield\n                    )}\n                    style={{ margin: 'auto' }}\n                >\n                    <FormHelperText id=\"standard-weight-helper-text\">\n                        보유 주\n                    </FormHelperText>\n                    <Input\n                        id=\"standard-adornment-weight\"\n                        value={tmpStock}\n                        endAdornment={\n                            <InputAdornment position=\"end\">개</InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <FormControl\n                    className={clsx(\n                        classes.margin,\n                        classes.withoutLabel,\n                        classes.textfield\n                    )}\n                    style={{ margin: 'auto' }}\n                >\n                    <FormHelperText id=\"standard-weight-helper-text\">\n                        지불 금액\n                    </FormHelperText>\n                    <Input\n                        id=\"standard-adornment-weight\"\n                        value={price * diffrence}\n                        endAdornment={\n                            <InputAdornment position=\"end\">원</InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <FormControl\n                    className={clsx(\n                        classes.margin,\n                        classes.withoutLabel,\n                        classes.textField\n                    )}\n                    style={{ margin: 'auto' }}\n                >\n                    <FormHelperText id=\"standard-weight-helper-text\">\n                        잔액\n                    </FormHelperText>\n                    <Input\n                        id=\"standard-adornment-weight\"\n                        value={cash - price * diffrence}\n                        endAdornment={\n                            <InputAdornment position=\"end\">원</InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </form>\n            <form className={classes.modal_arrow} noValidate autoComplete=\"off\">\n                <ArrowDropUpIcon\n                    onClick={PlusArrow}\n                    style={{ fontSize: '40px' }}\n                />\n                <ArrowDropDownIcon\n                    onClick={MinusArrow}\n                    style={{ fontSize: '40px' }}\n                />\n            </form>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                    Buy(props.stock_name);\n                }}\n            >\n                매수\n            </Button>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                    Sell(props.stock_name);\n                }}\n            >\n                매도\n            </Button>\n            <div className={classes.root}>\n                <Snackbar\n                    open={open}\n                    autoHideDuration={2000}\n                    onClose={handleClose}\n                >\n                    <Alert onClose={handleClose} severity=\"success\">\n                        매수 주문이 완료되었어요! 😍\n                    </Alert>\n                </Snackbar>\n            </div>\n        </div>\n    );\n}\nfunction StockMarket(props) {\n    const marketCurrent = props.stock_list.map((stock, id) => {\n        return (\n            <StockRow\n                socket={props.socket}\n                className=\"stock\"\n                key={id}\n                stock={stock}\n                user={props.user}\n            />\n        );\n    });\n    return (\n        <div className=\"animate-change\">\n            <p>StockMarket</p>\n            <div>\n                <Container>\n                    <Row>\n                        <Col>종목명</Col>\n                        <Col>종목번호</Col>\n                        <Col>현재가</Col>\n                        <Col>id</Col>\n                        <Col>분류</Col>\n                    </Row>\n                    {marketCurrent}\n                </Container>\n            </div>\n        </div>\n    );\n}\nexport default StockMarket;\n","import logo from './logo.svg';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, Container, Col, Row } from 'react-bootstrap';\nimport './PlayerManager.css';\nimport user_list from './user.json';\n\nclass PlayerProfileCard extends React.Component {\n    render() {\n        return (\n            <div id=\"card\">\n                <div className=\"personal\">\n                    <Avatar image=\"https://raw.githubusercontent.com/JustMonk/codepen-resource-project/master/img/pixel%20avatar.png\" />\n                    <NameHolder name={this.props.name} />\n                </div>\n                <Info\n                    point={this.props.point}\n                    money={this.props.money}\n                    gain={this.props.gain}\n                />\n                <InfoButton buy=\"매매목록\" info=\"대화요청\" />\n            </div>\n        );\n    }\n}\n\nfunction InfoButton(props) {\n    return (\n        <div className=\"infoButton\">\n            <Button variant=\"info\">{props.buy}</Button>\n            <Button variant=\"danger\">{props.info}</Button>\n        </div>\n    );\n}\n\nfunction Info(props) {\n    return (\n        <div className=\"info\">\n            <span>포인트 {props.point}</span>\n            <span>자산 {props.money}</span>\n            <span>수익률 {props.gain}</span>\n        </div>\n    );\n}\n\nfunction Avatar(props) {\n    return (\n        <div className=\"avatar\">\n            <img src={props.image} alt=\"user avatar\" />\n        </div>\n    );\n}\n\nfunction NameHolder(props) {\n    return (\n        <div className=\"nameHolder\" style={{ margin: 'auto' }}>\n            <h1>{props.name}</h1>\n        </div>\n    );\n}\n\nclass PlayerManager extends React.Component {\n    renderUser(userIdx) {\n        return (\n            <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                    <Card.Title>Card Title</Card.Title>\n\n                    <Card.Link href=\"#\">Card Link</Card.Link>\n                    <Card.Link href=\"#\">Another Link</Card.Link>\n                </Card.Body>\n            </Card>\n        );\n    }\n\n    yonggi() {}\n\n    render() {\n        // const users = this.state.users;\n        const users = user_list;\n        const isLeft = this.props.isLeft;\n        let userProfile = Array(6).fill(null);\n        users.map((user, idx) => {\n            userProfile[idx] = (\n                <Row>\n                    <PlayerProfileCard\n                        onClick={this.yonggi}\n                        name={user.id}\n                        winRate={user.yield}\n                        point={user.point}\n                        money={user.cash}\n                        gain={user.yield}\n                    />\n                </Row>\n            );\n        });\n\n        return (\n            //@ 6명의 유저를 모두 출력 해주도록 함수를 호출\n            //@ template 찾기\n            <div>\n                <Container>\n                    {isLeft ? (\n                        <Col>\n                            {userProfile[0]}\n                            {userProfile[1]}\n                            {userProfile[2]}\n                        </Col>\n                    ) : (\n                        <Col>\n                            {userProfile[3]}\n                            {userProfile[4]}\n                            {userProfile[5]}\n                        </Col>\n                    )}\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default PlayerManager;\n\n// class ProfileCard extends React.Component {\n//     render() {\n//        return (\n//           <div id=\"card\">\n//              <div className=\"personal\">\n//                 <Avatar image=\"https://raw.githubusercontent.com/JustMonk/codepen-resource-project/master/img/pixel%20avatar.png\" />\n//                 <NameHolder name={this.props.name} career={this.props.career} />\n//              </div>\n//              <Info pens={this.props.pens} posts={this.props.posts} projects={this.props.projects} />\n//              <Skills skills={this.props.skills} />\n//              <Followers followers={this.props.followers} following={this.props.following} />\n//              <RandomizeButton />\n//           </div>\n//        );\n//     }\n//  }\n\n//  function RandomizeButton() {\n//     let rand = Math.random;\n//     let maxSkills = 3 + getRandom(2);\n\n//     function getRandom(arg) {\n//        if (Array.isArray(arg)) return arg[Math.round((rand() * (arg.length - 1)).toFixed(2))];\n//        return Math.round((rand() * arg).toFixed(2)) || 1;\n//     }\n\n//     function randomize() {\n//        let names = [\"Mike\", \"Andrew\", \"Tom\", \"Jack\", \"Garry\", \"Nick\", \"Daniel\"];\n//        let surnames = [\"Vazovsky\", \"Anderson\", \"Archer\", \"Armstrong\", \"Ash\", \"Bradley\", \"Collins\"];\n//        let careers = [\"Frontend developer\", \"Backend developer\", \"Designer\", \"Data scientist\", \"Engineer\", \"Painter\"];\n//        let skills = [\"CSS3\", \"Ruby\", \"PHP\", \"JavaScript\", \"React\", \"HTML5\", \"Vue.js\", \"Angular\", \"Python\", \"C#\", \"C++\", \"Java\", \"Node.JS\"];\n//        let randomSkils = [];\n//        while (randomSkils.length <= maxSkills) { randomSkils.push(skills.splice(getRandom(skills.length - 1), 1)); }\n//        ReactDOM.render(<ProfileCard name={getRandom(names) + \" \" + getRandom(surnames)} career={getRandom(careers)} pens={getRandom(60)} posts={getRandom(20)} projects={getRandom(10)} skills={randomSkils} followers={getRandom(44)} following={getRandom(27)} />, document.getElementById('root'));\n\n//        //anim changeable data\n//        let changeNodes = document.querySelectorAll('.nameHolder, .info span, .skills, .followers h2');\n//        changeNodes.forEach(val => {\n//           val.classList.add('animate-change');\n//        });\n\n//        changeNodes[0].addEventListener(\"animationend\", animationEnd);\n//        changeNodes[0].addEventListener(\"webkitAnimationEnd\", animationEnd);\n//        function animationEnd(e) {\n//           changeNodes.forEach(val => {\n//              val.classList.remove(\"animate-change\");\n//           });\n//        }\n//     }\n\n//     return (\n//        <a className=\"randomizeButton\" onClick={randomize}>Randomize</a>\n//     );\n//  }\n\n//  function Followers(props) {\n//     return (\n//        <div className=\"followers\">\n//           <div>\n//              <h1>followers</h1>\n//              <h2>{props.followers}</h2>\n//           </div>\n//           <div>\n//              <h1>following</h1>\n//              <h2>{props.following}</h2>\n//           </div>\n//        </div>\n//     );\n//  }\n\n//  function Skills(props) {\n//     let startKey = 0;\n//     return (\n//        <div className=\"skills\">\n//           {\n//              props.skills.map(elem => {\n//                 return <span key={startKey++}>{elem}</span>\n//              })\n//           }\n//        </div>\n//     );\n//  }\n\n//  function Avatar(props) {\n//     return (\n//        <div className=\"avatar\">\n//           <img src={props.image} alt=\"user avatar\" />\n//        </div>\n//     );\n//  }\n\n//  function NameHolder(props) {\n//     return (\n//        <div className=\"nameHolder\">\n//           <h1>{props.name}</h1>\n//           <h2>{props.career}</h2>\n//        </div>\n//     );\n//  }\n\n//  function Info(props) {\n//     return (\n//        <div className=\"info\">\n//           <span>Pens: {props.pens}</span>\n//           <span>Posts: {props.posts}</span>\n//           <span>Projects: {props.projects}</span>\n//        </div>\n//     );\n//  }\n\n//  ReactDOM.render(<ProfileCard name=\"Mike Vazovsky\" career=\"Frontend developer\" pens=\"14\" posts=\"7\" projects=\"5\" skills={[\"CSS3\", \"HTML5\", \"JavaScript\", \"PHP\"]} followers=\"45\" following=\"12\" />, document.getElementById('root'));\n","import React, { useState } from 'react';\n\nconst strByteLength = (s, b, i, c) => {\n    for (b = i = 0; (c = s.charCodeAt(i++)); b += c >> 11 ? 3 : c >> 7 ? 2 : 1);\n    return b;\n};\n\nfunction Chat(props) {\n    const [msg, setMessage] = useState('');\n\n    const OnChange = (e) => {\n        setMessage(e.target.value);\n    };\n\n    const OnKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            props.sendMessage(e);\n        }\n    };\n\n    const color = (author) => {\n        if (author === 'SERVER') {\n            return '#BB0000';\n        } else {\n            return (\n                '#' +\n                Math.floor(\n                    parseInt(author.substring(4)) * 121203891028309128315\n                ).toString(16)\n            );\n        }\n    };\n    return (\n        <div className=\"container\">\n            <div style={{ width: '100%' }}>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"card-title\">Stock Chat</div>\n                        <hr />\n                        <div className=\"messages\">\n                            {props.chat.messages.map((message) => {\n                                return (\n                                    <div\n                                        style={{ color: color(message.author) }}\n                                    >\n                                        {message.author}: {message.message}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"card-footer\">\n                        <br />\n                        <input\n                            ref={(input) => input && input.focus()}\n                            type=\"text\"\n                            placeholder=\"Message\"\n                            className=\"form-control\"\n                            value={msg}\n                            onKeyPress={OnKeyPress}\n                            onChange={OnChange}\n                        />\n                        <br />\n                        <button\n                            value={msg}\n                            onClick={props.sendMessage}\n                            className=\"btn btn-primary form-control\"\n                        >\n                            Send\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;\n","import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, CardContent, CardActions, makeStyles } from '@material-ui/core';\nimport { Button } from 'react-bootstrap';\nimport { ChatFeed, Message } from 'react-chat-ui';\nimport './ChatManager.css';\nimport './InfoManager.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport './App.css';\nimport newsList from './news.json';\nimport stockList from './stock.json';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\nimport { orange } from '@material-ui/core/colors';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport LockOpenRoundedIcon from '@material-ui/icons/LockOpenRounded';\n// import {Fade} from './TradeModal.js';\n\n// const InfoManager = () => {\n//     const []\n// }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '30ch',\n        //   backgroundColor: theme.palette.background.paper,\n    },\n    card: {\n        display: 'inline-block',\n    },\n    orange: {\n        backgroundColor: '#666666',\n    },\n    inline: {\n        display: 'inline',\n    },\n    bullet: {\n        width: '45%',\n        margin: '10px',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nfunction MakeInfo(props) {\n    const classes = useStyles();\n    const company = props.comp; //@ 회사명\n    const headline = props.info[0]; //@ 뉴스 헤드라인\n    return (\n        <div>\n            <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                    <Avatar className={classes.orange}>\n                        {company.substring(0, 1)}\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={company}\n                    secondary={\n                        <React.Fragment>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                className={classes.inline}\n                                color=\"textPrimary\"\n                            ></Typography>\n                        </React.Fragment>\n                    }\n                />\n            </ListItem>\n        </div>\n    );\n}\n\nfunction MakeInfoList(props) {\n    const classes = useStyles();\n    return (\n        <>\n            <MakeInfo info={props.info} comp={props.comp} />\n        </>\n    );\n}\n// function plus(props) {\n//   const [points,setPoints] = useState(0);\n//   return (\n//     <div>\n//     <Typography variant=\"h5\" component=\"h2\">\n//     {setPoints(points+1)}\n//     </Typography>\n//     </div>\n//   );\n// }\n\n// Fade.propTypes = {\n//   children: PropTypes.element,\n//   in: PropTypes.bool.isRequired,\n//   onEnter: PropTypes.func,\n//   onExited: PropTypes.func,\n// };\n\nfunction SpringModal(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [lockOpen, setLockOpen] = React.useState(false);\n    const handleOpen = () => {\n        setOpen(true);\n        setLockOpen(true);\n        //@ point 감소\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function lockState() {\n        let lock;\n        if (lockOpen) {\n            lock = <LockOpenRoundedIcon />;\n        } else {\n            lock = <LockRoundedIcon />;\n        }\n        return <>{lock}</>;\n    }\n\n    const Fade = React.forwardRef(function Fade(props, ref) {\n        const { in: open, children, onEnter, onExited, ...other } = props;\n        const style = useSpring({\n            from: { opacity: 0 },\n            to: { opacity: open ? 1 : 0 },\n            onStart: () => {\n                if (open && onEnter) {\n                    onEnter();\n                }\n            },\n            onRest: () => {\n                if (!open && onExited) {\n                    onExited();\n                }\n            },\n        });\n\n        return (\n            <animated.div ref={ref} style={style} {...other}>\n                {children}\n            </animated.div>\n        );\n    });\n\n    return (\n        <div>\n            <Button\n                variant=\"outline-dark\"\n                style={{ float: 'right', margin: '4px 4px 10px' }}\n                type=\"button\"\n                onClick={handleOpen}\n            >\n                {lockState()}\n                &nbsp;정보 보기\n            </Button>\n            <Modal\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2 id=\"spring-modal-title\">{props.comp}</h2>\n                        <p id=\"spring-modal-description\">{props.info[0]}</p>\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\n\nfunction InfoManager(props) {\n    const classes = useStyles();\n    const [infos, setInfos] = useState(newsList);\n    const [companys, setComp] = useState(stockList);\n    const initInfo = () => {};\n\n    const infoList = infos.map((info, idx) => {\n        return (\n            <Card\n                className={[\n                    classes.card,\n                    'animate-change',\n                    classes.bullet,\n                ].join(' ')}\n            >\n                <CardContent>\n                    <MakeInfoList\n                        info={info}\n                        comp={companys[idx]['stock_name']}\n                    />\n                    <SpringModal\n                        point={props.point}\n                        info={info}\n                        comp={companys[idx]['stock_name']}\n                    />\n                </CardContent>\n            </Card>\n        );\n    });\n    return (\n        <>\n            My Point<h1>{props.point}</h1>\n            {infoList}\n        </>\n    );\n}\nexport default InfoManager;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport stock_list from './stock.json';\nimport user_list from './user.json';\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\n// ! stock_list, stock에서 받아온 json을 파싱해서 새로운 object파일 만듬\nfunction createData(stock_name, purchase_amount, number, curr_price) {\n    const yield_amount = (curr_price - purchase_amount) * 100;\n    return { stock_name, purchase_amount, number, curr_price, yield_amount };\n}\n\n// ! 한 줄에 표시되는 정보 만듬\nfunction CreateLine() {\n    // 유저명, 총 평가금액, 작년 대비 이익(+수익률)\n    // 종목명, 매입금액 ,주식수, 현재금액, 수익률\n\n    let [stockList, setStockList] = useState(stock_list);\n    let tmpTable = [...stockList]; // deepcopy\n\n    for (let idx = 0; idx < 10; ++idx) {\n        tmpTable[idx] = createData(\n            stockList[idx]['stock_name'],\n            30, //'구매했을때의 평균가격(아직구현X)'\n            stockList[idx]['upDownRate'],\n            stockList[idx]['curr_price']\n        );\n    }\n\n    // setStockList(tmpTable);\n\n    return (\n        <>\n            {tmpTable.map((object) => (\n                <StyledTableRow key={object.stock_name}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                        {object.stock_name}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                        {object.purchase_amount}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                        {object.number}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                        {object.curr_price}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                        {object.yield_amount}\n                    </StyledTableCell>\n                </StyledTableRow>\n            ))}\n        </>\n    );\n}\n// users.map((user, idx) => {\n//   userProfile[idx] = (<Row>\n//       <PlayerProfileCard onClick={this.yonggi} name={user.name} winRate={user.winRate} point={user.point} money={user.money} gain={user.gain} />\n//   </Row>)\n// })\n// const rows = [\n//   createData('B엔터', '3,000', 100, '30,000', 4.0),\n//   createData('F바이오', '2,000', 10, '2,000', 4.3),\n//   createData('H뷰티', '100,000', 1, '120,000', 6.0),\n//   createData('I화학', '40,000', 2, '30,000', 4.3),\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        // minWidth: 700,\n    },\n    root: {\n        ...theme.typography.button,\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n}));\n\nfunction UserName() {\n    const classes = useStyles();\n    const userName = '김용기';\n    return <div className={classes.root}>{userName + '님의 계좌 잔고'}</div>;\n}\n\nconst currTotal = 5900000;\nconst lastTotal = 3200000;\nconst profitAmount = currTotal - lastTotal;\n// const profitRate = currTotal / lastTotal;\nconst profitRate = 5.4;\n\nfunction CustomizedTables() {\n    const classes = useStyles();\n\n    return (\n        <TableContainer className=\"animate-change\" component={Paper}>\n            <UserName />\n            <Table>\n                <TableRow>\n                    <TableCell>총 평가금액</TableCell>\n                    {/* <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell> */}\n                    <TableCell style={{ fontSize: 30 }} align=\"right\">\n                        {currTotal}\n                    </TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>작년대비</TableCell>\n                    <TableCell align=\"right\">\n                        {'+' +\n                            profitAmount +\n                            '(+' +\n                            `${(profitRate * 100).toFixed(0)} %)`}\n                    </TableCell>\n                    {/* <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell> */}\n                </TableRow>\n            </Table>\n            <Table className={classes.table} aria-label=\"customized table\">\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell>종목명</StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                            매입금액\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">주식수</StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                            현재금액\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">수익률</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <CreateLine />\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default CustomizedTables;\n","import logo from './logo.svg';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport './App.css';\nimport Chat from './Chat'\n\nfunction App() {\n  return (\n    <div>\n      Settings.... 만들어야해...ㅠ\n    </div>\n  );\n}\n\n// Player fucntion\n//_ 공통 기능 :: 플레이어 객체의 정보를 가지고 표현한다\nclass PlayerManager extends React.Component {\n  constructor(props) { // Initialize\n    super(props);\n    this.state = {\n      userID: null,\n      userPoint: 0,\n      userMoney: 0,\n      hint: null,\n\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    }\n  }\n}\n//_ 공통 기능 :: 버튼(button) 객체에 해당하는 화면을 캔버스(canvas)에 띄운다.\n//_ \nclass ButtonManager extends React.Component {\n\n}\n//_ 공통 기능 :: \nclass CanvasManager extends React.Component {\n\n}\n\nclass GameManager extends React.Component {\n  //_ 전체 힌트,\n  //_ hint index를 api 요청을 해.\n  //_ response data가 hint이고,\n  // <CanvasManager hint = \"\"/>\n  // this.prop.hint \n}\n\n\nexport default App;\n","import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    Tab,\n    Tabs,\n    useTheme,\n} from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport './CanvasManager.css';\nimport StockMarket from './StockMarket';\nimport PlayerManager from './PlayerManager';\nimport Chat from './Chat';\nimport InfoManager from './InfoManager';\nimport CustomizedTables from './FundManager';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport App from './App';\nimport PlayerInfo from './yonggi_json/player_info.json';\nimport setting_price from './yonggi_json/setting_price.json';\nimport stock from './stock.json';\n/**\n *\n * socket_id를 대조해서 현재 플레이어가 누군지 저장해둔다.\n */\n\n// function TabPanel(props) {\n//     const { children, value, index, ...other } = props;\n\n//     return (\n//         <div\n//             role=\"tabpanel\"\n//             hidden={value !== index}\n//             id={`full-width-tabpanel-${index}`}\n//             aria-labelledby={`full-width-tab-${index}`}\n//             {...other}\n//         >\n//             {value === index && (\n//                 <Box p={3}>\n//                     <Typography>{children}</Typography>\n//                 </Box>\n//             )}\n//         </div>\n//     );\n// }\n\n// TabPanel.propTypes = {\n//     children: PropTypes.node,\n//     index: PropTypes.any.isRequired,\n//     value: PropTypes.any.isRequired,\n// };\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 1000,\n    },\n}));\n\nfunction FullWidthTabs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"종목토론방\"\n                        {...a11yProps(0)}\n                        onClick={() => props.onClick('chat')}\n                    />\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"매매하기\"\n                        {...a11yProps(1)}\n                        onClick={() => props.onClick('stock')}\n                    />\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"자산확인\"\n                        {...a11yProps(2)}\n                        onClick={() => props.onClick('fund')}\n                    />\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"뉴스보기\"\n                        {...a11yProps(3)}\n                        onClick={() => props.onClick('info')}\n                    />\n                    <Tab\n                        style={{ fontSize: 25 }}\n                        label=\"게임설정\"\n                        {...a11yProps(4)}\n                        onClick={() => props.onClick('setting')}\n                    />\n                </Tabs>\n            </AppBar>\n        </div>\n    );\n}\n\n//_ previous Toggles\n// function ToggleButtons(props) {\n//     const [alignment, setAlignment] = React.useState('left');\n\n//     const handleAlignment = (event, newAlignment) => {\n//         setAlignment(newAlignment);\n//     };\n//     return (\n//         <ToggleButtonGroup\n//             value={alignment}\n//             exclusive\n//             onChange={handleAlignment}\n//             aria-label=\"text alignment\"\n//         >\n//             <ToggleButton onClick={() => props.onClick(\"chat\")} className=\"tool-btn\" size=\"large\" value=\"chat\" aria-label=\"centered\">\n//                 채팅\n//             </ToggleButton>\n//             <ToggleButton onClick={() => props.onClick(\"stock\")} className=\"tool-btn\" value=\"stock\" aria-label=\"centered\">\n//                 주가\n//             </ToggleButton>\n//             <ToggleButton onClick={() => props.onClick(\"fund\")} className=\"tool-btn\" value=\"fund\" aria-label=\"centered\">\n//                 자산\n//             </ToggleButton>\n//             <ToggleButton onClick={() => props.onClick(\"info\")} className=\"tool-btn\" value=\"info\" aria-label=\"centered\">\n//                 정보\n//             </ToggleButton>\n//             <ToggleButton onClick={() => props.onClick(\"setting\")} className=\"tool-btn\" value=\"setting\" aria-label=\"centered\">\n//                 설정\n//             </ToggleButton>\n//         </ToggleButtonGroup>\n//     );\n// }\n\nfunction FullWidthGrid(props) {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n    }));\n    const classes = useStyles();\n    const stocks = stock;\n    function Canvas() {\n        let select;\n        if (props.canvas === 'chat') {\n            select = (\n                <Chat\n                    getMessage={props.getMessage}\n                    sendMessage={props.sendMessage}\n                    chat={props.chat}\n                />\n            );\n        } else if (props.canvas === 'stock') {\n            select = (\n                <StockMarket\n                    socket={props.socket}\n                    user={props.userState}\n                    stock_list={stocks}\n                />\n            );\n        } else if (props.canvas === 'fund') {\n            select = <CustomizedTables />;\n        } else if (props.canvas === 'info') {\n            const point = props.userState.info_pt;\n            select = <InfoManager point={point} />;\n        } else if (props.canvas === 'setting') {\n            select = <App />;\n        }\n        return <>{select}</>;\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <FullWidthTabs onClick={props.onClick} />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                    <Paper className={classes.paper}>\n                        <PlayerManager isLeft={true} />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Paper className={classes.paper}>\n                        <Canvas />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                    <Paper className={classes.paper}>\n                        <PlayerManager isLeft={false} />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\n//_ 데이터 구조\n// 캔버스에서 무엇을 관리해야하나. (아래 해당하는 전체 게임 로직에 관한 모든것)\n// Main -> 방 정보, 게임 Turn, 시간, 유저 숫자, 게임 상태 (시작-턴 시작, 진행-턴 진행, 종료-턴 종료, 대기-임의의 이벤트 등),\n// Users -> 방 안의 유저 정보 리스트 (닉네임, 포인트, 자산, 수익률, 자산 내용, 승률 등)\n// Chat -> 내 닉네임, 채팅 상대 목록, 귓속말 상대, 모든 대화 내용 (public, private)\n// Stock -> 구매 가능한 종목, 종목에 대한 여러 지표들 (종목명, 전년, 올해 가격, 등락, [매도])\n// Fund -> 구매한 종목, 내 자산 지표 (내 닉네임, 총 평가금액, 수익률), 종목에 대한 여러 지표들 (종목명, 종목가격, 수익률, 구입 종목 수[매수])\n// Inform -> 내 포인트, 구매 가능한 정보 리스트 (기업정보, 기업내용, 가격point), 구매한 정보 리스트\n// Setting\nfunction CanvasManager(props) {\n    var user_idx;\n    const socket_id = 'aaaaaa';\n    const room_id = '32dmb141zvvd';\n    // var year = setting_price.;\n    /* \n    => socket_id와 room_id는 player_info를 통해 받아오는 걸로 수정해야 함\n    */\n    // ? socket_id, room_id를 객체 밖으로 빼서 key값으로 만들면 for문 없이 key값으로 찾아올 수 있을듯\n    for (var i = 0; i < PlayerInfo.length; i++) {\n        if (socket_id === PlayerInfo[i].socket_id) {\n            user_idx = i;\n        }\n    }\n\n    const player_info = PlayerInfo[user_idx];\n    const [userState, setUserState] = useState(player_info);\n    const [currCanvas, setCurrCanvas] = useState('chat');\n\n    const onClick = (canvasName) => {\n        setUserState({\n            ...userState,\n            [currCanvas]: canvasName,\n        });\n        setCurrCanvas(canvasName);\n    };\n    return (\n        <div>\n            <FullWidthGrid\n                socket={props.socket}\n                getMessage={props.getMessage}\n                sendMessage={props.sendMessage}\n                chat={props.chat}\n                userState={userState}\n                onClick={onClick}\n                canvas={currCanvas}\n            />\n        </div>\n    );\n}\n\nexport default CanvasManager;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { format } from 'd3-format';\nimport { timeFormat } from 'd3-time-format';\n\nimport { ChartCanvas, Chart } from 'react-stockcharts';\nimport {\n\tPriceCoordinate\n} from \"react-stockcharts/lib/coordinates\";\nimport { BarSeries, CandlestickSeries } from 'react-stockcharts/lib/series';\nimport { XAxis, YAxis } from 'react-stockcharts/lib/axes';\nimport {\n    CrossHairCursor,\n    MouseCoordinateX,\n    MouseCoordinateY,\n} from 'react-stockcharts/lib/coordinates';\n\nimport { discontinuousTimeScaleProvider } from 'react-stockcharts/lib/scale';\nimport { OHLCTooltip } from 'react-stockcharts/lib/tooltip';\nimport { fitWidth } from 'react-stockcharts/lib/helper';\nimport { last } from 'react-stockcharts/lib/utils';\nimport { blue, red } from '@material-ui/core/colors';\n\nconst candlesAppearance = {\n    wickStroke: '#ffffff',\n    fill: function fill(d) {\n        return d.close > d.open ? red[600] : blue[600];\n    },\n    stroke: '#000000',\n    candleStrokeWidth: 1,\n    widthRatio: 0.8,\n    opacity: 1,\n};\n\nclass StockChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            height: window.innerHeight * 0.3,\n            width: window.innerWidth * 0.4,\n        };\n\n        this.dataHigh = 0\n        this.dataLow = 99999999999\n    }\n\n    handleResize = () => {\n        this.setState({\n            height: window.innerHeight * 0.3,\n            width: window.innerWidth * 0.4,\n        });\n    };\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    render() {\n        const { type, data: initialData, width, ratio } = this.props;\n\n        const xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor(\n            (d) => d.date\n        );\n        const { data, xScale, xAccessor, displayXAccessor } = xScaleProvider(\n            initialData\n        );\n\n        const start = xAccessor(last(data));\n        const end = xAccessor(data[Math.max(0, data.length - 100)]);\n        const xExtents = [start, end];\n        this.dataHigh = last(data).high > this.dataHigh ? last(data).high : this.dataHigh;\n        this.dataLow = last(data).low < this.dataLow ? last(data).low : this.dataLow;\n        return (\n            <ChartCanvas\n                height={this.state.height}\n                ratio={ratio}\n                width={width}\n                margin={{ left: 55, right: 70, top: 10, bottom: 30 }}\n                type={type}\n                seriesName=\"MACD\"\n                data={data}\n                xScale={xScale}\n                xAccessor={xAccessor}\n                displayXAccessor={displayXAccessor}\n                xExtents={xExtents}\n            >\n                {/* <Chart id={1} yExtents={[(d) => [d.high + 0.5, d.low - 0.5]]}> */}\n                <Chart id={1} yExtents={[this.dataHigh * 1.0005, this.dataLow * 0.9995]}>\n                    <XAxis axisAt=\"bottom\" orient=\"bottom\" />\n                    <YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n                    <MouseCoordinateY\n                        at=\"right\"\n                        orient=\"right\"\n                        displayFormat={format('.2f')}\n                    />\n                    <PriceCoordinate\n                        at=\"right\"\n                        orient=\"right\"\n                        price={this.dataLow}\n                        stroke=\"#3490DC\"\n                        strokeWidth={1}\n                        fill=\"blue\"\n                        textFill=\"#ffffff\"\n                        arrowWidth={7}\n                        strokeDasharray=\"ShortDash\"\n                        displayFormat={format('.2f')}\n                    />\n\n                    <PriceCoordinate\n                        at=\"right\"\n                        orient=\"right\"\n                        price={this.dataHigh}\n                        stroke=\"#3490DC\"\n                        strokeWidth={1}\n                        fill=\"red\"\n                        textFill=\"#ffffff\"\n                        arrowWidth={7}\n                        strokeDasharray=\"ShortDash\"\n                        displayFormat={format('.2f')}\n                    />\n                    <CandlestickSeries {...candlesAppearance} />\n                    {/* <OHLCTooltip forChart={1} origin={[-40, 0]} /> */}\n                </Chart>\n                <CrossHairCursor />\n            </ChartCanvas>\n        );\n    }\n}\n\nStockChart.propTypes = {\n    data: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired,\n    ratio: PropTypes.number.isRequired,\n    type: PropTypes.oneOf(['svg', 'hybrid']).isRequired,\n};\n\nStockChart.defaultProps = {\n    type: 'svg',\n};\nStockChart = fitWidth(StockChart);\n\nexport default StockChart;\n","import { blue, red, grey } from '@material-ui/core/colors';\nimport { Grid } from '@material-ui/core';\nimport { React, useState, useEffect } from 'react';\nimport { render } from 'react-dom';\n\n//@ won -> string (4자리 단위로 ',' 끊어주기)\n//@ isBullMarket에 따른 color 변경\n//@ TimeChecker랑 병렬로 놓게 될 것 고려\n//@ 수익률 계산후 문자열 파싱 -> ('+1.33%')\n//@ useEffect socket 통신\n\nfunction ChartTitle(props) {\n    const subtit = '이전대비';\n    const unit = 'KRW';\n    const isBullMarket = true;\n    const [textColor, setBullColor] = useState({\n        color: isBullMarket ? red[600] : blue[600],\n    });\n    const [isBullIcon, SetBullIcon] = useState('▲');\n    const [wonYield, SetYield] = useState('+' + 1.33 + '%');\n    const [beforeWon, SetWonBefore] = useState();\n    const [currentWon, SetWonCurrent] = useState(0);\n    const [upDown, SetUpDown] = useState(0);\n\n    useEffect(() => {\n        return () => {\n            const datas = props.data;\n            const length = props.data.length;\n            const before = datas[length - 2].curPrice;\n            const current = datas[length - 1].curPrice;\n            const sub = current - before;\n            const yid =\n                (sub >= 0 ? '+' : '') +\n                ((sub / current) * 100).toFixed(2) +\n                '%';\n            const icon = sub >= 0 ? '▲' : '▼';\n            const color = sub >= 0 ? red[600] : blue[600];\n            SetWonBefore(before);\n            SetWonCurrent(current);\n            SetUpDown(sub);\n            SetYield(yid);\n            SetBullIcon(icon);\n            setBullColor({ color: color });\n            // console.log({\n            //     before : beforeWon,\n            //     current : currentWon,\n            //     updown : upDown,\n            //     icon : isBullIcon,\n            //     textColor : textColor,\n            // });\n        };\n    }, [props.data]);\n\n\n    function SplitByThree(value) {\n        if (value.length <= 3) return value;\n        return (\n            SplitByThree(value.substring(0, value.length - 3)) +\n            ',' +\n            value.substring(value.length - 3, value.length)\n        );\n    }\n\n\n    function ExpBySymbol(value) {\n        let ret = '';\n        if (value.length >= 9) { // 199489230 -> 1억 9948만 9230\n            ret += ( value.substring(0, value.length - 9 + 1)  + '억 ' ) // 1억\n            value = value.substring(value.length - 9 + 1);\n        }\n        if (value.length >= 5) { // value 99489230\n            ret += ( value.substring(0, value.length - 5 + 1)  + '만 ' )  // 9948만\n            value = value.substring(value.length - 5 + 1);\n        }\n        ret += value;\n        return ret;\n    }\n\n    const parseWonToStr = (won) => {\n        if (typeof won == 'number') won = won.toString();\n        return won;\n    };\n\n    return (\n        <>\n            <div className=\"ChartTitle\" style={textColor}>\n                <span style={{ display: 'block' }}>\n                <Grid container justify='space-between'>\n                    <Grid>\n                        <strong style={{ fontSize: '3vw' }}>\n                            {SplitByThree(parseWonToStr(currentWon))}\n                            \n                        </strong>\n                        <span style={{color: 'white', fontSize: '1vw'}} >{' ' + unit}</span>\n                    </Grid>\n                </Grid>\n                </span>\n                <span>\n                    <p\n                        style={{\n                            fontSize: '0.8vw',\n                            color: '#ffffff',\n                            display: 'inline-block',\n                        }}\n                    >\n                        {subtit}\n                    </p>\n                    <strong style={{ fontSize: '1vw', display: 'inline' }}>{'   ' + wonYield + '  '}</strong>\n                    <strong style={{ fontSize: '1vw', display: 'inline' }}>\n                        {' ' + isBullIcon + ' ' + parseWonToStr(upDown)}\n                    </strong>\n\n                </span>\n            </div>\n        </>\n    );\n}\n\nexport default ChartTitle;\n","import { tsvParse, csvParse } from 'd3-dsv';\nimport { timeParse } from 'd3-time-format';\n\nfunction parseData(parse) {\n    return function (d) {\n        d.date = parse(d.date);\n        d.open = +d.open;\n        d.high = +d.high;\n        d.low = +d.low;\n        d.close = +d.close;\n        d.volume = +d.volume;\n\n        return d;\n    };\n}\n\nconst parseDate = timeParse('%Y-%m-%d');\n// const parseDate = timeParse(\"%Y-%m-%d-%H-%M-%S\");\n//@ data 가져오는 부분\n//@ socket을 어떻게 할당하면 좋을까.\n\nexport function getData() {\n    const promiseMSFT = fetch(\n        'https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/MSFT.tsv'\n    )\n        .then((response) => response.text())\n        .then((data) => tsvParse(data, parseData(parseDate)));\n    return promiseMSFT;\n}\n","export default __webpack_public_path__ + \"static/media/5secLeft.541660f6.wav\";","import { red } from '@material-ui/core/colors';\nimport React, { useEffect, useState } from 'react';\nimport fiveSecLeft from './audios/effect/5secLeft.wav';\n\nexport default function Timer(props) {\n    const [timerSound] = useState(new Audio(fiveSecLeft));\n    const [time, setTime] = useState(-1);\n    props.socket.on('restGameTime', (restGameTime) => {\n        setTime(restGameTime);\n    });\n    const ShowTime = () => {\n        if (0 <= time && time <= 5) {\n            timerSound.play();\n        }\n        var minute = parseInt(time / 60);\n        var second = time - minute * 60;\n        minute = minute >= 10 ? String(minute) : '0' + String(minute);\n        second = second >= 10 ? String(second) : '0' + String(second);\n        if (time <= 0) {\n            minute = '00';\n            second = '00';\n            return <h2 style={{ fontSize: '2.5vw',  }}>{minute + ' : ' + second}</h2>;\n        } else if (time < 60) {\n            return (\n                <h2 style={{fontSize: '2.5vw', color: 'red', fontWeight: 'bold' }} >\n                    {minute+' : '+second}    \n                </h2>\n            );\n        } else {\n            return <h2 style={{ fontSize: 40 }}>{minute + ' : ' + second}</h2>;\n        }\n    };\n\n    return ShowTime();\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { socket } from 'socket.io-client';\nimport StockChart from './StockChart';\nimport ChartTitle from './ChartTitle';\nimport { getData } from './utils';\nimport { tsvParse, csvParse } from 'd3-dsv';\nimport { timeParse } from 'd3-time-format';\nimport {CircularProgress,Grid} from '@material-ui/core';\nimport Timer from './Timer';\n\nclass ChartComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n        };\n    }\n    componentDidUpdate() {}\n    componentWillMount() {\n        if (this.props.socket === null) {\n            this.props.requestSocket('ChartComponent');\n        }\n    }\n    componentDidMount() {\n        //@ 소켓 통신 대기\n    }\n    setup = true;\n    setAPI = false;\n    addCandleData = (data) => {\n        if (data === null) {\n            console.log('하늘소....하늘소.. 응답하라....');\n            return;\n        }\n        data.date = new Date(data.date);\n        if(!this.setAPI) {\n            this.props.setAPIData(data);\n            this.setAPI = true;\n        }\n        if (this.state.data.length >= 150) this.state.data.shift();\n        this.setState({ data: [...this.state.data, data] });\n        // console.log(this.state.datas);\n        // getData(this.state.datas).then(data => {\n        // })\n    };\n    render() {\n        const dataLength = this.state.data.length;\n\n        if (this.setup) {\n            //@ candle data callback\n            if (this.props.socket == null) {\n                // this.props.requestSocket('ChartComponent');\n            }\n            if (this.props.requestSocket == null) {\n                console.log('requestSocket is null');\n            } else if (this.props.socket != null) {\n                this.props.socket.emit('chartData_Req');\n                this.props.socket.on('chartData_Res', (datas) =>{\n                    console.log('게임 시작 이전의 차트 데이터(최대 100tick)가 로드되었습니다.');\n                    datas.chartData.map((data) => {\n                        this.addCandleData(data);\n                    })\n                    this.props.socket.on('chart', (data) => {\n                        this.addCandleData(data);\n                    });\n                });\n                this.setup = false;\n            }\n        }\n\n        if (this.props.socket == null || dataLength < 2) {\n            return (\n                <div\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '30vh',\n                    }}\n                >\n                    <CircularProgress />\n                </div>\n            );\n        }\n        // console.log(this.props.time);\n        return (\n            <>\n                <Grid container justify={'space-between'} style={{padding:'1vh'}}>\n                    <ChartTitle data={this.state.data} time={this.props.time} />\n                    {\n                        this.props.isStart && <Timer socket={this.props.socket}/>\n                    }\n                </Grid>\n                <StockChart type={'hybrid'} data={this.state.data} />\n            </>\n        );\n    }\n}\n\nexport default ChartComponent;\n","import { Button, Switch } from '@material-ui/core';\nimport { purple, yellow } from '@material-ui/core/colors';\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\n\nconst PurpleButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(purple[500]),\n    // backgroundColor: purple[500],\n    backgroundColor: 'rgba(89, 32, 146, 0.37)',\n    '&:hover': {\n      // color: theme.palette.getContrastText(purple[500]),\n      backgroundColor: purple[700],\n    },\n  },\n}))(Button);\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: yellow[300],\n    '&$checked': {\n      color: purple[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nexport {PurpleButton, PurpleSwitch};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useSnackbar } from 'notistack';\nimport {PurpleButton, PurpleSwitch} from './PurpleComponent';\n//@ 5 params\n//? ------- props -----------------------------\n//? {\n//?     onAlert = 조건문.\n//?     severity = [error, warning, info, success]\n//?     message = \"스낵메세지\"\n//?     label = \"버튼라벨\"\n//?     class = ex \"btn btn-warning\"\n//?     onClick = ...\n//? }\n//? -------------------------------------------\n\n\n\n\nexport function SnackAlertBtn(props) {\n    const { enqueueSnackbar } = useSnackbar();\n\n    const handleClickVariant = (variant) => () => {\n        console.log('btn 수행한다.')\n        props.onClick();\n        // variant could be success, error, warning, info, or default\n        if (props.onAlert) {\n            enqueueSnackbar(props.message, {\n                variant,\n                anchorOrigin: {\n                    vertical: 'top',\n                    horizontal: 'center',\n                },\n                autoHideDuration: 1500,\n            });\n        }\n    };\n\n    return (\n        <>\n            <PurpleButton\n                className={props.class}\n                onClick={handleClickVariant(props.severity)}\n            >\n                {props.label}\n            </PurpleButton>\n\n        </>\n    );\n}\n\n//@ 2 params\n//? ------- props -----------------------------\n//? {\n//?     severity = [error, warning, info, success]\n//?     message = \"스낵메세지\"\n//? }\n//? -------------------------------------------\nlet index = 0;\nexport function SnackAlertFunc(props) {\n    const { enqueueSnackbar } = useSnackbar();\n    // variant could be success, error, warning, info, or default\n    const parseMsg = props.message.split(')')[1];\n    console.log('parse', parseMsg);\n    const callback = () => {\n        enqueueSnackbar(parseMsg, {\n            variant: props.severity,\n            anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'left',\n            },\n            autoHideDuration: 1500,\n            preventDuplicate: true\n        }); \n    }\n    callback();\n    return <></>;\n}","export default __webpack_public_path__ + \"static/media/Buy100.b7403763.wav\";","export default __webpack_public_path__ + \"static/media/Check.d2399758.mp3\";","export default __webpack_public_path__ + \"static/media/BuyConfirm.8bbd476a.wav\";","export default __webpack_public_path__ + \"static/media/BuyDone.232aad2e.wav\";","export default __webpack_public_path__ + \"static/media/CurPrice.fcdab19a.wav\";","export default __webpack_public_path__ + \"static/media/PriceDown.531ab761.wav\";","export default __webpack_public_path__ + \"static/media/Enter.94062091.wav\";","export default __webpack_public_path__ + \"static/media/Error.1319e0cb.mp3\";","export default __webpack_public_path__ + \"static/media/ExEnroll.d0deab16.wav\";","export default __webpack_public_path__ + \"static/media/Nope.584bd4d7.mp3\";","export default __webpack_public_path__ + \"static/media/PriceUp.06e7bdd3.wav\";","export default __webpack_public_path__ + \"static/media/Sell100.03eb4759.wav\";","export default __webpack_public_path__ + \"static/media/Result.2804f351.mp3\";","export default __webpack_public_path__ + \"static/media/Sell0.785ddd00.wav\";","export default __webpack_public_path__ + \"static/media/Sell50.c9655101.wav\";","export default __webpack_public_path__ + \"static/media/VolDown.88b05de6.wav\";","export default __webpack_public_path__ + \"static/media/SellConfirm.6f6bcb16.wav\";","export default __webpack_public_path__ + \"static/media/SellDone.835a7d9b.wav\";","export default __webpack_public_path__ + \"static/media/VolUp.578db9f8.wav\";","import React, { useEffect, useState, useLayoutEffect } from 'react';\nimport {\n    IconButton,\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    makeStyles,\n    withStyles,\n} from '@material-ui/core';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { grey, red } from '@material-ui/core/colors';\nimport { SnackAlertFunc } from './SnackAlert';\nimport { SnackbarProvider } from 'notistack';\n// import {YellowShiningButton} from './ShiningButton';\nimport './ShiningButton.css';\n\n// 음악\n// Effect\n\nimport Buy100 from './audios/effect/Buy100.wav';\nimport BuyConfirm from './audios/effect/BuyConfirm.wav';\nimport BuyDone from './audios/effect/BuyDone.wav';\n\nimport Check from './audios/effect/Check.mp3';\nimport CurPrice from './audios/effect/CurPrice.wav';\nimport Enter from './audios/effect/Enter.wav';\nimport Error_Sound from './audios/effect/Error.mp3';\nimport ExEnroll from './audios/effect/ExEnroll.wav';\n\nimport Nope from './audios/effect/Nope.mp3';\nimport PriceDown from './audios/effect/PriceDown.wav';\nimport PriceUp from './audios/effect/PriceUp.wav';\nimport Result from './audios/effect/Result.mp3';\nimport Sell0 from './audios/effect/Sell0.wav';\nimport Sell50 from './audios/effect/Sell50.wav';\nimport Sell100 from './audios/effect/Sell100.wav';\nimport SellConfirm from './audios/effect/SellConfirm.wav';\nimport SellDone from './audios/effect/SellDone.wav';\nimport VolDown from './audios/effect/VolDown.wav';\nimport VolUp from './audios/effect/VolUp.wav';\n\n// Module\n\n// 음악\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: '#CDD7E0',\n        },\n        '& .MuiInputLabel-root': {\n            color: '#CDD7E0',\n        },\n        '& .MuiInputBase-input': {\n            color: '#CDD7E0',\n            fontFamily: 'NEXON Lv1 Gothic OTF',\n            fontSize: '2.5vw',\n        },\n\n        //   '& .MuiInput-underline:after': {\n        //     borderBottomColor: 'white',\n        //   },\n        //   '& .MuiInput-underline:before': {\n        //     borderBottomColor: 'white',\n        //   },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderColor: 'red',\n            },\n            '&:hover fieldset': {\n                borderColor: 'yellow',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: 'green',\n            },\n        },\n    },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    // button: {\n    //     '& > *': {\n    //         width: '42%',\n    //         // textAlign: 'center',\n    //         margin: theme.spacing(1),\n    //     },\n    // },\n    paper: {\n        // padding: theme.spacing(1),\n        // textAlign: 'left',\n        color: '#CDD7E0',\n        backgroundColor: '#0C151C',\n    },\n\n    input: {\n        // textAlign: 'left',\n        color: '#CDD7E0',\n    },\n\n    // button_block: {\n    //     width: '1vh',\n    //     margin: '0 0 0.5vh 0',\n    // },\n    small_text: {\n        margin: '0 0.5vw -0.5vh 0.5vw',\n        fontSize: '1vw',\n    },\n}));\n\nfunction ArrowButton(props) {\n    const classes = useStyles();\n    const [stock, setStock] = useState(null);\n    const [tmpStock, setTmpStock] = useState(0);\n    const [diffrence, setDiffrence] = useState(0);\n\n    function PlusArrow(props) {\n        setDiffrence(diffrence + 1);\n        return setTmpStock(tmpStock + 1);\n    }\n\n    function MinusArrow(props) {\n        setDiffrence(diffrence - 1);\n        return setTmpStock(tmpStock - 1);\n    }\n\n    return (\n        <Grid\n            className={classes.button_block}\n            display=\"flex\"\n            justify=\"center\"\n            style={{ height: '100%' }}\n        >\n            <IconButton\n                aria-label=\"delete\"\n                className={classes.button_block}\n                size=\"small\"\n                onClick={props.upEvent}\n            >\n                <ArrowDropUpIcon />\n            </IconButton>\n            <IconButton\n                aria-label=\"delete\"\n                className={classes.button_block}\n                size=\"small\"\n                onClick={props.downEvent}\n            >\n                <ArrowDropDownIcon />\n            </IconButton>\n        </Grid>\n    );\n}\n\nlet startTime = null;\n\nexport default function TradeStock(props) {\n    const classes = useStyles();\n    const [currentBid, SetBid] = useState(0);\n    const [newBid, SetNewBid] = useState(0); //props.APIdata.curPrice\n    const [currentVolume, SetVolume] = useState(1);\n    const [newVolume, SetNewVolume] = useState(1);\n    const [unitBid, SetUnit] = useState(0); // props.APIdata.priceUnit\n    const [isBind, SetBind] = useState(false);\n    const [isFocus, SetFocus] = useState(false);\n    const [sellStatus, setSellStatus] = useState({\n        status: '',\n        val: 0,\n        vol: 0,\n    });\n    const [buyStatus, setBuyStatus] = useState({\n        status: '',\n        val: 0,\n        vol: 0,\n    });\n    const [myWallet, setWallet] = useState({\n        myCash: 0,\n        myAsset: 0,\n        myCoin: 0,\n    });\n    const [isInit, setInit] = useState(false);\n\n    if (!isBind) SetBind(true);\n    if (!isInit) setInit(true);\n    //@ 가정 => props에 socket이 전달되었어야함.\n    useLayoutEffect(() => {\n        startTime = new Date();\n        if (props.socket == null) {\n            // props.requestSocket('MyAsset', props.socket);\n            // setInit(true);\n        } else {\n            props.socket.on('refreshWallet', (data) => {\n                //@ buyreq\n                const currentCash = data.cash;\n                const currentAsset = data.asset;\n                const currentCoin = data.coinVol;\n                setWallet({\n                    myCash: currentCash,\n                    myAsset: currentAsset,\n                    myCoin: currentCoin,\n                });\n            });\n        }\n    }, [isInit]);\n\n    function VolumeUp(volume) {\n        // if (\n        //     volume + Math.floor((myWallet.myCash / currentBid) * 0.1) >\n        //     Math.floor(myWallet.myCash / currentBid)\n        // )\n        //     return;555\n        SetNewVolume(volume + Math.floor((myWallet.myCash / currentBid) * 0.1));\n    }\n    function VolumeDown(volume) {\n        if (volume - Math.floor((myWallet.myCash / currentBid) * 0.1) <= 0) {\n            SetNewVolume(1);\n            return;\n        }\n        SetNewVolume(\n            volume - Math.floor((myWallet.myCash / currentBid) * 0.1 + 1)\n        );\n    }\n    function BidUp() {\n        console.log('hi');\n        SetBid(Number(currentBid) + Number(unitBid));\n    }\n    function BidDown() {\n        SetBid(Number(currentBid) - Number(unitBid));\n    }\n\n    function RefreshBid_Req() {\n        props.socket.emit('RefreshBid_Req');\n        props.socket.once('RefreshBid_Res', (curPrice) => {\n            console.log('RefreshBid_Req');\n            SetBid(curPrice);\n        });\n    }\n\n    // function RefreshBid_Res() {\n    //     props.socket.once('RefreshBid_Res', (curPrice) => {\n    //         SetBid(curPrice);\n    //     });\n    // }\n\n    function Buy(bid, volume) {\n        let status = '';\n        if (bid <= 0 || volume <= 0) {\n            return {\n                status: 'invalid',\n                val: bid,\n                vol: volume,\n            };\n        }\n        if (bid * volume > myWallet.myCash) {\n            // SnackAlertFunc({\n            //     severity:\"error\",\n            //     message:\"호가 및 수량이 부적절합니다. (ex. '0') 😱\"\n            // })\n            props.socket.once('buyDone', (bbid) => {\n                SetNewBid(bbid.price);\n            });\n            return {\n                status: 'lack',\n                val: bid,\n                vol: volume,\n            };\n        }\n        status = {\n            status: 'request',\n            val: bid,\n            vol: volume,\n        };\n        props.socket.emit('buy_Req', {\n            //@ reqJson.json 형식확인\n            roomID: props.roomID,\n            socketID: props.socket.id,\n            currentBid: bid,\n            currentVolume: volume,\n        });\n        props.socket.once('buyDone', (bbid) => {\n            console.log(bbid);\n            SetNewBid(bbid.price);\n            setBuyStatus({\n                status: 'done',\n                val: bid,\n                vol: volume,\n            });\n        });\n        SetBind(true);\n        return status;\n    }\n\n    function Sell(bid, volume) {\n        let status = '';\n        if (bid <= 0 || volume <= 0) {\n            return {\n                status: 'invalid',\n                val: bid,\n                vol: volume,\n            };\n        }\n        if (myWallet.myCoin < volume) {\n            props.socket.once('sellDone', (bbid) => {\n                SetNewBid(bbid.price);\n            });\n            return {\n                status: 'lack',\n                val: bid,\n                vol: volume,\n            };\n        }\n        status = {\n            status: 'request',\n            val: bid,\n            vol: volume,\n        };\n        props.socket.emit('sell_Req', {\n            roomID: props.roomID,\n            socketID: props.socket.id,\n            currentBid: bid,\n            currentVolume: volume,\n        });\n        //@ 중복 문제가 발생한다.\n        props.socket.once('sellDone', (sbid) => {\n            console.log(sbid);\n            SetNewBid(sbid.price);\n            setSellStatus({\n                status: 'done',\n                val: bid,\n                vol: volume,\n            });\n        });\n        SetBind(true);\n        return status;\n    }\n\n    function HandleKeyUp(e) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n        if (props.socket == null || isBind === false) {\n            // props.requestSocket('TradeStock', props.socket);\n            // return;\n        }\n        if (e.keyCode === 32) {\n            let tmpAudio = new Audio(CurPrice);\n            tmpAudio.play();\n            tmpAudio.remove();\n            RefreshBid_Req();\n        } else if (e.keyCode === 37) {\n            //_ LEFT ARROW\n            let tmpAudio = new Audio(VolDown);\n            tmpAudio.play();\n            tmpAudio.remove();\n            VolumeDown(currentVolume);\n        } else if (e.keyCode === 39) {\n            //_ RIGHT ARROW\n            let tmpAudio = new Audio(VolUp);\n            tmpAudio.play();\n            tmpAudio.remove();\n            VolumeUp(currentVolume);\n        } else if (e.keyCode === 38) {\n            //_ UP ARROW\n            let tmpAudio = new Audio(PriceUp);\n            tmpAudio.play();\n            tmpAudio.remove();\n            BidUp();\n\n            // console.log(e.key);\n            // const key = document.getElementById(e.key);\n            // if (key) key.classList.add(\"pressed\");\n        } else if (e.keyCode === 40) {\n            //_ DOWN ARROW\n            let tmpAudio = new Audio(PriceDown);\n            tmpAudio.play();\n            tmpAudio.remove();\n            BidDown();\n        } else if (e.keyCode === 65) {\n            //_ 'A' :\n            let tmpAudio = new Audio(Buy100);\n            tmpAudio.play();\n            tmpAudio.remove();\n            SetBuyMaxCount();\n        } else if (e.keyCode === 83) {\n            //_ 'S'\n            let tmpAudio = new Audio(Sell100);\n            tmpAudio.play();\n            tmpAudio.remove();\n            SetSellMaxCount();\n        } else if (e.keyCode === 90) {\n            //_ 'Z'\n            let tmpAudio = new Audio(Check);\n            tmpAudio.play();\n            tmpAudio.remove();\n            setBuyStatus(Buy(currentBid, currentVolume));\n        } else if (e.keyCode === 88) {\n            //_ 'X'\n            let tmpAudio = new Audio(Check);\n            tmpAudio.play();\n            tmpAudio.remove();\n            setSellStatus(Sell(currentBid, currentVolume));\n        }\n        console.log(e);\n        const key = document.getElementById(e.key);\n        // console.log(key);\n        if (key) key.classList.add('pressed');\n        console.log(key);\n    }\n\n    function HandleKeyDown(e) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n        if (props.socket == null || isBind === false) {\n            // props.requestSocket('TradeStock', props.socket);\n            return;\n        }\n\n        const key = document.getElementById(e.key);\n        if (key) key.classList.remove('pressed');\n        console.log(key);\n    }\n\n    useEffect(() => {\n        props.socket.once('chart', (data) => {\n            // coinName 추가\n            SetUnit(data.priceUnit);\n            SetBid(data.curPrice);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (isFocus === true) {\n            console.log('keydown event not working now!');\n            return;\n        }\n        document.addEventListener('keyup', HandleKeyUp);\n        document.addEventListener('keydown', HandleKeyDown);\n        return () => {\n            document.removeEventListener('keyup', HandleKeyUp);\n            document.removeEventListener('keydown', HandleKeyDown);\n        };\n    });\n\n    //@ socket을 통해 정보가 변했음을 알고 render이전에 호가를 갱신해야할 필요가 있다.\n    useEffect(() => {\n        const responseBid = newBid;\n        SetBid(responseBid);\n    }, [newBid]); //@ 호가가 변할때이다.\n\n    useEffect(() => {\n        const responseVolume = newVolume;\n        SetVolume(responseVolume);\n        return () => {};\n    }, [newVolume]);\n\n    useEffect(() => {\n        console.log(sellStatus, 'sellStatus');\n        if (sellStatus !== null) setSellStatus(null);\n    }, [sellStatus]);\n\n    useEffect(() => {\n        console.log(buyStatus, 'buy');\n        if (buyStatus !== null) setBuyStatus(null);\n    }, [buyStatus]);\n\n    function handleVolumeChange(e) {\n        if (e.target.id === 'outlined-required') {\n            SetVolume(e.target.value);\n            SetFocus(true);\n        }\n    }\n    function handleBidChange(e) {\n        if (e.target.id === 'outlined-required') {\n            SetBid(e.target.value);\n            SetFocus(true);\n        }\n    }\n\n    let costColor = {\n        color:\n            myWallet.myCash >= currentBid * currentVolume\n                ? grey[700]\n                : red[200],\n    };\n\n    function SetSellMaxCount() {\n        SetVolume(myWallet.myCoin);\n    }\n\n    function SetBuyMaxCount() {\n        SetVolume(Math.floor(myWallet.myCash / currentBid));\n    }\n\n    function SplitByThree(value) {\n        if (!value) return 'Something wrong.';\n        if (value.length <= 3) return value;\n        return (\n            SplitByThree(value.substring(0, value.length - 3)) +\n            ',' +\n            value.substring(value.length - 3, value.length)\n        );\n    }\n\n    const parseWonToStr = (won) => {\n        if (typeof won == 'number') won = won.toString();\n        return won;\n    };\n\n    function ExpBySymbol(value) {\n        // console.log(value);\n        if (!value) return 'Something wrong.';\n        let ret = '';\n        if (value.length >= 9) {\n            // 199489230 -> 1억 9948만 9230\n            ret += value.substring(0, value.length - 9 + 1) + '억 '; // 1억\n            value = value.substring(value.length - 9 + 1);\n        }\n        if (value.length >= 5) {\n            // value 99489230\n            ret += value.substring(0, value.length - 5 + 1) + '만 '; // 9948만\n            value = value.substring(value.length - 5 + 1);\n        }\n        ret += value;\n        return ret + '원';\n    }\n\n    let dateString = new Date();\n    dateString =\n        '(' +\n        dateString.getMinutes() +\n        ':' +\n        dateString.getSeconds() +\n        '.' +\n        dateString.getMilliseconds() +\n        ') ';\n\n    return (\n        <>\n            <SnackbarProvider maxSnack={15}>\n                {buyStatus && buyStatus.status === 'lack' && (\n                    <SnackAlertFunc\n                        severity=\"warning\"\n                        message={dateString + ' 보유 금액이 부족해요 😨'}\n                    />\n                )}\n                {buyStatus && buyStatus.status === 'invalid' && (\n                    <SnackAlertFunc\n                        severity=\"error\"\n                        message={dateString + ' 유효하지 않은 값입니다.'}\n                    />\n                )}\n                {buyStatus && buyStatus.status === 'request' && (\n                    <SnackAlertFunc\n                        severity=\"info\"\n                        message={\n                            dateString +\n                            buyStatus.val +\n                            ' 호가에 ' +\n                            buyStatus.vol +\n                            '개 [매수] 주문했어요! 📈'\n                        }\n                    />\n                )}\n                {buyStatus && buyStatus.status === 'done' && (\n                    <SnackAlertFunc\n                        severity=\"success\"\n                        message={\n                            dateString +\n                            buyStatus.val +\n                            ',' +\n                            buyStatus.vol +\n                            ' [매수] 주문이 체결되었어요! 🎁'\n                        }\n                    />\n                )}\n                {sellStatus && sellStatus.status === 'lack' && (\n                    <SnackAlertFunc\n                        severity=\"warning\"\n                        message={dateString + '코인이 없는걸요? 😨'}\n                    />\n                )}\n                {sellStatus && sellStatus.status === 'invalid' && (\n                    <SnackAlertFunc\n                        severity=\"error\"\n                        message={dateString + '유효하지 않은 값입니다.'}\n                    />\n                )}\n                {sellStatus && sellStatus.status === 'request' && (\n                    <SnackAlertFunc\n                        severity=\"info\"\n                        message={\n                            dateString +\n                            sellStatus.val +\n                            ' 호가에 ' +\n                            sellStatus.vol +\n                            '개 [매도] 주문했어요! 📉'\n                        }\n                    />\n                )}\n                {sellStatus && sellStatus.status === 'done' && (\n                    <SnackAlertFunc\n                        severity=\"success\"\n                        message={\n                            dateString +\n                            sellStatus.val +\n                            ',' +\n                            sellStatus.vol +\n                            ' [매도] 주문이 체결되었어요! 💸'\n                        }\n                    />\n                )}\n            </SnackbarProvider>\n            <Grid\n                wrap=\"wrap\"\n                className={classes.paper}\n                alignItems=\"stretch\"\n                container\n                direction=\"column\"\n                alignItems=\"flex-start\"\n                style={{ height: '100%', fontSize: '2vh' }}\n            >\n                <Grid container item direction=\"row\" justify=\"space-between\">\n                    <span  className={classes.small_text}>매매호가</span>\n                    {/* <span  className={classes.small_text}>현재가 [SPACE]</span> */}\n\n                </Grid>\n                <Grid\n                    container\n                    item\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"flex-end\"\n                    style={{margin:'0 0 0.5vh 0'}}\n                >\n                    <Button\n                        class=\"pulse\"\n                        onClick={() => {\n                            new Audio(PriceUp).play();\n                            BidUp();\n                        }}\n                        id=\"ArrowUp\"\n                    >\n                        ▲\n                    </Button>\n                    <CssTextField\n                        className={classes.input}\n                        id=\"custom-css-standard-input\"\n                        // label=\"매매 호가 ▲ ▼\"\n                        size=\"small\"\n                        // type=\"number\"\n                        style={{ width: '50%' }}\n                        value={currentBid}\n                        onChange={handleBidChange}\n                    />\n                    <Button\n                        class=\"pulse\"\n                        onClick={() => {\n                            new Audio(PriceDown).play();\n                            BidDown();\n                        }}\n                        id=\"ArrowDown\"\n                    >\n                        ▼\n                    </Button>\n                </Grid>\n                <span className={classes.small_text}>수량</span>\n                <Grid\n                    container\n                    item\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"flex-end\"\n                    style={{margin:'0 0 0.5vh 0'}}\n                >\n                    <Button\n                        class=\"pulse\"\n                        onClick={() => {\n                            new Audio(VolDown).play();\n                            VolumeDown(currentVolume);\n                        }}\n                        id=\"ArrowLeft\"\n                    >\n                        ◀\n                    </Button>\n                    <CssTextField\n                        className=\"count\"\n                        id=\"outlined-required\"\n                        style={{ width: '50%', fontSize: 20 }}\n                        value={currentVolume}\n                        onChange={handleVolumeChange}\n                    />\n                    <Button\n                        class=\"pulse\"\n                        onClick={() => {\n                            new Audio(VolUp).play();\n                            VolumeUp(currentVolume);\n                        }}\n                        id=\"ArrowRight\"\n                    >\n                        ▶\n                    </Button>\n                </Grid>\n                {/* <Grid container item justify=\"center\" alignItems=\"start\">\n                    예상소요금액 :{' '}\n                    <span style={costColor}>\n                        {ExpBySymbol(parseWonToStr(currentVolume * currentBid))}\n                    </span>\n                </Grid> */}\n                <Grid\n                    container\n                    item\n                    direction={'column'}\n                    justify=\"center\"\n                    style={{ width: '100%', margin: '0 10 0 1' }}\n                >\n                    <Grid\n                        container\n                        direction={'row'}\n                        justify=\"space-between\"\n                        style={{ width: '100%', margin: '0 10 0 1' }}\n                    >\n                        <Button\n                            style={{ width: '45%' }}\n                            class=\"pulse\"\n                            onClick={() => {\n                                new Audio(Buy100).play();\n                                SetBuyMaxCount();\n                                // setBuyStatus(Buy(currentBid, currentVolume));\n                            }}\n                            id=\"a\"\n                        >\n                            [A] 매수 MAX\n                        </Button>\n                        <Button\n                            style={{ width: '45%' }}\n                            class=\"pulse\"\n                            onClick={() => {\n                                new Audio(Sell100).play();\n                                SetSellMaxCount();\n                                // setSellStatus(Sell(currentBid, currentVolume));\n                            }}\n                            id=\"s\"\n                        >\n                            {/* <KeyboardArrowRightIcon /> */}\n                            [S] 매도 MAX\n                        </Button>\n                    </Grid>\n                    <Grid\n                        container\n                        direction={'row'}\n                        justify=\"space-between\"\n                        style={{ width: '100%', margin: '0 10 0 1' }}\n                    >\n                        <Button\n                            style={{ width: '45%' }}\n                            class=\"pulse\"\n                            onClick={() => {\n                                new Audio(Check).play();\n                                setBuyStatus(Buy(currentBid, currentVolume));\n                            }}\n                            id=\"z\"\n                        >\n                            [Z] 매수\n                        </Button>\n                        <Button\n                            style={{ width: '45%' }}\n                            class=\"pulse\"\n                            onClick={() => {\n                                new Audio(Check).play();\n                                setSellStatus(Sell(currentBid, currentVolume));\n                            }}\n                            id=\"x\"\n                        >\n                            {/* <KeyboardArrowRightIcon /> */}\n                            [X] 매도\n                        </Button>\n                    </Grid>\n                    <Grid\n                        container\n                        direction={'row'}\n                        justify=\"space-between\"\n                        style={{ width: '100%', margin: '0 10 0 1' }}\n                    >\n                        <Button\n                            style={{ width: '100%' }}\n                            class=\"pulse\"\n                            onClick={() => {\n                                new Audio(CurPrice).play();\n                                RefreshBid_Req(); \n                            }}\n                            id=\" \"\n                        >\n                            [SPACE] 현재가로 갱신\n                        </Button>\n                    </Grid>\n                    {/* <Button\n                        variant=\"contained\"\n                        color=\"info\"\n                        onClick={() => RefreshBid_Req()}\n                    >\n                        [D] 현재가 설정🔄\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"info\"\n                        onClick={() => SetSellMaxCount()}\n                    >\n                        [Z] 최대 구매량 설정 📈\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"info\"\n                        onClick={() => SetBuyMaxCount()}\n                    >\n                        [X] 최대 매도량 설정 📉\n                    </Button> */}\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n","import React, { useEffect, useState, makeStyle, useLayoutEffect } from 'react';\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    makeStyles,\n    TextareaAutosize,\n} from '@material-ui/core';\nimport { propTypes } from 'react-bootstrap/esm/Image';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    button: {\n        '& > *': {\n            width: '100%',\n            justify: 'center',\n        },\n    },\n    button2: {\n        '& > *': {\n            width: '45%',\n            // margin: theme.spacing(1),\n            justify: 'space-between',\n        },\n    },\n    paper: {\n        // padding: theme.spacing(1),\n        textAlign: 'left',\n        color: '#CDD7E0',\n        backgroundColor: '#0C151C',\n    },\n}));\nexport default function MyAsset(props) {\n    let testXs = 12;\n    const classes = useStyles();\n    const [myCash, setCash] = useState(0);\n    const [myAsset, setAsset] = useState(0);\n    const [myCoin, setCoin] = useState(0);\n    const [myWallet, setWallet] = useState({\n        myCash: 0,\n        myAsset: 0,\n        myCoin: 0,\n        myAvg: 0,\n    });\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n    //@ 가정 => props에 socket이 전달되었어야함.\n    useLayoutEffect(() => {\n        if (props.socket == null) {\n            // props.requestSocket('MyAsset', props.socket);\n            // setInit(true);\n        } else {\n            props.socket.on('refreshWallet', (data) => {\n                //@ buyreq\n                // console.log(data.type + '으로 인해서 발생함.');\n                const currentCash = data.cash;\n                const currentAsset = data.asset;\n                const currentCoin = data.coinVol;\n                const currentAvg = data.avgPrice;\n                setWallet({\n                    myCash: currentCash,\n                    myAsset: currentAsset,\n                    myCoin: currentCoin,\n                    myAvg: currentAvg,\n                });\n            });\n        }\n    }, [isInit]);\n\n    function SplitByThree(value) {\n        if (!value) return 'Something wrong.';\n        if (value.length <= 3) return value;\n        return (\n            SplitByThree(value.substring(0, value.length - 3)) +\n            ',' +\n            value.substring(value.length - 3, value.length)\n        );\n    }\n\n    const parseWonToStr = (won) => {\n        if (typeof won == 'number') won = won.toString();\n        return won;\n    };\n\n    function ExpBySymbol(value) {\n        // console.log(value);\n        if (!value) return 'Something wrong.';\n        let ret = '';\n        if (value.length >= 9) {\n            // 199489230 -> 1억 9948만 9230\n            ret += value.substring(0, value.length - 9 + 1) + '억 '; // 1억\n            value = value.substring(value.length - 9 + 1);\n        }\n        if (value.length >= 5) {\n            // value 99489230\n            ret += value.substring(0, value.length - 5 + 1) + '만 '; // 9948만\n            value = value.substring(value.length - 5 + 1);\n        }\n        ret += value;\n        return ret + '원';\n    }\n\n    return (\n        <>\n            <Grid\n                container\n                item\n                direction=\"row\"\n                alignItems=\"flex-start\"\n                wrap=\"wrap\"\n                justify=\"stretch\"\n                // display=\"flex\"\n            >\n                <Grid\n                    style={{\n                        width: '60%',\n                        height: '100%'\n                    }}\n                    item\n                >\n                    <Paper className={classes.paper} style={{ height: '100%', fontSize: '1vw' }}>\n                        보유 현금 (KRW)\n                        {/* <h4>\n                            {SplitByThree(parseWonToStr(myWallet.myCash)) +\n                                ' 원'}\n                        </h4> */}\n                        <h5 style={{ fontWeight: 'bold', fontSize: '1.2vw'  }}>\n                            {ExpBySymbol(parseWonToStr(myWallet.myCash))}\n                        </h5>\n                    </Paper>\n                </Grid>\n                <Grid\n                    item\n                    style={{ width: '40%',height: '100%'}}\n                >\n                    <Paper className={classes.paper}  style={{ height: '100%', fontSize: '1vw'  }}>\n                        보유 코인 수 (개)<h3  style={{ height: '100%', fontSize: '1.5vw'  }}>{myWallet.myCoin}</h3>\n                        {/* 평균매입단가<h6>{myWallet.myAvg}</h6> */}\n                    </Paper>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                item\n                justify=\"flex-start\"\n                wrap=\"wrap\"\n                alignItems=\"stretch\"\n                display=\"flex\"\n            >\n                <Grid item style={{ width: '100%', height: '100%' }}>\n                    <Paper className={classes.paper} style={{ height: '100%',fontSize: '1.5vw' }}>\n                        총 평가 자산 (KRW)\n                        {/* <h2 style={{ fontStyle: 'italic', fontWeight: 'bold' }}>\n                            {SplitByThree(parseWonToStr(myWallet.myAsset)) +\n                                ' 원'}\n                        </h2> */}\n                        <h2 style={{ fontWeight: 'bold', fontSize: '2.2vw' }}>\n                            {ExpBySymbol(parseWonToStr(myWallet.myAsset))}\n                        </h2>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n","import { useEffect } from 'react';\nimport { Howl } from 'howler';\n\n// 배경음 재생\nfunction useSound(src, volume = 1, fadeoutTime = 0, signal) {\n    let sound = new Howl({ src });\n\n    const soundStop = () => sound.stop();\n    const soundPlay = (src) => {\n        sound = new Howl({ src });\n        sound.volume(volume);\n        sound.play();\n    };\n\n    useEffect(() => {\n        soundStop();\n        if (signal) {\n            soundPlay(src);\n            console.log('useSound Played.')\n            sound.on('play', () => {\n                const fadeouttime = fadeoutTime;\n                setTimeout(\n                    () => sound.fade(volume, 0, fadeouttime),\n                    (sound.duration() - sound.seek()) * 1000 - fadeouttime\n                );\n            });\n            return soundStop;\n        }\n    }, [signal]);\n}\n\n// 효과음 재생\nfunction playSound(src, volume = 1) {\n    let sound;\n    const soundInject = (src) => {\n        sound = new Howl({ src });\n        sound.volume(volume);\n    };\n    soundInject(src);\n    return sound;\n}\n\nvar getDuration = function (src) {\n    var howl = new Howl({ src });\n    return new Promise(function (resolve, reject) {\n        howl.on('load', function () {\n            let time = howl.duration();\n            resolve(time);\n        });\n    });\n};\n\nexport { useSound, playSound, getDuration };\n","import { Grid, GridList } from '@material-ui/core';\nimport { blue, red } from '@material-ui/core/colors';\nimport React, { useEffect, useState, useLayoutEffect, useRef } from 'react';\nimport { useSound, playSound } from './useSound';\n\nconst defaultTextStyle = {\n    color: '#444444',\n};\nconst highlightTextStyle = {\n    color: 'white',\n    fontWeight: 'bold',\n};\n\nexport default function StockDoneList(props) {\n    // socket ,  type (me , others), socket\n    const [doneItem, setItem] = useState(null);\n    const [doneList, setList] = useState([]);\n\n\n    useEffect(() => {\n        if (props.socket == null) {\n            // props.requestSocket('StockDoneList', props.socket);\n        } else {\n            if (!props.isMine) {\n                props.socket.on('buyDone_Room', (done) => {\n                    setItem(done);\n                });\n                props.socket.on('sellDone_Room', (done) => {\n                    setItem(done);\n                });\n                props.socket.on('bidDone_Room', (done) => {\n                    setItem(done);\n                });\n                props.socket.on('askDone_Room', (done) => {\n                    setItem(done);\n                });\n            } else {\n                props.socket.on('buyDone', (done) => {\n                    if (done.type === '매수 완료') {\n                        // playSound(Check, 1).play();\n                    } else if (done.type === '매수 주문 체결') {\n                        // playSound(BidSound, 1).play();\n                    }\n                    setItem(done);\n                });\n                props.socket.on('sellDone', (done) => {\n                    if (done.type === '매도 완료') {\n                        // playSound(Check, 1).play();\n                    } else if (done.type === '매도 주문 체결') {\n                        // playSound(AskSound, 1).play();\n                    }\n                    setItem(done);\n                });\n                props.socket.on('bidDone', (done) => {\n                    setItem(done);\n                });\n                props.socket.on('askDone', (done) => {\n                    setItem(done);\n                });\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        if (doneList.length >= 5) doneList.shift();\n        setList([...doneList, doneItem]);\n    }, [doneItem]);\n\n    return (\n        <div style={{height: '100%'}}>\n                {doneList.map((done, idx) => {\n                    if (done === null) return <></>;\n                    let buySellColor = {\n                        color:\n                            done.type.substring(0, 2) === '매수'\n                                ? done.type.substring(3, 5) === '완료' ||\n                                  done.type.substring(6, 8) === '체결'\n                                    ? red[500]\n                                    : red[300]\n                                : done.type.substring(3, 5) === '완료' ||\n                                  done.type.substring(6, 8) === '체결'\n                                ? blue[500]\n                                : blue[300],\n                        fontWeight:\n                            done.type.substring(3, 5) === '완료' ||\n                            done.type.substring(6, 8) === '체결'\n                                ? 'bold'\n                                : 'normal',\n                    };\n                    return (\n                    <Grid style={{fontSize: '1.05vw'}}>\n\n                        <pre style={defaultTextStyle} key={idx}>\n                            <span style={highlightTextStyle}>\n                                {props.isMine ? '' : done.playerID}\n                            </span>\n                            {props.isMine ? '' : '님이 '}\n                            <span style={highlightTextStyle}>{done.price}</span>\n                            원에{' '}\n                            <span style={highlightTextStyle}>{done.vol}</span>\n                            개를 <span style={buySellColor}>{done.type}.</span>\n                        </pre>\n                    </Grid>\n                    );})}\n        </div>\n    );\n}\n","import React, {\n    useState,\n    useRef,\n    useEffect,\n    makeStyle,\n    useLayoutEffect,\n} from 'react';\nimport {\n    IconButton,\n    Button,\n    Box,\n    TextField,\n    Grid,\n    Paper,\n    withStyles,\n    makeStyles,\n    GridList,\n} from '@material-ui/core';\nimport Message from './Message';\nimport StockDoneList from './StockDoneList';\n\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: '#CDD7E0',\n        },\n        '& .MuiInputLabel-root': {\n            color: '#CDD7E0',\n            fontSize: '0.8vw',\n        },\n        '& .MuiInputBase-input': {\n            color: '#CDD7E0',\n            fontSize: '0.9vw',\n        },\n        '& .MuiInputBase-formControl': {\n            color: '#CDD7E0',\n            fontSize: '0.9vw',\n            height: '100%',\n        },\n        //   '& .MuiInput-underline:after': {\n        //     borderBottomColor: 'white',\n        //   },\n        //   '& .MuiInput-underline:before': {\n        //     borderBottomColor: 'white',\n        //   },\n        '& .MuiOutlinedInput-root': {\n            '& .MuiInputBase-input': {\n                color: '#CDD7E0',\n            },\n            '& .MuiInputLabel-root': {\n                color: '#CDD7E0',\n                fontStyle: 'italic',\n            },\n            '& fieldset': {\n                borderColor: '#2D4053',\n            },\n            '&:hover fieldset': {\n                borderColor: 'white',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: '#635ee7',\n            },\n        },\n    },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    button: {\n        '& > *': {\n            // margin: theme.spacing(1),\n            width: '100%',\n            // float: 'auto',\n            // height: \"50%\"\n        },\n    },\n    button2: {\n        '& > *': {\n            // width: '45%',\n            // margin: theme.spacing(1),\n            justify: 'space-between',\n        },\n    },\n    paper: {\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function ChatRoom(props) {\n    // console.log(props.socket);\n    let testXs = 12;\n    const classes = useStyles();\n    const [message, setMessage] = useState(''); // 보낼 때의 메시지자체만 저장\n    const [resMsg, setResMsg] = useState('');\n    const [messages, setMessages] = useState(\n        // author와 쌍으로 저장된 메시지\n        [\n            {\n                author: 'SERVER',\n                message: '게임이 시작됩니다.',\n            },\n        ]\n    );\n    const messagesEnd = React.useRef(null);\n    const [isChanged, setChanged] = useState(true);\n    let textInput = useRef(null);\n    const scrollToBottom = () => {\n        messagesEnd.current.scrollIntoView();\n    };\n\n    useEffect(() => {\n        if (messages.length >= 15) messages.shift();\n        setMessages([...messages, resMsg]);\n        scrollToBottom();\n    }, [resMsg]);\n\n    useEffect(() => {\n        props.socket.on('update', (data) => {\n            if (data) {\n                setResMsg(data);\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        document.addEventListener('keyup', HandleKeyUp);\n        return () => {\n            document.removeEventListener('keyup', HandleKeyUp);\n        };\n    });\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n\n    // const socket_on = (async() => {\n    //     await props.socket.on('update', (data) => {\n    //         if (data) {\n    //             console.log('update 3', messages);\n    //             addMessage(data);\n    //         }\n    //     })\n    // })()\n    //\n    const handleOnChange = (event) => {\n        setMessage(event.target.value);\n    };\n\n    const sendMessage = () => {\n        if (textInput.current.value) {\n            // ev.preventDefault();\n            textInput.current.value = '';\n            // author: this.state.author,\n            // console.log(message);\n            props.socket.emit('message', {\n                message: message,\n                author: props.roomInfo[props.socket.id]['playerID'],\n                roomID: props.roomID,\n            });\n            setMessage('');\n        }\n    };\n    // * 서버에서 받아온 채팅메시지를 채팅창에 씀\n\n    const addMessage = (data) => {\n        // setMessages({ messages: [...messages, data['message']] });\n        const new_messages = [...messages, data];\n        setMessages(new_messages);\n    };\n\n    let isFocus = false;\n\n    function HandleKeyUp(e) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27) return; //_ 'F12' || 'esc'\n        e.preventDefault();\n        // if (props.socket == null || isBind === false) {\n        //     props.requestSocket('TradeStock', props.socket);\n        //     return;\n        // }\n        if (e.keyCode === 13) {\n            //_ Enter\n            if (document.activeElement !== textInput.current) {\n                textInput.current.focus();\n            } else if (textInput.current.value === '') {\n                textInput.current.blur();\n            } else {\n                sendMessage();\n            }\n        }\n    }\n\n    function PrintMessage() {\n        return <></>;\n    }\n\n    return (\n        <>\n            {/* <Grid\n            container\n            className={classes.button}\n            direction={'row'}\n            justify={'space-between'}\n            wrap={'nowrap'}\n            \n        > */}\n            <GridList style={{ width: '100%', height: '90%' }} wrap={'wrap'}>\n                <Grid\n                    container\n                    direction={'column'}\n                    justify={'flex-start'}\n                    alignItems={'stretch'}\n                    style={{ width: '100%', height: '100%' }}\n                >\n                    {messages.map((message) => {\n                        console.log(messages);\n                        if (message === '') return;\n                        return (\n                            <Grid\n                                item\n                                style={{\n                                    color: 'white',\n                                    width: '100%',\n                                    padding: '1vh 0 0 0 ',\n                                    fontSize: '0.8vw',\n                                }}\n                            >\n                                {message.author} : {message.message}\n                            </Grid>\n                        );\n                    })}\n                    <GridList\n                        id =\"whaitisthis\" \n                        style={{ float: 'left', clear: 'both', height: '0%' }}\n                        ref={messagesEnd}\n                    ></GridList>\n                </Grid>\n            </GridList>\n            <Grid\n                item\n                container\n                dirction=\"row\"\n                style={{ width: '100%', height: '10%' }}\n            >\n                <Grid item style={{ width: '80%', height: '100%' }}>\n                    <CssTextField\n                        style={{ width: '100%', height: '100%' }}\n                        id=\"standard-basic\"\n                        placeholder=\"메세지 보내기\"\n                        inputRef={textInput}\n                        onFocus={() => {\n                            isFocus = true;\n                            props.SetInputCtrl(true);\n                        }}\n                        onBlur={() => {\n                            isFocus = false;\n                            props.SetInputCtrl(false);\n                        }}\n                        onChange={handleOnChange}\n                        variant=\"outlined\"\n                        autoFocus={true}\n                        // size=\"small\"\n                        inputProps={{ 'aria-label': 'description',maxlength: 20 }}\n                    />\n                </Grid>\n                <Grid item style={{ width: '20%', height: '100%' }}>\n                    <button\n                        style={{\n                            margin:'0',\n                            width: '100%',\n                            height: '100%',\n                            backgroundColor: '#635ee7',\n                            fontSize: '0.9vw',\n                            color: 'white',\n                        }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                            sendMessage();\n                        }}\n                        label=\"전송\"\n                    >\n                        전송\n                    </button>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\n// export default function AlignItems() {\n//     return (\n//       <div style={{ width: '100%' }}>\n//         <Box\n//           display=\"flex\"\n//           alignItems=\"flex-end\"\n//           p={1}\n//           m={1}\n//           bgcolor=\"background.paper\"\n//           css={{ height: 100 }}\n//         >\n//           <Box p={1} bgcolor=\"grey.300\">\n//             Item 1\n//           </Box>\n//         </Box>\n//       </div>\n//     );\n//   }\n","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport {\n    IconButton,\n    Button,\n    Box,\n    TextField,\n    GridList,\n    Grid,\n    Paper,\n    makeStyles,\n} from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        // padding: theme.spacing(1),\n        textAlign: 'left',\n        color: '#CDD7E0',\n        backgroundColor: '#0C151C',\n    },\n    score: {},\n}));\n\nfunction MakePlayerPaper(props) {\n    const classes = useStyles(greenTheme);\n\n    return (\n        <Paper style={{ height: '9.8vh' }} className={classes.paper}>\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid style={{ width: '20%', height: '5vh' }} className=\"score\">\n                    {props.index}\n                </Grid>\n                <Grid>\n                    <Grid container direction=\"col\" className=\"score\">\n                        <Grid>{props.player.playerID}</Grid>\n                    </Grid>\n                    <Grid container direction=\"col\" className=\"score\">\n                        <Grid>{props.player.asset}</Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default function PlayerList(props) {\n    const classes = useStyles(greenTheme);\n    const testXs = 12;\n    const [players, setPlayers] = useState([\n        {\n            socketID: 'socketID',\n            playerID: 'playerID',\n            asset: 'asset',\n        },\n    ]);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    useLayoutEffect(() => {\n        if (props.socket == null) {\n            // props.requestSocket('MakePlayerPaper', props.socket);\n            // setInit(true);\n        } else {\n            props.socket.on('roomRank', (playerArray) => {\n                // console.log(playerArray)\n                setPlayers(playerArray);\n            });\n        }\n    }, [isInit]);\n\n    function ExpBySymbol(value) {\n        let ret = '';\n        if (value.length >= 9) {\n            // 199489230 -> 1억 9948만 9230\n            ret += value.substring(0, value.length - 9 + 1) + '억 '; // 1억\n            value = value.substring(value.length - 9 + 1);\n        }\n        if (value.length >= 5) {\n            // value 99489230\n            ret += value.substring(0, value.length - 5 + 1) + '만'; // 9948만\n            value = value.substring(value.length - 5 + 1);\n        }\n        // ret += value;\n        return ret;\n    }\n\n    const parseWonToStr = (won) => {\n        if (typeof won == 'number') won = won.toString();\n        return won;\n    };\n\n    let defaultPage = {\n        playerID: '',\n        asset: '',\n    };\n    const [myRankPage, setMyRankPage] = useState(defaultPage);\n    const [myRank, setMyRank] = useState(null);\n\n    function MyRank() {\n        props.socket.once('MyRank', (myRankPage, myRank) => {\n            setMyRankPage(myRankPage);\n            setMyRank(myRank);\n        });\n        return (\n            <div>\n                <Paper\n                    className={classes.paper}\n                    style={{\n                        height: '90%',\n                        border: 'solid',\n                        borderColor: '#0066bb',\n                        margin: '0 0 10px 0',\n                        boxShadow: '12px 12px 2px 1px #ffffff',\n                    }}\n                >\n                    <Grid container direction=\"row\" alignItems=\"center\">\n                        <Grid\n                            style={{ width: '20%', height: '100%' }}\n                            className=\"score\"\n                        >\n                            {'현재 '}\n                            {myRank}\n                            {'위'}\n                        </Grid>\n                        <Grid\n                            style={{ width: '80%', height: '100%' }}\n                            container\n                            direction=\"column\"\n                            className=\"score\"\n                        >\n                            <Grid alignItems=\"right\">\n                                {myRankPage.playerID}\n                            </Grid>\n                            <Grid alignItems=\"right\">\n                                {ExpBySymbol(parseWonToStr(myRankPage.asset))}원\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            {players.map((player, index) => {\n                if (player.socketID === props.socket.id) {\n                    return (\n                        <div>\n                            <Paper\n                                className={classes.paper}\n                                style={{\n                                    height: '90%',\n                                    border: 'solid',\n                                    borderColor: '#2D4053',\n                                    margin: '0 0 10px 0',\n                                    // boxShadow: '12px 12px 2px 1px #ffffff',\n                                }}\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    alignItems=\"center\"\n                                >\n                                    <Grid\n                                        style={{ fontSize: '1vw', width: '20%', height: '100%' }}\n                                        className=\"score\"\n                                        item\n                                    >\n                                        {index + 1}\n                                        {'위.'}\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        style={{ fontSize: '1vw', width: '80%', height: '100%' }}\n                                        container\n                                        direction=\"column\"\n                                        className=\"score\"\n                                    >\n                                        <Grid alignItems=\"right\">{player.playerID}</Grid>\n                                        <Grid alignItems=\"right\">{player.asset}</Grid>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </div>\n                    );\n                }\n            })}\n\n            <Grid\n                wrap=\"wrap\"\n                container\n                direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"stretch\"\n                spacing={1}\n            >\n                {players.map((player, index) => {\n                    const myColor =\n                        player.socketID === props.socket.id\n                            ? '#2D4053'\n                            : '#0C151C';\n                    const myFont =\n                        player.socketID === props.socket.id ? 'bold' : 'normal';\n                    return (\n                        <Grid item>\n                            <Paper\n                                style={{\n                                    height: '9.8vh',\n                                    backgroundColor: myColor,\n                                    fontWeight: myFont,\n                                }}\n                                className={classes.paper}\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    alignItems=\"center\"\n                                >\n                                    <Grid\n                                        style={{ fontSize: '1vw', width: '20%', height: '100%' }}\n                                        className=\"score\"\n                                    >\n                                        {index + 1}\n                                        {'위'}\n                                    </Grid>\n                                    <Grid\n                                        style={{ fontSize: '1vw', width: '80%', height: '100%' }}\n                                        container\n                                        direction=\"column\"\n                                        className=\"score\"\n                                    >\n                                        <Grid alignItems=\"right\">\n                                            {player.playerID}\n                                        </Grid>\n                                        <Grid alignItems=\"right\">\n                                            {ExpBySymbol(\n                                                parseWonToStr(player.asset)\n                                            )}\n                                            원\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    history,\n    Redirect,\n    useHistory,\n} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        // alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    table: {\n        minWidth: 650,\n    },\n}));\n\nexport default function GameOverModal(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const rows = props.leaderBoard;\n    const [done, setDone] = useState(false);\n\n    const history = useHistory();\n    const BackToLobby = () => {\n        props.socket.emit('backToLobby', props.roomID);\n        props.setLeaderBoard(false);\n        let path = '/lobby';\n        history.push(path);\n        props.lobbyAudio.currentTime = 0;\n        props.lobbyAudio.play();\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    console.log(props.leaderBoard);\n    return (\n        <div>\n            <Modal\n                disablePortal\n                disableEnforceFocus\n                disableAutoFocus\n                disableBackdropClick // backdrop을 클릭해도 modal을 지우지 않는 옵션\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n            >\n                {/* <Fade in={open}> */}\n                    <div container className={classes.paper}>\n                        <h2\n                            id=\"transition-modal-title\"\n                            style={{ textAlign: 'center' }}\n                        >\n                            🌠Game Finished🌠\n                        </h2>\n                        <Grid\n                            container\n                            direction={'column'}\n                            alignItems={'center'}\n                        >\n                            <TableContainer component={Paper}>\n                                <Table\n                                    className={classes.table}\n                                    aria-label=\"simple table\"\n                                >\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Rank</TableCell>\n                                            <TableCell align=\"right\">\n                                                Player ID\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                asset\n                                            </TableCell>\n                                            {/* <TableCell align=\"right\">Fat&nbsp;(g)</TableCell> */}\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {rows.map((row, idx) => (\n                                            <TableRow key={row.playerID}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {idx + 1}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.playerID}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.asset}\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <Button onClick={BackToLobby}>\n                                {' '}\n                                Back to Lobby{' '}\n                            </Button>\n                        </Grid>\n                    </div>\n                {/* </Fade> */}\n            </Modal>\n        </div>\n    );\n}\n","import React, {useEffect}from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Modal, Typography} from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    width: '50vh',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    alignItems: 'center',\n    justifyContent: 'center',\n\n  },\n  typo: {\n    fontSize: '12rem',\n    textAlign: 'center',\n  }\n}));\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n  const { in: open, children, onEnter, onExited, ...other } = props;\n  const style = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: open ? 1 : 0 },\n    onStart: () => {\n      if (open && onEnter) {\n        onEnter();\n      }\n    },\n    onRest: () => {\n      if (!open && onExited) {\n        onExited();\n      }\n    },\n  });\n\n  return (\n    <animated.div ref={ref} style={style} {...other}>\n      {children}\n    </animated.div>\n  );\n});\n\nFade.propTypes = {\n  children: PropTypes.element,\n  in: PropTypes.bool.isRequired,\n  onEnter: PropTypes.func,\n  onExited: PropTypes.func,\n};\n\nexport default function ThreeSecTimer(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [time, setTime] = React.useState(3);\nconst changeTime = () => {\n  if(time > 1) {\n    setTimeout(function(){\n        setTime(time - 1);\n      }, 1000);\n    }\n  };\n    \n  const signal = props.open;\n\n  useEffect(()=>{\n    changeTime();\n  },[time]);\n  \n  useEffect(()=>{\n    setOpen(signal); \n  },[signal]);\n\n\n  return (\n      <Modal\n        disablePortal\n        disableEnforceFocus\n        disableAutoFocus\n        disableBackdropClick\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={open}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n      >\n        {/* <Fade in={open}> */}\n          <div className={classes.paper}>\n            <h4 className={classes.typo} id=\"spring-modal-title\" style={{justifyContent: 'center'}}> {time} </h4>\n          </div>\n        {/* </Fade> */}\n      </Modal>\n\n  );\n}\n","export default __webpack_public_path__ + \"static/media/King_Conga.78ec5c8e.mp3\";","export default __webpack_public_path__ + \"static/media/Mausoleum_Mash.691b5af4.mp3\";","export default __webpack_public_path__ + \"static/media/Deja_Vu.b7bee3db.mp3\";","export default __webpack_public_path__ + \"static/media/Tetris99.af303290.mp3\";","export default __webpack_public_path__ + \"static/media/GameEnd.11eafc2f.mp3\";","import React, { useState, useEffect, useLayoutEffect } from 'react';\nimport { render } from 'react-dom';\nimport MuiThemeProvider from '@material-ui/styles/ThemeProvider';\nimport { Tabs, Tab, Button, Grid, CircularProgress } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { blue, red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles({\n    table: {},\n});\n\nconst StyledTable = withStyles({\n    '&.MuiTableCell-root': {\n        height: '100%',\n    },\n})(Table);\n\nfunction createData(sell, price, buy) {\n    return { sell, price, buy };\n}\n\nexport default function BidTab(props) {\n    const [isInit, setInit] = useState(false);\n    const [currentBids, SetBid] = useState([]);\n    if (!isInit) setInit(true);\n\n    useLayoutEffect(() => {\n        if (props.socket == null) {\n            // props.requestSocket('BidTab', props.socket);\n            // setInit(true);\n        } else {\n            props.socket.on('refreshBid', (bidObject) => {\n                SetBid(bidObject);\n            });\n        }\n    }, [isInit]);\n\n    const classes = useStyles();\n    const boldIndex = (index) => {\n        if (index === 4 || index === 5) {\n            return {\n                fontWeight: 'bold',\n                fontSize: '20px',\n            };\n        }\n    };\n\n    if (currentBids.length === 0) {\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: '100%',\n                }}\n            >\n                <CircularProgress />\n            </div>\n        );\n    }\n    return (\n        <Grid\n            style={{ height: '100%' }}\n            container\n            wrap=\"wrap\"\n            justify=\"center\"\n            direction=\"column\"\n        >\n            <TableContainer style={{ height: '100%' }}>\n                <StyledTable\n                    className={classes.table}\n                    size=\"small\"\n                    aria-label=\"a dense table\"\n                    style={{ height: '100%' }}\n                >\n                    <TableHead style={{ height: '10%' }}>\n                        <TableRow\n                            style={{\n                                height: '100%',\n                                width: '100%',\n                            }}\n                        >\n                            <TableCell\n                                style={{\n                                    color: 'white',\n                                    fontWeight: 'bold',\n                                    fontSize: '0.9vw',\n                                }}\n                                align=\"left\"\n                            >\n                                거래량\n                            </TableCell>\n                            <TableCell\n                                style={{\n                                    color: 'white',\n                                    fontWeight: 'bold',\n                                    fontSize: '0.9vw',\n                                }}\n                                align=\"left\"\n                            >\n                                거래가\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody style={{ height: '90%' }}>\n                        {currentBids.map((row, index) => {\n                            if (index === 0 || index === 9) return <></>;\n                            return (\n                                <TableRow\n                                    style={{\n                                        backgroundColor:\n                                            index <= 4\n                                                ? blue[index * 100 + 100]\n                                                : red[\n                                                      500 -\n                                                          ((index - 5) * 100 +\n                                                              100)\n                                                  ],\n                                        opacity: 0.6,\n                                        width: '100%',\n                                    }}\n                                    key={row.price}\n                                >\n                                    <TableCell\n                                        style={{\n                                            fontSize: '0.9vw',\n                                            opacity: 1,\n                                        }}\n                                    >\n                                        {row.buy}\n                                    </TableCell>\n                                    <TableCell\n                                        style={\n                                            (boldIndex(index),\n                                            { fontSize: '0.9vw', opacity: 1 })\n                                        }\n                                    >\n                                        {row.price}\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </StyledTable>\n            </TableContainer>\n        </Grid>\n    );\n}\n\n// render(<App />, document.getElementById(\"root\"));\n","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign: 'center',\n        backgroundColor: '#2D4053',\n        color: 'white',\n        margin: '1vh 0 0 0'\n    },\n    score: {},\n}));\n\nexport default function BidEntity(props) {\n    const classes = useStyles(greenTheme);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    const bidCancel = () => {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n            reqPrice: props.price,\n            reqVol: props.vol,\n        };\n\n        props.socket.emit('cancelBid_Req', reqJson);\n    };\n    return (\n        <Grid\n            wrap=\"wrap\"\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n        >\n            <Paper\n                style={{ height: '10%', width: '100%' }}\n                className={classes.paper}\n                onClick={bidCancel}\n            >\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyItems=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid\n                        style={{ width: '20%', fontStyle: 'italic' }}\n                        className=\"price\"\n                    >\n                        [{props.index}]\n                    </Grid>\n                    <Grid\n                        style={{ width: '40%',}}\n                        className=\"price\"\n                    >\n                        {props.price}\n                    </Grid>\n                    <Grid\n                        style={{ width: '40%', }}\n                        className=\"vol\"\n                    >\n                        {props.vol}\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/Cancel1.5f0f249d.wav\";","export default __webpack_public_path__ + \"static/media/Cancel2.8f2822a5.wav\";","export default __webpack_public_path__ + \"static/media/Cancel3.5901dc6e.wav\";","export default __webpack_public_path__ + \"static/media/Cancel4.46b0b80a.wav\";","export default __webpack_public_path__ + \"static/media/Cancel5.0cac279d.wav\";","export default __webpack_public_path__ + \"static/media/Cancel6.e32d198f.wav\";","export default __webpack_public_path__ + \"static/media/Cancel7.6c801c65.wav\";","export default __webpack_public_path__ + \"static/media/Cancel8.e4c4c2f1.wav\";","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport {\n    IconButton,\n    Button,\n    Box,\n    TextField,\n    Grid,\n    GridList,\n    Paper,\n    makeStyles,\n} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport BidEntity from './BidEntity';\n\nimport Cancel1 from './audios/effect/Cancel1.wav';\nimport Cancel2 from './audios/effect/Cancel2.wav';\nimport Cancel3 from './audios/effect/Cancel3.wav';\nimport Cancel4 from './audios/effect/Cancel4.wav';\nimport Cancel5 from './audios/effect/Cancel5.wav';\nimport Cancel6 from './audios/effect/Cancel6.wav';\nimport Cancel7 from './audios/effect/Cancel7.wav';\nimport Cancel8 from './audios/effect/Cancel8.wav';\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign: 'center',\n        color: theme.palette.primary,\n    },\n    score: {},\n    table: {\n        color: '#2D4053',\n        spacing: 1,\n    },\n}));\n\nexport default function BidTable(props) {\n    const classes = useStyles(greenTheme);\n    const testXs = 12;\n    const [BidTable, setTable] = useState([]);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    useEffect(() => {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n        };\n        props.socket.emit('bidTable_Req', reqJson);\n\n        if (props.socket == null) {\n            // props.requestSocket('makeTableEntity', props.socket);\n            // setInit(true);\n        } else {\n            props.socket.on('bidTable_Res', (bidTable) => {\n                setTable(bidTable);\n            });\n        }\n    }, [isInit]);\n\n    function CancelBid(num, table) {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n            reqPrice: table[num]['price'],\n            reqVol: table[num]['vol'],\n        };\n        props.socket.emit('cancelBid_Req', reqJson);\n    }\n\n    function HandleKeyUp(e, BidTable) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n\n        if (e.keyCode === 49 && BidTable.length >= 1) {\n            //_ 1\n            new Audio(Cancel1).play();\n            CancelBid(0, BidTable);\n        } else if (e.keyCode === 50 && BidTable.length >= 2) {\n            //_ 2\n            new Audio(Cancel2).play();\n            CancelBid(1, BidTable);\n        } else if (e.keyCode === 51 && BidTable.length >= 3) {\n            //_ 3\n            new Audio(Cancel3).play();\n            CancelBid(2, BidTable);\n        } else if (e.keyCode === 52 && BidTable.length >= 4) {\n            //_ 4\n            new Audio(Cancel4).play();\n            CancelBid(3, BidTable);\n        } else if (e.keyCode === 53 && BidTable.length >= 5) {\n            //_ 5\n            new Audio(Cancel5).play();\n            CancelBid(4, BidTable);\n        } else if (e.keyCode === 54 && BidTable.length >= 6) {\n            //_ 6\n            new Audio(Cancel6).play();\n            CancelBid(5, BidTable);\n        } else if (e.keyCode === 55 && BidTable.length >= 7) {\n            //_ 7\n            new Audio(Cancel7).play();\n            CancelBid(6, BidTable);\n        } else if (e.keyCode === 56 && BidTable.length >= 8) {\n            //_ 8\n            new Audio(Cancel8).play();\n            CancelBid(7, BidTable);\n        }\n    }\n\n    useEffect(() => {\n        const CancelBidByKey = (e) => {\n            HandleKeyUp(e, BidTable);\n        };\n        document.addEventListener('keyup', CancelBidByKey);\n        return () => {\n            document.removeEventListener('keyup', CancelBidByKey);\n        };\n    });\n\n    return (\n        <Grid\n            wrap=\"wrap\"\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n        >\n            <TableContainer>\n                <Table\n                    className={classes.table}\n                    size=\"small\"\n                    aria-label=\"a dense table\"\n                >\n                    <TableHead>\n                        <TableRow>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ color: 'white', fontWeight: 'bold' , fontSize: '0.8vw'}}>\n                                    취소[1]~[8]\n                                </span>\n                            </TableCell>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{  color: 'white', fontWeight: 'bold' , fontSize: '0.8vw'}}>\n                                    매수 가격\n                                </span>\n                            </TableCell>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' , height:'100%'}}\n                            >\n                                <span style={{  color: 'white', fontWeight: 'bold' , fontSize: '0.8vw'}}>\n                                    매수 수량\n                                </span>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                </Table>\n            </TableContainer>\n\n            <GridList wrap=\"wrap\" style={{ width: '100%', height: '100%' }}>\n                    {BidTable.map((bidElem, index, BidTable) => {\n                        return (\n                            <Grid style={{ height:'10%', fontSize: '1vw', }} item xs={testXs}>\n                                <BidEntity\n                                    price={bidElem.price}\n                                    vol={bidElem.vol}\n                                    index={index + 1}\n                                    socket={props.socket}\n                                    requestSocket={props.requestSocket}\n                                    roomID={props.roomID}\n                                />\n                            </Grid>\n                        );\n                    })}\n            </GridList>\n        </Grid>\n    );\n}\n","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign: 'center',\n        backgroundColor: '#2D4053',\n        color: 'white',\n        margin: '1vh 0 0 0'\n    },\n    score: {},\n}));\n\nexport default function AskEntity(props) {\n    const classes = useStyles(greenTheme);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    const askCancel = () => {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n            reqPrice: props.price,\n            reqVol: props.vol,\n        };\n\n        props.socket.emit('cancelAsk_Req', reqJson);\n    };\n    return (\n        <Grid\n            wrap=\"wrap\"\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n        >\n            <Paper\n                style={{ height: '10%', width: '100%' }}\n                className={classes.paper}\n                onClick={askCancel}\n            >\n                <Grid container direction=\"row\"                     justifyItems=\"center\"\n                    alignItems=\"center\">\n                    <Grid\n                        style={{ width: '20%',fontStyle: 'italic'  }}\n                        className=\"price\"\n                    >\n                        [{props.index}]\n                    </Grid>\n                    <Grid\n                        style={{ width: '40%', }}\n                        className=\"price\"\n                    >\n                        {props.price}\n                    </Grid>\n                    <Grid\n                        style={{ width: '40%', }}\n                        className=\"vol\"\n                    >\n                        {props.vol}\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n}\n","import React, { useState, makeStyle, useLayoutEffect, useEffect } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport {\n    IconButton,\n    Button,\n    Box,\n    TextField,\n    Grid,\n    GridList,\n    Paper,\n    makeStyles,\n} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport AskEntity from './AskEntity';\n\nimport Cancel1 from './audios/effect/Cancel1.wav';\nimport Cancel2 from './audios/effect/Cancel2.wav';\nimport Cancel3 from './audios/effect/Cancel3.wav';\nimport Cancel4 from './audios/effect/Cancel4.wav';\nimport Cancel5 from './audios/effect/Cancel5.wav';\nimport Cancel6 from './audios/effect/Cancel6.wav';\nimport Cancel7 from './audios/effect/Cancel7.wav';\nimport Cancel8 from './audios/effect/Cancel8.wav';\n// const dummyTable = [\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n//     { price: 1000, vol: 100 },\n// ];\n\nconst greenTheme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign: 'center',\n        color: theme.palette.primary,\n    },\n    score: {},\n    table: {\n        color: '#2D4053',\n        spacing: 1,\n    },\n}));\n\n// function MakeTableEntity(props) {\n//     const classes = useStyles(greenTheme);\n\n//     return (\n//         <Paper style={{ height: '9.8vh' }} className={classes.paper}>\n//             <Grid container direction=\"row\" alignItems=\"center\">\n//                 <Grid style={{ width: '50%', height: '5vh' }} className=\"price\">\n//                     {props.price}\n//                 </Grid>\n//                 <Grid style={{ width: '50%', height: '5vh' }} className=\"vol\">\n//                     {props.vol}\n//                 </Grid>\n//             </Grid>\n//         </Paper>\n//     );\n// }\n\nexport default function AskTable(props) {\n    const classes = useStyles(greenTheme);\n    const testXs = 12;\n    const [AskTable, setTable] = useState([]);\n    const [isInit, setInit] = useState(false);\n    if (!isInit) setInit(true);\n\n    useLayoutEffect(() => {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n        };\n        props.socket.emit('askTable_Req', reqJson);\n\n        if (props.socket == null) {\n            // props.requestSocket('makeTableEntity', props.socket);\n            // setInit(true);\n        } else {\n            props.socket.on('askTable_Res', (askTable) => {\n                setTable(askTable);\n            });\n        }\n    }, [isInit]);\n\n    function CancelAsk(num, table) {\n        let reqJson = {\n            socketID: props.socket.id,\n            roomID: props.roomID,\n            reqPrice: table[num]['price'],\n            reqVol: table[num]['vol'],\n        };\n        props.socket.emit('cancelAsk_Req', reqJson);\n    }\n\n    function HandleKeyUp(e, AskTable) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n\n        if (e.keyCode === 49 && AskTable.length >= 1) {\n            //_ 1\n            new Audio(Cancel1).play();\n            CancelAsk(0, AskTable);\n        } else if (e.keyCode === 50 && AskTable.length >= 2) {\n            //_ 2\n            new Audio(Cancel2).play();\n            CancelAsk(1, AskTable);\n        } else if (e.keyCode === 51 && AskTable.length >= 3) {\n            //_ 3\n            new Audio(Cancel3).play();\n            CancelAsk(2, AskTable);\n        } else if (e.keyCode === 52 && AskTable.length >= 4) {\n            //_ 4\n            new Audio(Cancel4).play();\n            CancelAsk(3, AskTable);\n        } else if (e.keyCode === 53 && AskTable.length >= 5) {\n            //_ 5\n            new Audio(Cancel5).play();\n            CancelAsk(4, AskTable);\n        } else if (e.keyCode === 54 && AskTable.length >= 6) {\n            //_ 6\n            new Audio(Cancel6).play();\n            CancelAsk(5, AskTable);\n        } else if (e.keyCode === 55 && AskTable.length >= 7) {\n            //_ 7\n            new Audio(Cancel7).play();\n            CancelAsk(6, AskTable);\n        } else if (e.keyCode === 56 && AskTable.length >= 8) {\n            //_ 8\n            new Audio(Cancel8).play();\n            CancelAsk(7, AskTable);\n        }\n    }\n\n    useEffect(() => {\n        const CancelAskByKey = (e) => {\n            HandleKeyUp(e, AskTable);\n        };\n        document.addEventListener('keyup', CancelAskByKey);\n        return () => {\n            document.removeEventListener('keyup', CancelAskByKey);\n        };\n    });\n\n    return (\n        <Grid\n            wrap=\"wrap\"\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n        >\n            <TableContainer>\n                <Table\n                    className={classes.table}\n                    size=\"small\"\n                    aria-label=\"a dense table\"\n                >\n                    <TableHead>\n                        <TableRow>\n                            <TableCell\n                                style={{ align: 'center', height:'100%', width: '20%' }}\n                            >\n                                <span style={{ color: 'white', fontWeight: 'bold', fontSize: '0.8vw' }}>\n                                    취소[1]~[8]\n                                </span>\n                            </TableCell>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ color: 'white', fontWeight: 'bold', fontSize: '0.8vw' }}>\n                                    매도 가격\n                                </span>\n                            </TableCell>\n                            <TableCell\n                                style={{ align: 'center', width: '20%' }}\n                            >\n                                <span style={{ color: 'white', fontWeight: 'bold' , fontSize: '0.8vw'}}>\n                                    매도 수량\n                                </span>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                </Table>\n            </TableContainer>\n            <GridList wrap=\"wrap\" style={{ width: '100%', height: '100%' }}>\n                <Grid style={{ width: '100%' }}>\n                    {AskTable.map((askElem, index, AskTable) => {\n                        return (\n                            <Grid  item xs={testXs}>\n                                <AskEntity\n                                    price={askElem.price}\n                                    vol={askElem.vol}\n                                    index={index + 1}\n                                    socket={props.socket}\n                                    requestSocket={props.requestSocket}\n                                    roomID={props.roomID}\n                                />\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n            </GridList>\n        </Grid>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/ExTable.34c7c909.wav\";","export default __webpack_public_path__ + \"static/media/BidTable.457b4c03.wav\";","export default __webpack_public_path__ + \"static/media/AskTable.c55377e0.wav\";","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport BidTab from './BidTab';\nimport BidTable from './BidTable';\nimport AskTable from './AskTable';\n\n// 음악\nimport ExTable from './audios/effect/ExTable.wav';\nimport BidTableSound from './audios/effect/BidTable.wav';\nimport AskTableSound from './audios/effect/AskTable.wav';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n\nfunction SimpleMediaQuery() {\n    const matches = useMediaQuery('(min-width:100px)');\n  \n    return <span>{`(min-width:100px) matches: ${matches}`}</span>;\n  }\nconst StyledTabs = withStyles({\n    indicator: {\n        width:'100%',\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      backgroundColor: \"transparent\",\n      \"& > span\": {\n        maxWidth: 60,\n        width: \"100%\",\n        backgroundColor: \"#635ee7\"\n      }\n    }\n//   })((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n  })((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n  \n  const StyledTab = withStyles((theme) => ({\n    root: {\n        padding: '0 0 0 0',\n      textTransform: \"none\",\n      color: \"#fff\",\n      fontWeight: theme.typography.fontWeightRegular,\n      fontSize: '0.8vw',\n      alignItems: 'center',\n      wrapped:'false',\n    //   width: '33%',\n      \"&:focus\": {\n        opacity: 1\n      }\n    },\n    '& .MuiButtonBase-root': {\n    },\n    // \"& .MuiTab-root\": {\n    //     minWidth: '2vw'\n    // }\n  }))((props) => <Tab disableRipple {...props} />);\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3} style={{padding: '0', width:'100%', height:'100%'}}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n      },\n      padding: {\n      },\n      demo1: {\n        backgroundColor: theme.palette.background.paper\n      },\n      demo2: {\n        backgroundColor: \"#0C151C\"\n      }\n    }));\n\nexport default function TabControl(props) {\n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n    const [isBind, SetBind] = useState(false);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    function HandleKeyUp(e) {\n        if (props.inputCtrl) return;\n        if (e.keyCode === 123 || e.keyCode === 27 || e.keyCode === 13) return; //_ 'F12' || 'esc' || 'enter'\n        e.preventDefault();\n        // if (props.socket == null || isBind === false) {\n        //     props.requestSocket('TradeStock', props.socket);\n        //     return;\n        // }\n        if (e.keyCode === 81) {\n            //_ Q\n            new Audio(BidTableSound).play();\n            setValue(0);\n        } else if (e.keyCode === 87) {\n            //_ W\n            new Audio(AskTableSound).play();\n            setValue(1);\n        } else if (e.keyCode === 69) {\n            //_ E\n            new Audio(ExTable).play();\n            setValue(2);\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('keyup', HandleKeyUp);\n        // document.addEventListener('keydown', HandleKeyDown);\n        return () => {\n            document.removeEventListener('keyup', HandleKeyUp);\n            // document.removeEventListener('keydown', HandleKeyDown);\n        };\n    });\n\n    return (\n        <div className={classes.demo2}  style={{height:'100%', width: '100%'}}>\n            <StyledTabs value={value} onChange={handleChange} style={{height:'10%', width:'100%', alignItems:'stretch'}}>\n                {/* <StyledTab label=\"[Q] 매수 주문\" {...a11yProps(0)} /> */}\n                <StyledTab label=\"[Q] 매수 주문\" {...a11yProps(0)} />\n                <StyledTab label=\"[W] 매도 주문\" {...a11yProps(1)} />\n                <StyledTab label=\"[E] 호가\" {...a11yProps(2)} />\n            </StyledTabs>\n            <TabPanel value={value} index={0} style={{height:'90%'}}>\n                <BidTable\n                    roomID={props.roomID}\n                    socket={props.socket}\n                    requestSocket={props.requestSocket}\n                />\n            </TabPanel>\n            <TabPanel value={value} index={1} style={{height:'90%'}}>\n                <AskTable\n                    roomID={props.roomID}\n                    socket={props.socket}\n                    requestSocket={props.requestSocket}\n                />\n            </TabPanel>\n            <TabPanel value={value} index={2} style={{height:'90%'}}>\n                <BidTab\n                    socket={props.socket}\n                    requestSocket={props.requestSocket}\n                    style={{height: '100%'}}\n                />\n            </TabPanel>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Grid, Paper, makeStyles } from '@material-ui/core';\nimport { sizing } from '@material-ui/system';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TradeStock from './TradeStock';\nimport MyAsset from './MyAsset';\nimport ChatRoom from './ChatRoom';\nimport PlayerList from './PlayerList';\nimport ChartComponent from './ChartComponent';\nimport ChartTitle from './ChartTitle';\nimport GameOverModal from './GameOverModal';\nimport StockDoneList from './StockDoneList';\nimport { red } from '@material-ui/core/colors';\nimport ThreeSecTimer from './ThreeSecTimer';\nimport GameMusicStart from './MusicStart';\nimport { Howl, Howler } from 'howler';\nimport GameEnd from './audios/effect/GameEnd.mp3';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    useLocation,\n    useHistory,\n} from 'react-router-dom';\nimport TabPanel from './TabControl';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign: 'left',\n        color: '#CDD7E0',\n        backgroundColor: '#0C151C',\n    },\n}));\n\nexport default function LayoutGrid(props) {\n    const classes = useStyles();\n    let leftSm = 2;\n    let middleSm = 7;\n    let rightSm = 3;\n\n    const location = useLocation();\n    const gameTime = location.state.gameTime;\n    const [timerTime, setTimerTime] = useState(gameTime);\n    const [inputCtrl, setInputCtrl] = useState(false);\n\n    const SetInputCtrl = (isChat) => {\n        setInputCtrl(isChat);\n    };\n\n    useEffect(() => {\n        console.log('layoutGrid rendered....!');\n    });\n\n    const [over, setOver] = useState(false);\n\n    useEffect(() => {\n        props.socket.once('gameOver', (leaderBoard) => {\n            console.log('gameover');\n            new Audio(GameEnd).play();\n            if (leaderBoard) {\n                setOver(leaderBoard);\n            }\n        });\n    }, []);\n\n    const [APIdata, setAPI] = useState(null);\n    let setCurrentAPIData = (data) => {\n        setAPI(data);\n    };\n    let getCurrentAPIData = () => {\n        return APIdata;\n    };\n\n    return (\n        <>\n            {over && <GameOverModal leaderBoard={over} setLeaderBoard={setOver} socket={props.socket} roomID={props.roomID} lobbyAudio={props.lobbyAudio}/>}\n\n            <Grid\n                style={{\n                    padding: '3vh 3vw 3vh 3vw',\n                    width: '100vw',\n                    height: '100vh',\n                }}\n                wrap=\"wrap\"\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"stretch\"\n            >\n                <Grid\n                    className=\"playerListGrid\"\n                    item\n                    xs={leftSm}\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                    }}\n                >\n                    <PlayerList\n                        socket={props.socket}\n                        requestSocket={props.requestSocket}\n                        roomID={props.roomID}\n                        roomInfo={props.roomInfo}\n                    />\n                </Grid>\n                <Grid\n                    className=\"stockTradeGrid\"\n                    item\n                    xs={middleSm}\n                    container\n                    wrap=\"wrap\"\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                    justify=\"space-between\"\n                >\n                    <Grid item style={{ width: '100%', height: '50%' }}>\n                        <Paper\n                            style={{ height: '100%' }}\n                            className={classes.paper}\n                        >\n                            <ChartComponent\n                                socket={props.socket}\n                                requestSocket={props.requestSocket}\n                                setAPIData={setCurrentAPIData}\n                                APIdata={APIdata}\n                                display=\"flex\"\n                                // time={props.time}\n                                isStart={props.isStart}\n                                time={timerTime}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid\n                        container\n                        style={{ width: '100%', height: '50%' }}\n                        item\n                        wrap=\"wrap\"\n                        direction=\"row\"\n                        alignItems=\"stretch\"\n                        justify=\"space-between\"\n                    >\n                        <Grid\n                            style={{ height: '100%', width: '50%' }}\n                            direction=\"column\"\n                            container\n                            item\n                            alignItems=\"stretch\"\n                            justify=\"flex-start\"\n                        >\n                            <Grid\n                                style={{\n                                    width: '100%',\n                                    height: '50%',\n                                }}\n                                container\n                                item\n                                alignItems=\"stretch\"\n                                justify=\"flex-start\"\n                                wrap=\"wrap\"\n                                direction=\"row\"\n                            >\n                                <MyAsset\n                                    roomID={props.roomID}\n                                    socket={props.socket}\n                                    requestSocket={props.requestSocket}\n                                />\n                            </Grid>\n                            <Grid\n                                style={{\n                                    width: '100%',\n                                    height: '50%',\n                                }}\n                                item\n                            >\n                                <Paper\n                                    className={classes.paper}\n                                    style={{ width: '100%', height: '100%' }}\n                                >\n                                    <StockDoneList\n                                        socket={props.socket}\n                                        requestSocket={props.requestSocket}\n                                        isMine={false}\n                                    />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            container\n                            item\n                            style={{ height: '100%', width: '50%' }}\n                        >\n                            <Grid\n                                style={{ height: '100%' }}\n                                wrap=\"wrap\"\n                                alignItems=\"stretch\"\n                                container\n                                item\n                                direction=\"row\"\n                                justify=\"space-between\"\n                            >\n                                <Grid\n                                    style={{\n                                        width: '100%',\n                                        height: '100%',\n                                    }}\n                                    item\n                                >\n                                    <Paper\n                                        style={{ height: '100%' }}\n                                        className={classes.paper}\n                                    >\n                                        <TradeStock\n                                            inputCtrl={inputCtrl}\n                                            roomID={props.roomID}\n                                            APIdata={APIdata}\n                                            socket={props.socket}\n                                            requestSocket={props.requestSocket}\n                                        />\n                                    </Paper>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid\n                    className=\"bidChatGrid\"\n                    item\n                    xs={rightSm}\n                    style={{ height: '100%', width: '100%' }}\n                    alignItems=\"flex-end\"\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                >\n                    <Grid style={{ height: '50%', width: '100%' }} item>\n                        <Paper className={classes.paper} style={{ height: '100%', width: '100%' }} >\n                            <TabPanel\n                                inputCtrl={inputCtrl}\n                                roomID={props.roomID}\n                                socket={props.socket}\n                                requestSocket={props.requestSocket}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid style={{ height: '50%', width: '100%' }} item>\n                        <Paper className={classes.paper} style={{ height: '100%', width: '100%' }}>\n                            <ChatRoom\n                                SetInputCtrl={SetInputCtrl}\n                                roomInfo={props.roomInfo}\n                                roomID={props.roomID}\n                                socket={props.socket}\n                                chat={props.chat}\n                            />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/Dont_Stop_Me_Now.5c39d7a8.mp3\";","export default __webpack_public_path__ + \"static/media/GONG.98e84a15.mp3\";","export default __webpack_public_path__ + \"static/media/Without_Me.febc7935.mp3\";","export default __webpack_public_path__ + \"static/media/질풍가도.22d9f7dd.mp3\";","export default __webpack_public_path__ + \"static/media/Beethven_Virus.5ff9f5b9.mp3\";","export default __webpack_public_path__ + \"static/media/The_Wight_to_Remain.a68ce79d.mp3\";","export default __webpack_public_path__ + \"static/media/AskDone.87174050.wav\";","export default __webpack_public_path__ + \"static/media/BidDone.3138b09f.wav\";","export default __webpack_public_path__ + \"static/media/Buy0.fcdab19a.wav\";","export default __webpack_public_path__ + \"static/media/Buy50.12093f4b.wav\";","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    useLocation,\n    useHistory,\n} from 'react-router-dom';\n\nimport { useSound, playSound, getDuration } from './useSound';\nimport ThreeSecTimer from './ThreeSecTimer';\nimport LayoutGrid from './LayoutGrid';\nimport Sound from './Sound';\n\n// Music\nimport Deja_Vu from './audios/music/Deja_Vu.mp3';\nimport Dont_Stop_Me_Now from './audios/music/Dont_Stop_Me_Now.mp3';\nimport Gong from './audios/music/GONG.mp3';\nimport King_Conga from './audios/music/King_Conga.mp3';\nimport Mausoleum_Mash from './audios/music/Mausoleum_Mash.mp3';\nimport Without_Me from './audios/music/Without_Me.mp3';\nimport StormRoad from './audios/music/질풍가도.mp3';\nimport Beethven_Virus from './audios/music/Beethven_Virus.mp3';\nimport The_Wight_to_Remain from './audios/music/The_Wight_to_Remain.mp3';\nimport GameMusicStart from './MusicStart';\n\nlet gameMusic = new Audio('');\n\nconst musicList = {\n    Deja_Vu: Deja_Vu,\n    Dont_Stop_Me_Now: Dont_Stop_Me_Now,\n    Gong: Gong,\n    King_Conga: King_Conga,\n    Mausoleum_Mash: Mausoleum_Mash,\n    Without_Me: Without_Me,\n    StormRoad: StormRoad,\n    Beethven_Virus: Beethven_Virus,\n    The_Wight_to_Remain: The_Wight_to_Remain,\n};\n\nexport default function LayoutGridEffect(props) {\n    const location = useLocation();\n    const gameTime = location.state.gameTime;\n    const musicName = location.state.musicName;\n    const [timerTime, setTimerTime] = useState(gameTime);\n    const [isStart, setIsStart] = useState(false);\n\n\n    console.log(props);\n    const SpecificMusic = musicList[musicName];\n    const [threeSecTimerOpen, setThreeSecTimerOpen] = useState(true);\n\n    useEffect(() => {\n        props.socket.once('startGame_Real', (data) => {\n            setThreeSecTimerOpen(false);\n            setTimerTime(gameTime);\n            setIsStart(true);\n            gameMusic = new Audio(SpecificMusic);\n            if (gameMusic) gameMusic.play();\n        });\n    }, [timerTime]);\n\n    return (\n        <>\n            <ThreeSecTimer open={threeSecTimerOpen} />\n            <LayoutGrid\n                socket={props.socket}\n                requestSocket={props.requestSocket}\n                roomID={props.roomID}\n                roomInfo={props.roomInfo}\n                gameTime={props.time}\n                isStart={isStart}\n                lobbyAudio={props.lobbyAudio}\n            />\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/Logo.8fe71f5e.png\";","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport Logo from './images/Logo.png';\nimport { PurpleButton } from './PurpleComponent';\nconst useStyles = makeStyles((theme) => ({\n    input: {\n        color: 'white',\n    },\n}));\nfunction SetPlayerName(props) {\n    // const socket = io();\n    // const [name, setName] = React.useState('');\n    const classes = useStyles();\n    const params = window.location\n        .toString()\n        .substring(window.location.toString().indexOf('?'));\n    const searchParams = new URLSearchParams(params);\n    const [tmp, setTemp] = React.useState('');\n    console.log('setplayerid');\n\n    const onKeyPress = (e) => {\n        if (e.key == 'Enter') {\n            handleOnSave(e);\n        }\n    };\n\n    const handleChange = (event) => {\n        setTemp(event.target.value);\n    };\n\n    const handleOnSave = (event) => {\n        if (tmp != '') {\n            event.preventDefault();\n            props.onSave(tmp, 0);\n        }\n    };\n\n    const handleOnSave2 = (event) => {\n        if (tmp != '') {\n            event.preventDefault();\n            props.onSave(tmp, 1);\n        }\n    };\n    let buttonMsg = 'Create Private Room';\n    let publicButton = 'Join Public Room';\n    if (searchParams.has('id')) {\n        // 초대링크 받아서 온 사람\n        buttonMsg = 'Join Room';\n    } else {\n        buttonMsg = 'Create Private Room';\n    }\n\n    return (\n        <>\n            <Grid\n                container\n                justify={'center'}\n                alignItems={'center'}\n                // spacing={2}\n                direction=\"column\"\n                style={{ width: '100vw', height: '100vh' }}\n            >\n                <Grid>\n                    <img src={Logo} />\n                </Grid>\n                <Grid style={{ margin: '4vh' }} item>\n                    <TextField\n                        id=\"form-control text-center fw-bold bg-transparent\"\n                        label=\"인게임 닉네임 (8자 제한)\"\n                        inputRef={props.textInput}\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        InputProps={{\n                            className: classes.input,\n                        }}\n                        InputLabelProps={{\n                            style: { color: '#fff' },\n                        }}\n                        // ref={nameInput}\n                        autoFocus\n                        onKeyPress={onKeyPress}\n                        inputProps={{ maxLength: 8 }}\n                    />\n                </Grid>\n\n                <Grid item>\n                    <PurpleButton\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleOnSave}\n                        style={{ width: '50vh', height: '7vh' }}\n                    >\n                        {buttonMsg}\n                    </PurpleButton>\n                    <PurpleButton\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleOnSave2}\n                        style={{ width: '50vh', height: '7vh' }}\n                    >\n                        {publicButton}\n                    </PurpleButton>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\nexport default withRouter(SetPlayerName);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, Grid } from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatars from '@dicebear/avatars';\nimport sprites from '@dicebear/avatars-male-sprites';\n\n// const theme = createMuiTheme({\n//   palette: {\n//     primary: {\n//       main: purple[500],\n//     },\n//     secondary: {\n//       main: '#f44336',\n//     },\n//   },\n// });\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '30vh',\n        height: '15vh',\n        margin: '0 2vh 2vh 2vh',\n        color: '#CDD7E0',\n        backgroundColor: '#0C151C',\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n        color: '#ffffff',\n    },\n    pos: {\n        marginBottom: 12,\n    },\n}));\n\nexport default function LobbyPlayerCard(props) {\n    const classes = useStyles();\n    const isLeader = props.roomLeader === props.socketID ? '방장' : '';\n    let options = {};\n    let avatars = new Avatars(sprites, options);\n    let svg = avatars.create(props.playerID);\n    return (\n        <Card className={classes.root} style={{ margin: '2vh 0 0 0' }}>\n            <CardContent>\n                <Grid\n                    container\n                    direction={'row'}\n                    justify={'flex-start'}\n                    alignItems={'flex-start'}\n                >\n                    <Grid container item>\n                      <div dangerouslySetInnerHTML={{__html: svg}}/>\n                    </Grid>\n                    <Grid\n                        container\n                        item\n                        direction={'column'}\n                        justify={'center'}\n                        alignItems={'flex-end'}\n                    >\n                        {/* <Typography\n                            className={classes.title}\n                            color=\"textSecondary\"\n                            gutterBottom\n                        > */}\n                        <Grid item>{isLeader}</Grid>\n                        {/* </Typography> */}\n                        {/* <Typography variant=\"h5\" component=\"h2\"> */}\n                        <Grid item>\n                            {props.playerID}\n                            {/* </Typography> */}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n}\n","import React, { useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\n\n// Music\nimport Deja_Vu from './audios/music/Deja_Vu.mp3';\nimport Dont_Stop_Me_Now from './audios/music/Dont_Stop_Me_Now.mp3';\nimport Gong from './audios/music/GONG.mp3';\nimport King_Conga from './audios/music/King_Conga.mp3';\nimport Mausoleum_Mash from './audios/music/Mausoleum_Mash.mp3';\nimport Without_Me from './audios/music/Without_Me.mp3';\nimport StormRoad from './audios/music/질풍가도.mp3';\nimport Beethven_Virus from './audios/music/Beethven_Virus.mp3';\nimport The_Wight_to_Remain from './audios/music/The_Wight_to_Remain.mp3';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function MusicLeader(props) {\n    const classes = useStyles();\n\n    const musicList = {\n        Deja_Vu: Deja_Vu,\n        Dont_Stop_Me_Now: Dont_Stop_Me_Now,\n        Gong: Gong,\n        King_Conga: King_Conga,\n        Mausoleum_Mash: Mausoleum_Mash,\n        Without_Me: Without_Me,\n        StormRoad: StormRoad,\n        Beethven_Virus: Beethven_Virus,\n        The_Wight_to_Remain: The_Wight_to_Remain,\n    };\n\n    function MusicInput() {\n        const handleChange = (event) => {\n            const musicName = event.target.value;\n            let tmpAudio = new Audio(musicList[musicName]);\n            tmpAudio.addEventListener('loadedmetadata', () => {\n                let gameTime = parseInt(tmpAudio.duration);\n                props.socket.emit('settingsUpdate_Req', {\n                    roomID: props.roomID,\n                    musicName: musicName,\n                    gameTime: gameTime,\n                });\n                tmpAudio.remove();\n            });\n        };\n\n        return (\n            <div>\n                <FormControl className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        Select Music\n                        {/* {props.music} */}\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={props.music}\n                        onChange={handleChange}\n                    >\n                        <MenuItem value={'Dont_Stop_Me_Now'}>\n                            Dont_Stop_Me_Now\n                        </MenuItem>\n                        <MenuItem value={'King_Conga'}>King_Conga</MenuItem>\n                        <MenuItem value={'Mausoleum_Mash'}>\n                            Mausoleum_Mash\n                        </MenuItem>\n                        <MenuItem value={'Deja_Vu'}>Deja_Vu</MenuItem>\n                        <MenuItem value={'Without_Me'}>Without_Me</MenuItem>\n                        <MenuItem value={'StormRoad'}>StormRoad</MenuItem>\n                        <MenuItem value={'Beethven_Virus'}>\n                            Beethven_Virus\n                        </MenuItem>\n                        <MenuItem value={'The_Wight_to_Remain'}>\n                            The_Wight_to_Remain\n                        </MenuItem>\n\n                        {/* <>\n              {props.musicList.map((music) => {\n                  return (\n                  (<MenuItem\n                      value={music}>{music}\n                  </MenuItem>)\n                  );\n              })}\n              </> */}\n                    </Select>\n                </FormControl>\n            </div>\n        );\n    }\n    function ShowMusic() {\n        useEffect(() => {\n            props.socket.once('settingsUpdate_Res', (data) => {\n                const musicName = data.musicName;\n                const musicTime = data.musicTime;\n                // var tmp_roomInfo = props.roomInfo;\n                // tmp_roomInfo['music'] = musicName;\n                // strSetTime(String(minute) + ' : ' + String(second));\n                // props.SetRoomIdAndInfo({roomID: props.roomID, roomInfo : tmp_roomInfo});\n                props.setMusicTime(musicName, musicTime);\n            });\n        }, []);\n        // }\n        return (\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <div>\n                    <TextField\n                        id=\"standard-read-only-input\"\n                        label=\"Play Time\"\n                        defaultValue={props.strTime}\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                    />\n                </div>\n            </form>\n        );\n    }\n    // const StartGameReq = () => {\n    //     if (music === '') {\n    //         return alert('음악을 선택해주세요');\n    //     } else {\n    //         props.socket.emit('startGame_Req', props.roomID);\n    //     }\n    // };\n\n    // let isSetUp = false;\n    // useEffect(() => {\n    //     if (!isSetUp) {\n    //         props.socket.off('startGame_Res').once('startGame_Res', (gameTime) => {\n    //             props.MusicPause();\n    //             props.history.push({\n    //                 pathname: '/game',\n    //                 state: { gameTime: gameTime },\n    //             });\n    //         });\n    //         isSetUp = true;\n    //     }\n    // }, []);\n    return (\n        <>\n            <Grid>\n                <MusicInput />\n            </Grid>\n            <Grid>\n                <ShowMusic />\n            </Grid>\n            {/* <Button variant=\"contained\" color=\"primary\" onClick={StartGameReq}>\n                {' '}\n                StartGame{' '}\n            </Button> */}\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/KeyMap.f99426d9.png\";","import React, { useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Tetris99 from './audios/music/Tetris99.mp3';\nimport KeyMapTemp from './images/KeyMap.png';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\nexport default function MusicMember(props) {\n    const classes = useStyles();\n    // var tmp_music = props.roomInfo['music'];\n    // var tmp_time = props.roomInfo['gameTime'];\n\n    // var minute = parseInt(tmp_time / 60);\n    // var second = tmp_time % 60;\n    // minute = minute >= 10 ? String(minute) : '0' + String(minute);\n    // second = second >= 10 ? String(second) : '0' + String(second);\n    // const [music, setMusic] = React.useState(tmp_music);\n    // const [strTime, strSetTime] = React.useState(minute + ' : ' + second);\n    \n    function MusicInput() {\n        return (\n            <div>\n                <FormControl className={classes.formControl} disabled>\n                    <InputLabel id=\"demo-simple-select-label\">\n                        {props.music}\n                    </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                    >\n                        <MenuItem value={'King_Conga.mp3'}>\n                            King_Conga.mp3\n                        </MenuItem>\n                        <MenuItem value={'Mausoleum_Mash.mp3'}>\n                            Mausoleum_Mash.mp3\n                        </MenuItem>\n                        <MenuItem value={'Deja_Vu.mp3'}>Deja_Vu.mp3</MenuItem>\n                    </Select>\n                </FormControl>\n            </div>\n        );\n    }\n\n    function ShowMusic() {\n        useEffect(() => {\n            props.socket.once('settingsUpdate_Res', (data) => {\n                const musicName = data.musicName;\n                const musicTime = data.musicTime;\n                var tmp_roomInfo = props.roomInfo;\n                tmp_roomInfo['music'] = musicName;\n                console.log('@MusicMemeber // musicTime :,', musicTime);\n                // strSetTime(String(minute) + ' : ' + String(second));\n                props.SetRoomIdAndInfo({roomID: props.roomID, roomInfo : tmp_roomInfo});\n                props.setMusicTime(musicName, musicTime);\n            });\n        }, []);\n        return (\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <div>\n                    <TextField\n                        label={props.strTime}\n                        defaultValue={props.strTime}\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                    />\n                </div>\n            </form>\n        );\n    }\n    // let isSetUp = false;\n    // useEffect(() => {\n    //     if (!isSetUp) {\n    //       props.socket.off('startGame_Res').once('startGame_Res', (gameTime) => {\n    //           props.MusicPause();\n    //             props.history.push({\n    //                 pathname: '/game',\n    //                 state: { gameTime: gameTime },\n    //             });\n    //         });\n    //         isSetUp = true;\n    //     }\n    // }, []);\n    return (\n        <>\n            <Grid>\n                <MusicInput />\n            </Grid>\n            <Grid>\n                <ShowMusic />\n            </Grid>\n            {/* <Button variant=\"contained\" color=\"primary\" disabled>\n                {' '}\n                StartGame{' '}\n            </Button> */}\n        </>\n    );\n}\n","import React, { Component } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    Paper,\n    Popover,\n    FormGroup,\n    FormControlLabel,\n} from '@material-ui/core';\nimport { Typography, Switch } from '@material-ui/core';\nimport KeyMapTemp from './images/KeyMap.png';\nimport MusicLeader from './MusicLeader';\nimport MusicMember from './MusicMember';\nimport { PurpleButton, PurpleSwitch } from './PurpleComponent';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // flexGrow: 1,\n    },\n    padding: {\n        padding: theme.spacing(1),\n    },\n    typography: {\n        padding: theme.spacing(2),\n    },\n}));\n\nfunction LobbyMusicOnOff(props) {\n    const [state, setState] = React.useState(true);\n\n    const handleChange = (event, lobbyAudio) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        if (state) {\n            setState(false);\n            setState(false);\n            props.lobbyAudio.pause();\n        } else {\n            setState(true);\n            props.lobbyAudio.play();\n        }\n    };\n\n    return (\n        <FormGroup>\n            <FormControlLabel\n                control={\n                    <PurpleSwitch\n                        checked={state}\n                        onChange={handleChange}\n                        name=\"checkedA\"\n                    />\n                }\n                //   label=\"Custom color\"\n            />\n        </FormGroup>\n    );\n}\n\nexport default function LobbyTabs(props) {\n    const classes = useStyles();\n    // const keyMapButton = () => {<Button id=\"key_map\" size=\"large\">KEY MAP</Button>}\n    const [keymap, setKeymap] = React.useState(null);\n    // const [keymap, setKeymap] = React.useState(props.roomLeader ? null : 'key_map');\n    const [selectMusic, setSelectMusic] = React.useState(null);\n    var tmp_music = props.roomInfo['music'];\n    var tmp_time = props.roomInfo['gameTime'];\n\n    var minute = parseInt(tmp_time / 60);\n    var second = tmp_time % 60;\n    minute = minute >= 10 ? String(minute) : '0' + String(minute);\n    second = second >= 10 ? String(second) : '0' + String(second);\n    const [music, setMusic] = React.useState(tmp_music);\n    const [strTime, strSetTime] = React.useState(minute + ' : ' + second);\n    const [time, setTime] = React.useState(props.musicTime);\n\n    const setMusicTime = (music, time) => {\n        setMusic(music);\n        var minute = parseInt(time / 60);\n        var second = time % 60;\n        strSetTime(String(minute) + ' : ' + String(second));\n        setTime(time);\n    };\n\n    const handleKeymap = (event) => {\n        console.log(event.currentTarget);\n        setKeymap(event.currentTarget);\n        console.log(keymap);\n    };\n\n    const handleSelectMusic = (event) => {\n        console.log(event.currentTarget);\n        setSelectMusic(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setKeymap(null);\n        setSelectMusic(null);\n    };\n\n    const openKey = Boolean(keymap);\n    const openSelect = Boolean(selectMusic);\n\n    const CheckLeader = () => {\n        console.log(props.socket);\n        if (props.roomLeader === props.socketId) {\n            return (\n                <>\n                    <MusicLeader\n                        musicList={props.musicList}\n                        roomID={props.roomID}\n                        roomInfo={props.roomInfo}\n                        socket={props.socket}\n                        SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                        history={props.history}\n                        music={music}\n                        strTime={strTime}\n                        time={time}\n                        setMusicTime={setMusicTime}\n                    />\n                </>\n            );\n        } else {\n            return (\n                <>\n                    <MusicMember\n                        musicList={props.musicList}\n                        roomID={props.roomID}\n                        roomInfo={props.roomInfo}\n                        socket={props.socket}\n                        SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                        history={props.history}\n                        music={music}\n                        strTime={strTime}\n                        time={time}\n                        setMusicTime={setMusicTime}\n                    />\n                </>\n            );\n        }\n    };\n    console.log(keymap, openKey);\n    console.log(selectMusic, openSelect);\n    return (\n        <>\n            <Grid container justify={'space-around'} alignItems={'center'}>\n                <PurpleButton id=\"key_map\" onClick={handleKeymap} size=\"large\">\n                    KEY MAP\n                </PurpleButton>\n                <PurpleButton\n                    id=\"select_music\"\n                    onClick={handleSelectMusic}\n                    size=\"large\"\n                >\n                    SELECT MUSIC\n                </PurpleButton>\n                <LobbyMusicOnOff lobbyAudio={props.lobbyAudio} />\n            </Grid>\n            <Popover\n                open={openKey}\n                anchorEl={keymap}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <Typography className={classes.typography}>\n                    <img src={KeyMapTemp} style={{ width: '50vw' }} />\n                </Typography>\n            </Popover>\n            <Popover\n                open={openSelect}\n                anchorEl={selectMusic}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <Typography className={classes.typography}>\n                    <CheckLeader />\n                </Typography>\n            </Popover>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { PurpleButton } from './PurpleComponent';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\nimport Sound from './Sound';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function StartGame(props) {\n    const classes = useStyles();\n    const [restReadyTime, SetRestTime] = useState(null);\n\n    const StartGameReq = () => {\n        props.socket.emit('startGame_Req', props.roomID);\n    };\n\n    let isSetUp = false;\n    useEffect(() => {\n        if (!isSetUp) {\n            props.socket.off('startGame_Res').on('startGame_Res', (data) => {\n                props.lobbyAudio.pause();\n                console.log(data);\n                // if (data.musicName)\n                props.history.push({\n                    pathname: '/game',\n                    state: {\n                        musicName: data.musicName,\n                        gameTime: data.gameTime,\n                    },\n                });\n            });\n            isSetUp = true;\n        }\n    }, []);\n\n    useEffect(() => {\n        props.socket.on('restReadyTime', (restTime) => {\n            SetRestTime(restTime);\n        });\n    });\n\n    if (props.roomID === 'EnjoyPublicGame') {\n        return (\n            <>\n                {props.isLeader && (\n                    <PurpleButton\n                        variant=\"contained\"\n                        style={{\n                            width: '80%',\n                            height: '20vh',\n                            fontSize: '8vh',\n                        }}\n                        text\n                    >\n                        {' '}\n                        {restReadyTime}\n                    </PurpleButton>\n                )}\n                {!props.isLeader && (\n                    <PurpleButton\n                        variant=\"contained\"\n                        style={{\n                            width: '80%',\n                            height: '20vh',\n                            fontSize: '8vh',\n                        }}\n                        text\n                    >\n                        {' '}\n                        {restReadyTime}\n                    </PurpleButton>\n                )}\n            </>\n        );\n    } else {\n        return (\n            <>\n                {props.isLeader && (\n                    <PurpleButton\n                        variant=\"contained\"\n                        onClick={StartGameReq}\n                        style={{\n                            width: '80%',\n                            height: '20vh',\n                            fontSize: '8vh',\n                        }}\n                        text\n                    >\n                        {'START'}\n                    </PurpleButton>\n                )}\n                {!props.isLeader && (\n                    <PurpleButton\n                        variant=\"contained\"\n                        style={{\n                            width: '80%',\n                            height: '20vh',\n                            fontSize: '8vh',\n                        }}\n                        text\n                        disabled\n                    >\n                        {'START'}\n                    </PurpleButton>\n                )}\n            </>\n        );\n    }\n}\n","export default __webpack_public_path__ + \"static/media/LobbyImage3.b2800294.gif\";","import React, { useEffect, useLayoutEffect, useState } from 'react';\nimport {\n    Button,\n    Grid,\n    GridList,\n    Paper,\n    makeStyles,\n    Typography,\n    Container,\n    TextField,\n} from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport Zoom from '@material-ui/core/Zoom';\nimport { withRouter } from 'react-router-dom';\nimport LobbyPlayerCard from './LobbyPlayerCard';\nimport MusicLeader from './MusicLeader';\nimport MusicMember from './MusicMember';\nimport { SnackAlertBtn } from './SnackAlert';\nimport { SnackbarProvider } from 'notistack';\n\nimport ChatRoom from './ChatRoom';\nimport { ChatFeed, Message } from 'react-chat-ui';\nimport LobbyTabs from './LobbyTabs';\nimport './Lobby.css';\nimport StartGame from './StartGame';\nimport backgroundImg from './videos/LobbyImage3.gif';\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        textAlign: 'center',\n        padding: theme.spacing(1),\n        textAlign: 'left',\n        color: '#CDD7E0',\n        backgroundColor: '#0C151C',\n    },\n    button: {\n        // color: theme.palette.getContrastText\n        backgroundColor: '#0069d9',\n    },\n    input: {\n        color: 'white',\n    },\n}));\n\nfunction Lobby(props) {\n    let leftSm = 3;\n    let middleSm = 5;\n    let rightSm = 3;\n    // const [roomLeader, setRoomLeader] = useState(props.roomInfo['roomLeader']); //props.roomInfo['roomLeader']\n    // const [socketId, setSocketId] = useState(props.socket.id);\n    // console.log(props.socket.id);\n    // console.log(props);\n    const classes = useStyles();\n\n    const [inputCtrl, setInputCtrl] = useState(false);\n    const SetInputCtrl = (isChat) => {\n        setInputCtrl(isChat);\n    };\n\n    function CopyURL() {\n        var copyText = document.getElementById('gameLink');\n        copyText.select();\n        document.execCommand('Copy');\n    }\n    let soc = props.socket;\n    useLayoutEffect(() => {\n        if (soc) {\n            soc.on('joinRoom_Res', (room) => {\n                // 사람이 들어올 때마다 roomInfo 갱신\n                // setRoomInfo(room.roomInfo);\n                props.SetRoomIdAndInfo(room);\n                // setRoomLeader(room.roomInfo['roomLeader']);\n                // setSocketId(soc.id);\n            });\n        }\n    }, []);\n\n    useLayoutEffect(() => {\n        if (soc) {\n            soc.on('disconnect', (roomInfo) => {\n                // 사람이 나갈 때마다 roomInfo 갱신\n                // setRoomInfo(roomInfo);\n                props.SetRoomIdAndInfo({\n                    roomID: props.roomID,\n                    roomInfo: roomInfo,\n                });\n                // setRoomLeader(roomInfo['roomLeader']);\n                // setSocketId(soc.id);\n            });\n        }\n    });\n\n    function PutNewCard(props) {\n        console.log(props.roomInfo);\n        if (props.roomInfo != '') {\n            let PlayerList = getPlayersList(props.roomInfo);\n            console.log(PlayerList);\n            let tmparr = [];\n            for (let key in PlayerList) {\n                console.log(key);\n                tmparr.push([key, PlayerList[key]]);\n            }\n            return (\n                <GridList\n                    contianer\n                    style={{ width: '100%', height: '100vh' }}\n                    justify={'flex-start'}\n                    alignItems={'flex-start'}\n                >\n                    {tmparr.map(([socketID, player]) => {\n                        return (\n                            <LobbyPlayerCard\n                                playerID={player.playerID}\n                                roomLeader={props.roomInfo['roomLeader']}\n                                socketID={socketID}\n                            />\n                        );\n                    })}\n                </GridList>\n            );\n        }\n    }\n\n    // const Card = () => {\n    //     return <PutNewCard roomInfo={props.roomInfo} socket={props.socket} />;\n    // };\n\n    function getPlayersList(roomInfo) {\n        // let keyList = Object.keys(roomInfo).filter((key) => key.length === 20);\n        let playerList = [];\n        for (const [key, value] of Object.entries(roomInfo)) {\n            if (key.length === 20) {\n                playerList[key] = value;\n            }\n        }\n        return playerList;\n    }\n\n    return (\n        <div\n            style={{\n                backgroundImage: `url(${backgroundImg})`,\n                backgroundSize: 'cover',\n            }}\n        >\n            <Grid style={{ height: '100vh' }} container justify=\"center\">\n                <Grid\n                    className=\"playerListGrid\"\n                    item\n                    xs={leftSm}\n                    direction=\"column\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                >\n                    <PutNewCard\n                        roomInfo={props.roomInfo}\n                        socket={props.socket}\n                    />\n                </Grid>\n                <Grid\n                    className=\"stockTradeGrid\"\n                    container\n                    item\n                    direction={'column'}\n                    alignItems={'center'}\n                    justify={'space-around'}\n                    xs={middleSm}\n                >\n                    <Grid style={{ height: '25vh' }}></Grid>\n                    <StartGame\n                        roomID={props.roomID}\n                        music={props.roomInfo['music']}\n                        socket={props.socket}\n                        history={props.history}\n                        lobbyAudio={props.lobbyAudio}\n                        isLeader={\n                            props.roomInfo['roomLeader'] === props.socket.id\n                        }\n                    />\n                </Grid>\n                <Grid\n                    className=\"bidChatGrid\"\n                    item\n                    xs={rightSm}\n                    alignItems=\"stretch\"\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    style={{ margin: '2vh 2vw 14vh 2vw' }}\n                >\n                    <LobbyTabs\n                        roomLeader={props.roomInfo['roomLeader']}\n                        socketId={props.socket.id}\n                        musicList={props.musicList}\n                        roomID={props.roomID}\n                        roomInfo={props.roomInfo}\n                        time={props.time}\n                        socket={props.socket}\n                        SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                        history={props.history}\n                        lobbyAudio={props.lobbyAudio}\n                    />\n                    <Grid container direction={'column'} justify={'flex-end'}>\n                        <Grid\n                            style={{ margin: '0 0 10px 0' }}\n                            container\n                            justify={'space-between'}\n                        >\n                            <TextField\n                                type=\"text\"\n                                id=\"gameLink\"\n                                className=\"form-control text-center fw-bold bg-transparent\"\n                                value={`${window.location.protocol}//${window.location.host}/?id=${props.roomID}`}\n                                InputProps={{\n                                    className: classes.input,\n                                }}\n                                style={{ width: '80%' }}\n                                readOnly\n                            />\n                            <SnackbarProvider maxSnack={5}>\n                                <SnackAlertBtn\n                                    class=\"btn btn-warning\"\n                                    severity=\"success\"\n                                    message=\"링크가 복사됐어요! 😚\"\n                                    label=\"LINK\"\n                                    onAlert={true}\n                                    type=\"button\"\n                                    onClick={CopyURL}\n                                    id=\"copy\"\n                                />\n                            </SnackbarProvider>\n                        </Grid>\n                        <Paper\n                            style={{ height: '40vh' }}\n                            className={classes.paper}\n                        >\n                            <ChatRoom\n                                SetInputCtrl={SetInputCtrl}\n                                roomInfo={props.roomInfo}\n                                roomID={props.roomID}\n                                socket={props.socket}\n                                chat={props.chat}\n                            />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default withRouter(Lobby);\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n    Button,\n    Fab,\n    Grid,\n    Paper,\n    makeStyles,\n    TextField,\n} from '@material-ui/core';\nimport { Router, Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport SetPlayerName from './setPlayerName';\nimport Lobby from './Lobby';\n// import Sound from './Sound';\nimport backgroundImg from './videos/LobbyImage3.gif';\nimport LobbyMusic from './audios/music/Tetris99.mp3';\nexport default function EnterRoom(props) {\n    // const history = useHistory();\n    const [name, setName] = React.useState('');\n    const [player, setPlayer] = React.useState('');\n    const [roomID, setRoomID] = React.useState(props.roomID);\n    const [lobbyAudio] = useState(new Audio(LobbyMusic));\n    const [playing, setPlaying] = useState(true);\n    const history = useHistory();\n\n    const MusicStart = () => {\n        setPlaying(true);\n    };\n\n    useEffect(\n        () => {\n            console.log(lobbyAudio);\n            lobbyAudio.loop = true;\n            playing ? lobbyAudio.play() : lobbyAudio.pause();\n            props.sendAudio(lobbyAudio);\n        }\n        //  ?  [playing] 이 조건이 없으면 렌더가 불필요하게 많이 된다.\n        // ? 그런데 있으면 렌더가 한 번 모자라서 음악이 안나옴\n    );\n\n    let musicList = [];\n\n    const handleOnSave = (textInput, flag) => {\n        setName(textInput);\n        sendName(textInput, flag);\n    };\n\n    if (props.socket == null) {\n        // props.requestSocket('createPrivateRoom');\n    }\n\n    const sendName = (name, flag) => {\n        const params = window.location\n            .toString()\n            .substring(window.location.toString().indexOf('?'));\n        const searchParams = new URLSearchParams(params);\n        if (searchParams.has('id')) {\n            // 초대링크 받아서 온 사람\n            props.socket.emit('joinRoom_Req', {\n                playerID: name,\n                roomID: searchParams.get('id'),\n            });\n            props.socket.on('joinRoom_Res', (room) => {\n                props.SetRoomIdAndInfo(room);\n            });\n        } else if (flag === 0) {\n            // Private Room 방장\n            props.socket.emit('createPrivateRoom_Req', { playerID: name });\n            props.socket.on('createPrivateRoom_Res', (data) => {\n                props.SetRoomIdAndInfo(data);\n                musicList = data.musicList;\n            });\n        } else {\n            // flag === 1, joinPublic\n\n            props.socket.emit('joinPublic_Req', { playerID: name });\n            props.socket.on('createPublic_Res', (data) => {\n                console.log('enter public');\n                props.SetRoomIdAndInfo(data);\n                musicList = data.musicList;\n            });\n            props.socket.on('joinRoom_Res', (data) => {\n                console.log('enter public');\n                props.SetRoomIdAndInfo(data);\n                musicList = data.musicList;\n            });\n        }\n    };\n\n    const gotoLobby = () => {\n        let path = '/lobby';\n        history.push({\n            pathname: '/lobby',\n            state: { playerID: name },\n        });\n    };\n\n    if (props.roomInfo) {\n        gotoLobby();\n    }\n    return (\n        <>\n            <div\n                style={{\n                    backgroundImage: `url(${backgroundImg})`,\n                    backgroundSize: 'cover',\n                }}\n            >\n                {\n                    <SetPlayerName\n                        onSave={handleOnSave}\n                        name={name}\n                        setName={setName}\n                    />\n                }\n            </div>\n        </>\n    );\n}\n","import React, { Component, useEffect, useContext } from 'react';\n// import { withRouter as Route, Router, Switch,Redirect,  useHistory } from 'react-router-dom';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n    useHistory,\n} from 'react-router-dom';\nimport LayoutGridEffect from './LayoutGridEffect';\nimport EnterRoom from './EnterRoom';\nimport Lobby from './Lobby';\n\nexport default function Routes(props) {\n    const [time, setTime] = React.useState(0);\n    const isValid = () => {\n        if (props.socket) return true;\n        return false;\n    };\n    const [lobbyAudio, setAudio] = React.useState(null);\n\n    const sendAudio = (audio) => {\n        console.log('sendAudio : ', audio);\n        setAudio(audio);\n    };\n    console.log('@Routes // lobbyAudio:', lobbyAudio);\n\n    return (\n        <>\n            <Router>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={() => {\n                            return (\n                                <>\n                                    <EnterRoom\n                                        socket={props.socket}\n                                        requestSocket={props.requestSocket}\n                                        SetRoomIdAndInfo={\n                                            props.SetRoomIdAndInfo\n                                        }\n                                        roomID={props.roomID}\n                                        roomInfo={props.roomInfo}\n                                        sendAudio={sendAudio}\n                                    />\n                                </>\n                            );\n                        }}\n                    />\n                    <Route // ? 어떻게 /lobby 라우트에 필요한 인자 넘길지 고민중..\n                        path=\"/lobby\"\n                        render={() => {\n                            return isValid() ? (\n                                <Lobby\n                                    socket={props.socket}\n                                    // history={history}\n                                    roomID={props.roomID}\n                                    roomInfo={props.roomInfo}\n                                    SetRoomIdAndInfo={props.SetRoomIdAndInfo}\n                                    lobbyAudio={lobbyAudio}\n                                    // MusicPause= {MusicPause}\n                                    // MusicStart={MusicStart}\n                                />\n                            ) : (\n                                <Redirect to=\"/\" />\n                            );\n                        }}\n                        roomID={props.roomID}\n                        roomInfo={props.roomInfo}\n                    />\n                    <Route\n                        path=\"/game\"\n                        render={() => {\n                            return isValid() ? (\n                                <LayoutGridEffect\n                                    socket={props.socket}\n                                    requestSocket={props.requestSocket}\n                                    roomID={props.roomID}\n                                    roomInfo={props.roomInfo}\n                                    gameTime={time}\n                                    lobbyAudio={lobbyAudio}\n                                />\n                            ) : (\n                                <Redirect to=\"/\" />\n                            );\n                        }}\n                        roomID={props.roomID}\n                        roomInfo={props.roomInfo}\n                    />\n                </Switch>\n            </Router>\n        </>\n    );\n}\n","import React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport CanvasManager from './CanvasManager';\nimport { Button } from '@material-ui/core';\nimport ChartComponent from './ChartComponent';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LayoutGrid from './LayoutGrid';\nimport Routes from './Routes';\nimport dotenv from 'dotenv'\ndotenv.config();\n\nclass GameManager extends React.Component {\n    constructor(props) {\n        super(props);   \n        this.state = {\n            hash: '',\n            author: '',\n            message: '',\n            messages: [],\n            socketId: null,\n            roomID: null,\n            roomInfo: null,\n        };\n        // this.socket = io('15.165.129.19:5000'); //_ http://15.165.129.19:5000/\n    }\n    componentWillUnmount() {}\n    componentDidMount() {\n        let socketCopy = null;\n        let user_cnt = 0;\n        // this.socket = io(\"15.165.129.19:5000\"); //_ http://15.165.129.19:5000/\n        // this.socket.on(\"connect\", async () => {\n        //   console.log(\"connnected\", this.socket);\n        //   this.socket.emit(\"join\");\n        // });\n        const params = window.location\n            .toString()\n            .substring(window.location.toString().indexOf('?'));\n        const searchParams = new URLSearchParams(params);\n        if(process.env.REACT_APP_PROD){\n            let socket = io(process.env.REACT_APP_LOBBY);\n                socket.on('connect', () => {\n                    console.log('연결 요청');\n                    socket.emit('requireIpInfo', searchParams.get('id'), () =>{\n                    })\n                    console.log('requireInfo');\n                    socket.on('ipToConnect', (ipAddress)=>{\n                        console.log(ipAddress);\n                        this.socket = io(ipAddress);\n                        this.socket.on('connect', () =>{\n                            console.log(\"connected to \", ipAddress);\n                            this.setState({socketId: this.socket});\n                            this.socket.on('curCoin', (data) => {\n                                let today = new Date();\n                                let minutes = today.getMinutes(); // 분\n                                let seconds = today.getSeconds(); // 초\n                                let milliseconds = today.getMilliseconds(); // 밀리초\n                            });\n                            this.socket.on('socket', (socket) => {\n                                setSocket();\n                            });\n                            this.socket.on('update', function (data) {\n                                addMessage(data);\n                            });\n                            this.socket.on('get_chart_data', function (data) {\n                            });\n                            this.socket.on('update_users', function (data, user_count) {\n                                user_cnt = user_count;\n                            })\n                            socket.emit('disconnect');\n                        })\n            });\n            const setSocket = (socket) => {\n                this.setState({ socketId: socket });\n            };\n            const addSocket = () => {\n                if (this.socketId === null) {\n                    this.setState({ socketId: this.socket });\n                }\n            };\n            const addMessage = (data) => {\n                this.setState({ messages: [...this.state.messages, data] });\n            };\n                // 화면에 있는 6명에게 이 소켓이 부여되도록 하고싶어요 선생님 ㅠㅠ\n                // 이 자리에 들어가면 될거같아요\n                // room, start 버튼 도입하면 해결될 문제 !\n            });\n        }\n        else{\n            this.socket = io(process.env.REACT_APP_SERVER);\n            this.socket.on('connect', () => {\n                console.log('connnected', this.socket);\n                this.socket.emit('join');\n            });\n            this.setState({socketId: this.socket});\n            this.socket.on('curCoin', (data) => {\n                let today = new Date();\n                let minutes = today.getMinutes(); // 분\n                let seconds = today.getSeconds(); // 초\n                let milliseconds = today.getMilliseconds(); // 밀리초\n            });\n            this.socket.on('socket', (socket) => {\n                setSocket();\n            });\n            this.socket.on('update', function (data) {\n                addMessage(data);\n            });\n            this.socket.on('get_chart_data', function (data) {\n            });\n            const setSocket = (socket) => {\n                this.setState({ socketId: socket });\n            };\n            const addSocket = () => {\n                if (this.socketId === null) {\n                    this.setState({ socketId: this.socket });\n                }\n            };\n            const addMessage = (data) => {\n                this.setState({ messages: [...this.state.messages, data] });\n            };\n            this.socket.on('update_users', function (data, user_count) {\n                user_cnt = user_count;\n                // 화면에 있는 6명에게 이 소켓이 부여되도록 하고싶어요 선생님 ㅠㅠ\n                // 이 자리에 들어가면 될거같아요\n                // room, start 버튼 도입하면 해결될 문제 !\n            });\n        }\n    }\n\n    TestEmitButton = (props) => {\n        return (\n            <>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.sendComment}\n                >\n                    소켓 연결 확인용 버튼(action::'test')\n                </Button>\n            </>\n        );\n    };\n\n    sendComment = (ev) => {\n        ev.preventDefault();\n        this.socket.emit('test', {\n            comment:\n                '연결 테스트 메시지 입니다. 클라이언트와 서버가 연결되어 있습니다.',\n        });\n    };\n    RequestSocket = (component, socket) => {\n        if (socket != null) return;\n        console.log(\n            component + ' 에서 socket을 요청했습니다. 랜더링을 다시 합니다.'\n        );\n        this.setState({ socketId: this.socket });\n    };\n\n    SetRoomIdAndInfo = (data) => {\n        this.setState({\n            roomID: data.roomID,\n            roomInfo: data.roomInfo,\n        });\n        console.log('SetRoomIdAndInfo. 랜더링을 다시 합니다.');\n    };\n\n    render() {\n        const socket = this.state.socketId;\n        const roomID = this.state.roomID;\n        const roomInfo = this.state.roomInfo;\n        const lobbyAudio = this.state.lobbyAudio;\n\n        return (\n            <>\n                <Routes\n                    socket={socket}\n                    requestSocket={this.RequestSocket}\n                    SetRoomIdAndInfo={this.SetRoomIdAndInfo}\n                    roomID={roomID}\n                    roomInfo={roomInfo}\n                    sendAudio={this.sendAudio}\n                    // lobbyAudio={lobbyAudio}\n                />\n            </>\n        );\n    }\n}\nexport default GameManager;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport GameManager from './GameManager';\nimport Test from './Test';\nimport GameOverModal from './GameOverModal';\n\n\nReactDOM.render(\n    <div className='GameManager'>\n        <GameManager/>\n        {/* <ShiningButton/> */}\n\n    </div>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}